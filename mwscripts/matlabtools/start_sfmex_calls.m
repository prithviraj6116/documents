function callNumRet = start_sfmex_calls(varargin)
    callNumRet = 0;
    persistent callNum;
    persistent tabNum;
    if isempty(callNum)
        callNum = 0;
    end
    if isempty(tabNum)
        tabNum = 0;
    end
    return;
    if(isempty(varargin))
        callNumRet = tabNum;
        tabNum = tabNum - 1;
        return;
    end
    callNum = callNum + 1;
    tabNum = tabNum + 1;
    if nargin >= 1 && ischar(varargin{1}) && contains(varargin{1},{...
            'get',...
            'IdToHandle',...
            'GetSFBlockData',...
            'find',...
            'set',...
            'Private',...
            'feature',...
            'Feature',...
            'flag',...
            'AllSubstatesIn',...
            'FunctionsIn',...
            'ChartsOf',...
            'SimBasedStatesIn',...
            'DataIn',...
            'DataOf',...
            'SubstatesIn',...
            'EventsOf',...
            'EventsIn',...
            'MachinesOf',...
            'bdb.jar',...
            'JunctionsIN',...
            'TransisionsIn',...
            'ParentOf',...
            'IsReactiveTestingMachine',...
            'DataParsedInfo',...
            'CodegenNameOf',...
            'SubstatesOf',...
            'get',...
            'get',...
            'ishandle'})
        return;
    end
%     if nargin>=2 && isequal(varargin{1},'slsf') && isequal(varargin{2},'mdlInit')
%         disp(12);
%     end
    callNumRet = callNum;

    currentStack = dbstack;
    v='';
    for i = 2:length(currentStack)
        [~,filename,ext] = fileparts(currentStack(i).file);
        fullfilepath = which(['private/' currentStack(i).file]);
        if isempty(fullfilepath)
            v=[v '<a href="matlab:opentoline(''' currentStack(i).file ''', ' num2str(currentStack(i).line) ')">' filename ext ':' currentStack(i).name '</a>' newline];
        else
            v= [v '<a href="matlab:opentoline(''' fullfilepath ''', ' num2str(currentStack(i).line) ')">' filename ext ':' currentStack(i).name '</a>' newline];
        end
    end
    mstackfilename = ['sfmexcall/stack_' num2str(callNum) '_m.txt'];
    fileID = fopen(mstackfilename,'w');
    fprintf(fileID,'%s',v);
    fclose(fileID);
    cstackfilename = ['sfmexcall/stack_' num2str(callNum) '_c.txt'];
    fileID = fopen(cstackfilename,'w');
    fprintf(fileID,'%s',slsvInternal('NativeStack')); 
    fclose(fileID);
    
    varargin2 = '';
    if ischar(varargin{2})
        varargin2 = varargin{2};
    end
%     disp([num2str(callNumRet) ':  '   '<a href="matlab:disp(fileread(''' mstackfilename '''));disp([''' num2str(callNum) ' '' '' ' varargin{1} ' '' '' ' varargin2 ''']);">mst</a>'  ' <a href="matlab:nativestack(fileread(''' cstackfilename '''));disp([''' num2str(callNum) ' '' '' ' varargin{1} ' '' '' ' varargin2 ''']);">cst</a>']);
    disp([getTabs(tabNum) num2str(callNumRet) ':  '   '<a href="matlab:newline;disp(''---------c++ stack----------'');newline;nativestack(fileread(''' cstackfilename '''),false);disp(''--------mstack---------'');disp(fileread(''' mstackfilename '''));disp(''-----sfmex-------'');disp([''' num2str(callNum) ' '' '' ' varargin{1} ' '' '' ' varargin2 ''']);disp(''---------stack ends---------'');">cmst</a> <a href="matlab:nativestack(fileread(''' cstackfilename '''),true);disp(''---------m stack---------'');disp(fileread(''' mstackfilename '''));disp(''--------sfmex-----------'');disp([''' num2str(callNum) ' '' '' ' varargin{1} ' '' '' ' varargin2 ''']);disp(''-------stack ends------------'');">cmstp</a> :' char(strtrim(formattedDisplayText(varargin)))]);
end
function tabs = getTabs(numTabs)
    tabs = '';
    for i = 1:numTabs
        tabs = [tabs ' ']; %#ok<AGROW>
    end
end
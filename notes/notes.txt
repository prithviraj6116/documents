stack decoder online tool : http://www-sbtools-ah.mathworks.com/hub/share/sbtools/apps/stack_trace/index.cgi/stacktrace  
abca   



CTB="sl_graphical_classes sl_engine_classes"
simulink functions in SF:
MAL: requires input S/T/C specified. hence during propagation STC of callsite are verified with SLport STC.
    Propagation:  SLFuncIn->SlFuncOut->CallSiteOut   SLFunctionIn==CallSiteIn SLFunctionOut==CallSiteOut
CAL: can let input S/T/C inherit but callsite does not propagate S/T/C to input parameter. so S/T/C set in SL at propagation. And during codegene callsite and SLport STC are verfied
     Propagation: SLFuncIn->SlFuncOut         CG: SLFunctionIn==CallSiteIn SLFunctionOut==CallSiteOut


For Simulink states in SF:
MAL/CAL: chart inputs and outputs can be used as ports. ports can be have S/T/C inherited or explicit but need to match S/T/C to corresponding chart input/output
MAL/CAL propagation for inputs: SLIn->mainIn->SLStateIn->SLStateOut->mainOut->SLOut->backPropagationA

Back propagaiton trick: 
Add SLState with outChart1->inChart1. 
For ML chart you also need to write "ex:outChart1=inChart1" on one of the states.

Atomic Subchart Mapping: 
input:slIn->mainIn->subchartIn->back
output:mainOut->subchartOut->mainOut->slOut->back
MAL: mapped main chart output and local data must have STC specified
CAL: mapped main chart output and local data must have STC specified. Only exception is if main output is mapped to subchart output then main output can be left inherited. In this case, back propagation might set types

MAL: O be written, L (if used in chart) be written
CAL: O/L are auto-written to 0s

MAL: L if IV exists, no error
MAL: L if no IV and no write in chart, we get error compile-time FULL_ASSIGNMENT_REQUIRED_ERROR
MAL: L if no IV but written in chart but used before write, then runtime error READ_BEFORE_WRITE_ERROR


MAL: IV is not vectorized as per Size
CAL: IV is i   vectorized as per Size



MAL: Size is     inferred from IV
CAL: Size is NOT inferred from IV

stateflow data:
Property Inspector
Name, Port, Size, Type, InitialValue, FirstIndex 
(LoggingSection) LogSignalData(UseSignalName, LimitDataPointToLast, Decimation), TestPoint,  
(AdvancedSection) VariableSize, ResolveToSignalObject, InitialValueFromWorkspace, LockFixedPointTools, 
           TUnable, 
           Unit, Complexity, Range


M Chart: FI 
C Chart: TU

Input Scope: IV, LS, RTSO, IVFW, TU
Local Scope: P, VS, TU, U
Parameter Scope: P, IV, LS, VS, RTSO, IVFW, U, R
DSM Scope: all but S
Constant Scope:  P, LS, VS, RTSO, IVFW, TU, U, C, R

Built-in numeric except boolean:
Boolean: C
FixedPoint: same as "Built-in numeric except boolean"
Enumeration: U, C, R
Bus: IV, IVFW, U, C, R
String: S, FI, VS, LFPT, U, C, R

P: I/O
U,R: I/L/O built-in
C: I/O/P non-boolean-built-in
VS: M charts and M based functions in C chart. non-string. for buses and for param it is ignored.
TU: P in M
IV,IVFW: L/O non-bus
LS: L/O
RTSO: L/O 


mouse cursor : sudo update-alternatives --config x-cursor-theme


sbmake -distcc DEBUG=1 CTB="shared_cgxe foundation/matrix cgir_vm_rt cgir_vm_core shared_simulink_lang_blocks sl_utility sl_compile sl_services sl_graphical_classes sl_loadsave sl_main"

simulink compiler:toolbox/coder/simulinkcoder_core/+coder/+internal/ModelBuilder.m  at line number 723 all the raccel files are generated and begins to build
custom code building:/local-ssd/ppatil/coverage4/matlab/toolbox/shared/cgxe/cgxe/private/createCustomCodeDLL.m : 72
stateflow code generation: private/code_chart_source_file.m and /local-ssd/ppatil/coverage4/matlab/toolbox/stateflow/stateflow/private/targetman.m : 429
jit:serializeJITEngine 
https://inside.mathworks.com/wiki/Generating_C%2B%2B_Source-To-Test_Mapping


mingw vs cygwin: cygwin is compatibility layer to port linux application source code to build on windows by replacing linux syscalls to windows OS calls. mingw is gnu port for windows. it may not have full compatibility with linux gnu.
c/c++: main function 2 signature int main() and int main(int argc, char* argv[], char* environmentVariables[]), third argument is implementation depenedent.

matlab online :  matlab.internal.webgui
get_param(0, 'AcceleratorUseTrueIdentifier')
get_param(gcbh,'OutputFunctionCall')
set_param(0,'globalAccelVerboseBuild','on')
simulink: algebric loop, variable sized signals, zero crossing, minor step updates,

qemu-system-x86_64 -kernel /boot/vmlinuz-4.19.0-14-amd64 -no-kvm -nographic -m 2049M -initrd /boot/initrd.img-4.19.0-14-amd64 -hda /local-ssd/ppatil/gitRepo1/buildroot/output/images/rootfs.ext4  -append "console=ttyS0 root=/dev/sda rw"


/local-ssd/ppatil/installs/llvm1build/bin/llc -filetype=obj cpp1.ll -o cpp1.o  -O3 --debug-pass=Executions
/local-ssd/ppatil/installs/llvm1build/bin/clang++   cpp1.cpp  -g -O3 -o cpp1_1.exe -mllvm --debug-pass=Executions


clang -emit-llvm -o cpp1.ll cpp1.cpp
clang -emit-llvm -S cpp1.bc cpp1.cpp
llvm-as -o cpp1.bc  cpp1.ll
lli cpp1.ll(bc)
llc -filetype=obj -o cpp1.o cpp1.bc(ll)
llc -filetype=asm(default) -o cpp1.s cpp1.bc(ll)

ld.lld --hash-style=both --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cpp1.exe /lib/x86_64-linux-gnu/crt1.o /lib/x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/8 -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/local-ssd/ppatil/installs/llvm1build/bin/../lib -L/lib -L/usr/lib cpp1.bc-llc.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/8/crtend.o /lib/x86_64-linux-gnu/crtn.o  --lto-O3


LD_PRELOAD:
http://www.goldsborough.me/c/low-level/kernel/2016/08/29/16-48-53-the_-ld_preload-_trick/#:~:text=Outro-,Introduction,shared%20library%20before%20other%20libraries.

/local-ssd/ppatil/installs/llvm1build/bin/clang++  -E/S/c  cpp1.cpp  -o cpp1 -Xclang -ast-view/-ast-dump/-emit-llvm
hardinfo : hardware info
lscpu

cat /sys/devices/system/cpu/cpu0/cache/index0/size 
cat /sys/devices/system/cpu/cpu0/cache/index0/coherency_line_size
index0: Level1Data 
index1: Level1Instruction 
index2: Level2 
index3: Level3
getconf LEVEL3_CACHE_LINESIZE
lscpu
getconf -a

sram: https://www.youtube.com/watch?v=mwNqzc1o5zM&ab_channel=UdacityUdacity
sram: transi
atx motherboard:

pci/pcie/agp/isa slots: exansion slots
ssl(143) vs ssh(22): secure socket layer, transport layer security, secure shell
public key infrastructure(PKI), digital certificates,
clang  -Xclang -ast-view c1.c
clang -Xclang -ast-dump  c1.c
cross compilation:https://www6.software.ibm.com/developerworks/education/l-cross/l-cross-ltr.pdf 
chip manufactures: intel vs amd
computer manufactures: apple, dell, hp, ibm, asus, lenova, samsung
software: microsoft, google, 
amd: advanced micro chips
compile with custom libc
 export env1=/opt/mylibc1;export lib1=$env1/lib;export include1=$env1/include;gcc -nostartfiles -I $include1 -L $lib1  $lib1/crt1.o $lib1/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o $lib1/crtn.o -Wl,-rpath=$lib1,-I$lib1/myld.so -lstdc++ -g  -o out1 c1.c(pp)

 export env1=/opt/musl1;export lib1=$env1/lib;export include1=$env1/include;gcc -nostartfiles -I $include1 -L $lib1  $lib1/crt1.o $lib1/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o $lib1/crtn.o -Wl,-rpath=$lib1,-I$lib1/myld.so -lstdc++ -g  -o out1 c1.c(nocpp)

python compiler: nitka, brython
stackless python
IIFE: immediately invokded function expression
linux set primary window or display in multi display systems: xrandr --output VNC-1 --primary --right-of VNC-0
cat /etc/os-release
cat /proc/version
cat /etc/debian-version
dpkg -S `which ld`
cat /proc/cpuinfo
gcc -Xlinker -rpath=/local-ssd/ppatil/installs/glibc1/ -Xlinker -I/local-ssd/ppatil/installs/glibc1/elf/ ../pppGitHub/c1.c  -o c1


advanates of little endian: 
1. casts are noop since address of 1(char),2(short/half),4(int/float/word),8(longint/double/doubleword/size/addr) byte int would be same
2. for 8 bit systems or for big integers/big integers: addition and subtraction can be pipelined or parallelized since lsb needs to
perform addition/subtraction before msb

load_elf_binary: linux calls to load elf binaries

ld is static linker, ld.so is loader and dynamic linker: 
https://unix.stackexchange.com/questions/438068/what-is-the-difference-between-the-runtime-linker-ld-so-and-the-prelink-progra


_dl_start_user: to debug ld.so 
https://sourceware.org/glibc/wiki/Debugging/Loader_Debugging#Debugging_With_an_Alternate_Loader
rpath vs -L : gcc : 
cat /etc/cpuinfo: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/arch/x86/include/asm/cpufeatures.h

https://www.microcontrollertips.com/difference-between-von-neumann-and-harvard-architectures/

alignment:https://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/ 
std::has_unique_object_representation
alignas
std::alignment_of
__attribute__((packed))


standardlayout object
p4 sync -N ...
info vtbl variable
sb -nosplash -nodesktop -r "sfnew;bdclose all"

exception handling: LSDA, CFI, personality function, unwind.h, setjmp, longjmp,
goto
-fPIC vs load time relocation
static library vs shared library. 
shared library can be statically linked (-fPIC) vs dynamic linked (load time relocation)
dynamically loaded
disadvantate of dynamicalled linked shared library:https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/
https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/
1. non-sharable text section, ram usage increase since each exe that loads
library needs separate copy 2. text section needs writable, security 3. load time increases

can we relink shared library online?
.got: global offset table
.bss: block started by symbol
plt: procedure location table
https://reverseengineering.stackexchange.com/questions/1992/what-is-plt-got


info proc mapping
info sharedlibrary
https://reverseengineering.stackexchange.com/questions/6657/why-does-ldd-and-gdb-info-sharedlibrary-show-a-different-library-base-addr


cpsr: control pgogram status register
pc: program counter
sp: stack pointer
bp: base pointer
gpio: general purpose io
uart: universal asynchronous receiver trasmitter
isr: interrupt service routine
mmu: memory management unit i2c, spi: serial peripheral interface i2c: inter integrated circuit
echo $XDG_CURRENT_DESKTOP: debian current desktop  mate,kde,xfce,gnome,
man hier : show linux file folder root hierarchy
FHS: Filesystem Hierarchy Standard
web server interfaces: cgi: common gateway interface :mod_php, java servlets, python WSGI, ruby rack
sbin: superuser bin files
/opt vs /usr/local

https://www.debian.org/doc/manuals/debian-faq/pkgtools.en.html: apt install;apt
install;apt show;apt list --upgradable; apt list packagename; apt list; apt show
packagename; dpkg --search xxx;dpkg --listfiles packagename

find -L / -samefile path/to/foo.txt

get macros:g++ -dM -E -x c++ /dev/null 
libc dietlibc uclibc eglibc musl


custom libc with gcc
export env1=/opt/musl1;export lib1=$env1/lib;export include1=$env1/include;gcc -g -o c1 -nostdlib c1.c -I $include1 -L $lib1  -Xlinker $lib1/crt1.o -Xlinker $lib1/crti.o -lc  -Xlinker -rpath=$lib1 -Xlinker -I $lib1/ld-musl-x86_64.so.1 -Xlinker $lib1/crtn.o 
custom libc with g++
export env1=/opt/mylibc1;export lib1=$env1/lib;export include1=$env1/include;g++  -nostdlib  -I $include1 -L $lib1  -Xlinker $lib1/crt1.o -Xlinker $lib1/crti.o   /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o -lstdc++ -lc  /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o -Xlinker -rpath=$lib1 -Xlinker -I $lib1/myld.so -Xlinker $lib1/crtn.o -nostdlib -o cpp1 cpp1.cpp


crt1.o crti.o crtn.o:https://wiki.osdev.org/Creating_a_C_Library 

fpie fpic :https://stackoverflow.com/questions/2463150/what-is-the-fpie-option-for-position-independent-executables-in-gcc-and-ld 

return oriented programming attacks:https://en.wikipedia.org/wiki/Return-oriented_programming 

compression: xz, lzma, gzip, bzip2 https://unix.stackexchange.com/questions/108100/why-are-tar-archive-formats-switching-to-xz-compression-to-replace-bzip2-and-wha

tar -xf or tar -xjf (bzip2)
linux package: bc: arbitrary precision calculator, xz-utils: compression,

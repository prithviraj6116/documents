doto: habit stacking, habit tracking, make it obvious, make is easy, make is satisfying. add some immediate rewards     


doto: books to read:


temp:class_of, chart, moore, labelstring, coverageInfo,triggered,name      test
matlab commands abc
subsref
subsassign


Reviewboard RB review board review-board review helper compilation
1. lambda to initialize variable with a complex expression
2. error('nonId') vs assert('nonId'); later does not fail test and used for non-customer visible error handling
3. pause could cause IMT regression like this one https://reviewboard.mathworks.com/r/802800/
System composure license: https://web.yammer.com/main/org/mathworks.com/threads/eyJfdHlwZSI6IlRocmVhZCIsImlkIjoiMTcyMTE3MDAzNjk1NzE4NCJ9
SLDV:
sldvoptions
sldvcomat
autoverifier
what is relevance of "states when enabling" in function-call-subsystem(triggered/periodic)

p4 clients -a -u ppatil -U
p4 client -df -Ds ppatil.ulcm122ad
killall mate-panel : to reboot mate desktop without logout. it kills mate desktop process and debian automatically starts new mate desktop process
killall == pkill -9 -f
----------------
non-jit modelName_sfun_registry.c
sf_machine_global_initializer
  sf_register_machine_exported_symbols
    sf_modelName1_register_exported_symbols
    sf_modelName2_register_exported_symbols
sf_machine_global_initializer_called
sf_machine_global_terminator
    modelName1_terminator
    modelName2_terminator
sf_machine_global_method_dispatcher
  sf_modelName_method_dispatcher
ProcessMexSfunctionCmdLineCall
  sf_mex_unlock_call
  sf_process_check_sum_call
     sf_modelName_check_sum_call
  sf_process_get_eml_resolved_functions_info
     sf_modelName_get_eml_resolved_functions_info
  sf_process_get_jit_fallback_info
     sf_modelName_get_jit_fallback_info
  sf_process_get_post_codegen_info_call
     sf_modelName_get_post_codegen_info_call
  sf_process_get_third_party_uses_info_call
     sf_modelName_get_third_party_uses_info_call
  sf_process_get_updateBuildInfo_args_info
     sf_modelName_get_updateBuildInfo_args_info
-----------------
non-jit modelName_sfun.c :
sf_modelName_method_dispatcher
   c3_modelName_method_dispatcher

sf_modelName_process_check_sum_call
    c3_modelName_process_check_sum_call
sf_modelName_get_eml_resolved_functions_info
   c3_modelName_get_eml_resolved_functions_info
sf_modelName_get_jit_fallback_info
   c3_modelName_get_jit_fallback_info
sf_modelName_get_post_codegen_info
   c3_modelName_get_post_codegen_info
sf_modelName_get_third_party_uses_info
   c3_modelName_get_third_party_uses_info
sf_modelName_get_UpdateBuildInfo_args_info
   c3_modelName_updateBuildInfo_args_info

modelName_initializer
modelName_terminator
sf_modelName_register_exported_symbols
static SfOptimizationInfoFlags sOptimizationInfoFlags;
load_modelName_optimization_info
unload_modelName_optimization_info
------------------
non-jit c3_modelName.c
c3_modelName_method_dispatcher
   mdlSetupWorkWidths_c3_modelName
   mdlSetupRuntimeResources_c3_modelName 
     init_dsm_address_info(chartInstance);
     init_simulink_io_address(chartInstance);
     mdl_setup_runtime_resources_c3_modelName
   mdlProcessParameters_c3_modelName
     initialize_params_c3_modelName

c3_modelName_process_check_sum_call
c3_modelName_get_eml_resolved_functions_info
c3_modelName_get_jit_fallback_info
c3_modelName_get_post_codegen_info
c3_modelName_get_third_party_uses_info
c3_modelName_updateBuildInfo_args_info


sf_opaque_initialize_c3_modelName
  initialize_params_c3_modelName
  initialize_c3_modelName
enable_c3_modelName
disable_c3_modelName
mdlRTW_c3_modelName
mdl_cleanup_runtime_resources_c3_modelName
-------------------------



BUGS /
21. g1614555, g1516596, g2793685 escalation 2298771: persistent variables in continuous eml charts
20. testpoint g2573846 g2554834
    set_param(modelName,'RTWCAPISignals','on') for test-points
19. coverage is enabled(without user enabling it) for non-jit code in   CtxCoderOptions::isCodingCoverag
18. data logging (without test-point) adds capi code(test point specific) code due to  get_logged_and_tp_data during non-jit code which is not-useful since user cannot use it in floating scope
17. save-restore code might be avoided if save operating point is not enabled  
16.  CdrActionSubsysChartManImpl::appendCodeInMdlSetupRuntimeResources, optimize when fActionsStates->empty()
1. sbmake after p4 reverting a file still compiles it
1. sldd enum export does not work
2. zerojitemissions is not respected by emlreport which is always created at slprj/_sfprj/EMLReport/
3. nonjit or jit simulation does not always generate single code for single specialization
4. sfgco on modelref charts does not work
5. enum of type u32/i64/u64 works in MATLAB not in SF/Simulink
6. imported enum where enums are same in c and m but values are not: value taken from cenum and hover over does not work.
7. isTemporaryMachineContext: is not required anymore
8. do we need GEN_FCN_GET_STATEFLOW_RTWCONTEXT? if so, why?
9. ctxInfo->isCodingSimCG: might not be used 
10. targetman.m#184 is redudant   infomatman('save','binary',machineId,mainMachineId,targetId,binaryDateNum);
11. dsm with diagnostics enabled written in for loop in EML chart
12. PI options in simulink function in SF chart are unnecessary(1. sample time type (both works same i.e. as triggered) 2.subsystem reference(errors out) 3. show subsystem reinitialize port 4. show port labels 5. 
13. copying Simulink-Function-In-SF to Simulink-Canvass, marks function-call-subsystem as non-atomic
14. usesGlobalEventVar is unused
15. codingNoInitializer might never be true
16. CAL->localdata->modelexplorer->descriptiontab->savetoworkspace. when enabled, such CAL chart cannot be in for-each.
    we might be able to remove this restriction.
17. vim status bar function name does not work with namespace A::B format 


15. CAL->localdata->modelexplorer->descriptiontab->savetoworkspace: is still visible and works. for MAL it is hidden
    when enabled, such CAL chart does not work in for-each subsystem

Mathworks Apps
Mathworks Products
1: Coders: MATLAB, Simlink, Embedded, HDL, GPU, PLC, Filter Design HDL, 
2: Compiler: MATLAB, Simulink, MATLAB SDK, 
3. VnV: Test, Design Verifier, Design Optimizer, Coverage, 
        HDL Verifier, Check, Code Inspector, Requirement Toolbox,
        Polyspace Code Prover, Polyspace Bug Finder, Polyspace Ada,
        IEC Certification, DO Qualification Kit, 
4. MATLAB: Drive, Grader, In the Cloud, Mobile, Parallel Server, 
           Report Generator, Web App Server
5. Simulink: Control Design,  RealTime, Desktop RealTime, Report Generator,
             Stateflow, System Composure, 
6. Toolbox/Blockset/Testbench: 
   6.1 5G, LTE, Wireless HDL, Antenna, Bluetooth, Communication,
       Industrial Communication, RADAR, LIDAR, RF Toolbox, 
       RF Blockset, RF PCB, Satellite Communication, Signal Processing,
       DSP System, DSP HDL, WLAN, Wavelet, Wireless Testbench, UAV,
       Signal Integrity, Mixed Signal, 
   6.2 Image acq, Image processing, Vision HDL, Computer Vision, 
       Audio,
   6.3 SimBiology, Sensor Fusion and Tracking, ROS, Robust Control, 
       RoadRunner, RoadRunner Scenario, Risk Management, Reinforcement 
       Learning, Predictive Maintenance, Powertrain, Parallel Computing,
       Phased Array System, Partial Differential Equations, Optimization,
       Navigation, Motor Control, Model Predictive Control, Model-Based 
       Calibration, Mapping, Instrument Control, Global Optimization, Fuzzy
       Logic, Financial, Financial Instruments, Econometric, Deep Learning, 
       Deep Learning HDL, DDS, Datafeed, Database, Data Acq, Curve Fitting,
       Control System, BioInformatics, AUTOSAR, Automated Driving, Aerospace
       Toobox, Aerospace Blockset, Installation and Licensing, SerDes, 
       SimEvents, SoC, Spreadsheet Link, Statistic and Machine Learning, 
       Symbolic Math, Text Analysis, ThingSpeaks, Vehicle Dynamics, Robotic 
       system, Robotic control, Fixed-point,
7. Simscape: Driveline, Electric, Fluids, Multibody, Multibody Link



REVIEW BOARD
link time optimizations, initialization, initializer list, uniform initialization, 
default/copy/move construction, copy/move assignment, explicit/defaulted/deleted 
constructor,bitset, boost dynamic bitset, vector bool , vector char, bitset enum
label#1,make_array:if want to add/delete elment;we dont need to count,make_*: no
need to enumerate types;e.g. make_tuple,make_pair;zeroemission; relational oper-
tors on differnet types(-1>1), src/stateflow allowed warnings, 
literal/aggregate/standardlayout/trivial/pod, array/vector/valarray,bitset/vectorbool


C++20/RB/modernize:source_location

C/C++
non-exported symbols: nm libname.so | grep ' t '
exported symbols:     nm libname.so | grep ' T '
tuple implemention: multiple inheritance via variadic template
sizeof...
print type name:
boost::core::demangle(typeid(b1).name())
boost::typeindex::type_id_runtime(b1).pretty_name()
print makefile information: mw gmake -p -f bdbgenerator.mk  | grep -i matlabjavap
c runtime library
initializer_list is a language feature that requires #include<initializer_list>
dynamic cast target type must be pointer or reference;
signal handleer: sigint,sigterm,sigsegv,sigabrt,sigill,sigfpe.
no signal handler: sigstop
abort/assert calls sigabrt
Ctrl-c calls sigstop
Ctrl-z calls sigint
constructor: converting(normal/non-explicit) vs explicit 
user-defind conversion functions: converting(normal) or explicit
narrowing conversion warnings only for direct-list-initialiation or copy-list-initialiation
typeid keyword requires #include<typeinfo> 
decltype<declval<T>(constructorargs).nonstaticfunction(functionargs)> to get a return type of non-static function's return value without class object
declval constructorargs and functionargs are not evaluated.
declval can only be used in unevaluated context;
unevaluted vs evaluated context:
tie, make_tuple and forward_as_tuple
types: fundamental(arithmetic,void, nullptr_t),derived(function,array,pointer,member_pointer(?),reference), user-defined(class,enum,union, typedef(?)),
       arithmetic(integral,floating),integral(bool,char,int),floating(float,double),member_pointer(member_object,member_function),reference(lvalue_reference,rvalue_reference)
       scalar(arithmetic,nullptr_t,pointer,member_pointer,enum),compound(derived,user-defined)
       object(scalar,array,union,class) non_object(void,function,reference)
standard layout vs aggregate vs trivial vs literal vs POD: Code_101   https://stackoverflow.com/questions/6496545/trivial-vs-standard-layout-vs-pod
SFINAE: std::void_t vs enable_if 
std::any vs std::variant: https://stackoverflow.com/questions/56303939/c-stdvariant-vs-stdany  
     any==void* variant==union
c enum forward declaration is incomplete, c++ enum forward declaration with associated type is complete declaration.

MWTOOLS

emacs: sbe, vertical split:c-x-3, gdb:c-x-m-d, breakpoint: c-x-a-b
valgrind:
   cd /mathworks/devel/sandbox/jaadm/Bmain_valgrind_debug/latest_valgrind_pass; mw -using Bmain sbs clone create -snapshot clone_me -n q1_valgrind
   sbsync-and-make -src-root Bmain -run-sbvalsetup -build-type debug -ignore-failed-modules
   sb -memmgr "debug,nonewhandler" -nodesktop -nosplash -nojvm
   MATLAB_MEM_MGR="debug,noleakcheck" "/local-ssd/ppatil/dsm1/matlab/bin/glnxa64/MATLAB" -nosplash -softwareopengl -nodesktop
   http://inside.mathworks.com/wiki/Category:Native_Memory_Diagnostics
   >>feature('memmgr')
   sbmake --eval=BASE_REQS=valgrind DEBUG=1
   IVF:invalid free, IVR: invalid read, IVW: invalid write, MMF: mismatched free, UNC: un-initialized condition, UNV: uninitialized value
find vs fd: fd ignores hidden files
Lint Commands:
edittime.setDisplayIssues('off')
sf('GetLintIssues', c.Id)
sf('Feature', 'SFLint', 0)

get optimiztion level from dll/so file
readelf --debug-dump=info libmwstateflow.so.dbg   | grep -i "\-O2"

sbruntests -cfg sfcore -cfg slstring -cfg reqtable
sbmake/sbcc DEBUG   Mode == DEBUG=1 ASSERTS=1 => -g -O0 
sbmake/sbcc MIXED   Mode == DEBUG=  ASSERTS=1 => -g -O2
sbmake/sbcc RELEASE Mode == DEBUG=  ASSERTS=0 => -g -O2 -DNDEBUG
in non-jit genereted code-directory, open .mku file and add -v to CC as "CC = /local-ssd/ppatil/fexp2/matlab/bin/mex -R2018a -v" 
sim(modelName,'SimulationMode','normal'/'accel'/'rapid'/'software');
rtwbuild(modelName);slbuild(modelName,noarg/'StandaloneCoderTarget'/'ModelReferenceSimTarget');Code_102
c = sfgco; sf('PrettyPrintAst',c.id)
md=Simulink.ModelAdvisor.getModelAdvisor('ppp1');w1=md.runCheck('mathworks.hism.hisf_0015');md.displayReport;

Linux/Windows:
du -sh *
df -h | grep ppatil
watch: to repeat commands every x seconds
desktop envorinment: sudo update-alternatives --set x-session-manager /usr/bin/mate-session
                     ls /usr/share/xsessions
IDEAS 
12. sbreviewboard with clone+sbbackup+sbsmartbuild
11. debug dll copy from some cronjob sandbox to sbsyncmaster/sbclone
10. loadSymbolsForBreakpoints() in gdb to be used by emcas, vscode
9. warn on putting breakpoint on dll build without -O0
1. gdb debug symbols: does it load every time I run MATLAB in same session. can it be made faster
2. gdbserver, gdb like fsb
3. hybrid stack: MATLAB, c++, JavaScipt,
4. matlab based GUI like fsb
5. issues with debian 11 gdb: continue while program is running
6. call stack graph traversing outside debugging
7. gdb generic pval to work with enum,enum class,macros,pointers
8. sbruntests -cfg sfcore_not_in_bstateflow.txt
8. vim gdb fixes: (1) stack frames "see more frames" link issue 
                  (2) Downstack (D) when in last frame file but on different line 
                  (3) gdb window refresh issue 
                  (4) remove tty and prompt
                  (5) run with local gdb (/usr/bin/gdb)
                  (6) jit crash
                  (7) fix logging
                  (8)   ../../src/gdb/value.c:3968: internal-error: Unexpected lazy value type
                  (9) merge sbv-tools to sbv-runtime
                  (10)common viminfo
                  (11)common gdbinit
                  (12) attach_sf layer

vs code:
/mathworks/inside/labs/dev/matlab_coder_tools/vscodeproj/vscodeproj/vsproj.py --proj stateflow_core,sf_analysis,sf_cdr,sf_dd,sf_il,sf_ir,sf_req,sf_req_analysis,sf_services,sf_shared,sf_xform,cgir_core,cgir_algorithm,eml_inference --clangd
sbm code vsprojWorkspace.code-workspace


MATLAB
ML enumeration properties v=mycolors.Red; v.prop1; where prop1 is the property of mycolors and Red is enumeration of mycolor
classdef mycolors  Or classdef mycolors < uint8 (now enum will implicitly convert to uint8)
enumeration
red,blue,yellow
end
end

Simulink/Stateflow

target tlc: https://www.mathworks.com/help/rtw/ug/compare-system-target-file-support.html
code replacement library custom crl using configuration->codegeneration->interface->add-custom CRL, 
create tables (one for each replacement) and save tables in registration file and then
>>RTW.TargetRegistry.getInstance('reset');

TargetStyle={Auto,StandaloneTarget,SimulationTarget}
SimulationMode={normal,accelerator,rapid-acceleator,software-in-loop, hardware-in-loop,external}
SimulationStatus={stopped, updating, initializing, running, paused}
RapidAcceleratorSimStatus={starting, terminating, active, inactive,dormant}

hModelCodegenMgr = coder.internal.ModelCodegenMgr.getInstance(modelH);
hModelCodegenMgr.CodeFormatForStateflow={Embedded-C, RealTime} CFS
non-jit sf: modelName_sfun.mex
                                                                                          ModelReferenceTargetType=normal/accel/sil/pil
sim     (modelName, 'SimulationMode', 'normal')                    :                    ModelReferenceTargetType=SIM*/SIM/RTW/RTW
                                                                     hModelCodegenMgr= []
                                                                     TargetStyle=SimulationTarget rtwenvironmentmode(isSim)=1
sim     (modelName, 'SimulationMode', 'accel')                     : jit or Accelerator_S-Function _acc.mex
                                                                                        ModelReferenceTargetType=SIM /SIM/RTW/RTW
                                                                     hModelCodegenMgr= []
                                                                     TargetStyle=SimulationTarget 
                                                                     rtwenvironmentmode(isSim)=1
sim     (modelName, 'SimulationMode', 'rapid')                     : ExtMode=1,          ModelReferenceTargetType=SIM /SIM/err/err 
                                                                     hModelCodegenMgr.CodeFormatForStateflow=RealTime 
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=1
sim     (modelName, 'SimulationMode', 'software-in-loop')          : _sbs.mex,            ModelReferenceTargetType=RTW /RTW/RTW/err 
                                                                     hModelCodegenMgr.CodeFormatForStateflow=Embedded-C 
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
sim     (modelName, 'SimulationMode', 'processor-in-loop')         :                      ModelReferenceTargetType=RTW /RTW/err/RTW 

slbuild (modelName,                   'StandaloneCoderTarget')     : as mainModel grt/ert, ModelReferenceTargetType=NONE 
                                                                     hModelCodegenMgr.CodeFormatForStateflow=RealTime
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
slbuild (modelName,                   'ModelReferenceSimTarget')   : as refModel  acceleator, _msf.mex, ModelReferenceTargetType=SIM
                                                                     hModelCodegenMgr.CodeFormatForStateflow=Embedded-C 
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
slbuild (modelName,                   'ModelReferenceCoderTarget') : as refModel, sil,        _ssf.mex, ModelReferenceTargetType=RTW
                                                                     hModelCodegenMgr.CodeFormatForStateflow=RealTime
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
SIM*: ModelReferenceSimTarget=SIM but SimulationModeOfMainModel=Normal: is it same as set_param(refModel,'SimulationCommand','update')?
manually setting SimuationMode=external via command line.: ctrl-d(update) mode=external, ctrl-t(update) mode=normal
slrealtime with manually setting SimuationMode=external via command line.: ctrl-d(update) mode=external, ctrl-t(update) mode=normal
sldv:  RTWExternMdlXlate=1
autosar
plc: RTWExternMdlXlate=2
modelreference: https://www.mathworks.com/help/ecoder/ug/simulation-mode-override-behavior-in-model-reference-hierarchy.html

BLAS (Basic Linear Algebra Subprograms)
LAPACK (Linear Algebra Package)
FFT (Fast Fourier Transform Library)
tlc files: https://www.mathworks.com/help/rtw/ug/compare-system-target-file-support.html
1. DO-178C qualification tools, JMAAB,
1. datascope(not-specified,auto,imported,exported)/headerfile(not-specified/specified): type(Simulink.IntEnumType, uint8, uint16, uint32,not-specified)
   
   ns/ns,a/ns,i/ns,e/ns:                                                                siet:defines enum    u81632: defines u81632 macros  ns: invalid m enum
   ns/s,a/s,i/s        :                                                                siet:imports         u81632: imports header         ns: invalid m enum
   e/s                 :                                                                siet:defines enum    u81632: defines u81632 macros  ns: invalid m enum
Simulink.data.getEnumTypeInfo
postcodegen:  https://reviewboard.mathworks.com/r/733581/diff/1/ 
simulink model status bar: modeling->environment
Simulink-Function-In-SF only allows inherited sample time (-1) or constant time(Inf)
SLState-In-SF sample time must match that of parent chart.
>>help slcg %for pretty printing rtw or simulink coder


stack viewer:
1. matlab global, persistent vars not showing up
2. modify value in sv and have it updated in gdb
3. send whole stack to sv when called sv(). filter it in sv

C:
unistd.h: posix apis.
mx mex:
mxGetData ->void*
mxGetPr ->double*
mxGetInt8s,mxGetUint16s->only available in interleaved
a:
linux: fg, bg
sbvim
vim cmd:  :help sbvim
:set ignorecase 
:set noignorecase  (unset)
:set ignorecase& (set to default)
:echo &ignorecase

how to get vim help
vim:  ": help command",":map key" 
:help
//settings
:help ts?
:help sw?  
:set sw 3
:set sw? 
//variables
:let var1=123
:echo var1
:let g:var2=1
:let s:var2=4
:help variables
:filter buf* let g:   //only shows variables with buf*
:h :filter
:h : files
:h :registers

:set laststaus or :echo &laststatus
:highlight statusline
:highlight
:highlight cursor guifg=red guibg=yellow
:help notationA
tab
shiftwidth: whitespaces equal to one indentation
tabstop: whitespace equal to one tab

:set laststatus=2
:highlight statusline gui=bold,italic guifg=red guibg=yellow

vim equivalent of non-printing keys
<NL>:<C-j>:newline
<CR>:<C-m>:carriage return
<BS>:<C-h>:backspace
<ESC>:<C-[>:escape
<TAB>:<C-i>:tab
<FF>:<C-l>:formfeed

scroll up/down:
1 line:CTRL-e,CTRL-y
1/2 screen: CTRL-d,CTRL-u
1 screen: CTRL-f,CTRL-b

:h press ctr-v twice for :h ^v
:h press ctrl-v and ctrl-b for :h ^b
:h reg  and press ctrl-d  for auto completion

gvim -D  to debug
/%Vfoo   searches foo in visual/select mode
folding: zf zo zc
tab: tabe tabc gt
window: C-w-s C-w-v C-w-w C-w-c
scroll:C-e,y,f,b,d,u zt,zb,zz
mapleader \ <Leader>
gvim -u DEFAULTS/NONE/NORC
gvim --noplugin
:filter searchtext browse oldfiles
:list
:jumps
:filter
:marks
:oldfiles
:files
:command
:let
:echo expand("%p")
:h load-plugins
:map b6 :bp<bar>sp<bar>bn<bar>bd<CR>
 bp|sp|bn|bd : close current buffer(do not close window); and open next buffer in same window
 packadd sources twice, packadd! sources once
command mode: ctrl-v to enter <C->,  
              ctrl-d to auto-complete
              q:  command list
              q/  search list


//mathworks/hub/share/sbtools/external-apps/exuberant-ctags/exuberant-ctags-5.9/exuberant-ctags/ctags -R *


>>c=settings //give matlab and simulink preferences/settings 
git config --global credential.helper store
execution domains (export function, discrete, continuous/hybrid)
Stateflow limitations on continuous, SL functions, SL states,

all config set options: matlab/toolbox/shared/configset/src/configset_base/checksum/type/

set_param(0, 'GlobalUseClassicAccelMode', 'on');
%     set_param(0, 'AcceleratorUseTrueIdentifier','on');
%     set_param(0, 'GlobalUseClassicAccelMode', 'on');
%     slfeature('FMUBlockRaccelReval',1);
%     slfeature('UseSimulationServiceForRaccel',0);
%     slfeature('MLSysBlockRaccelReval',1);
 
sfc('coder_options')

  %v=sf('find',sf('FunctionsIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','mlfcn1')
    %v=sf('find',sf('SubstatesIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','stateA')
    %v=sf('get',sf('find',sf('SubstatesIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','A'),'state.simulink.blockHandle')
    %sf('get',sf('GetSFBlockData',get_param(get_param(gcbh,'ReferenceBlock'),'handle')),'instance.chart')
    %getappdata(get_param(sf('get',sf('GetSFBlockData',get_param(get_param(gcbh,'ReferenceBlock'),'handle')),'instance.sfunctionBlock'),
    'Object'),'SF_InstanceSpecChecksum')
sbsmartbuild -opened; mw runlikebat does not work


c style comments: //
-Wimplicit-int
int main()


C89  keywords: 32
built-in types(6)         : void, char, int, float, double, enum
aggreate types(2)         : struct, union   
type modifiers(4)         : signed, unsigned, short, long
storage specifier(4)      : auto, register, static, extern
cv qualifier(2)           : const, volatile 
conditional statements(5) : if, else, switch, case, default
loops(3)                  : for, do, while
jump statements(4)        : break, continue, goto, return
misc(2)                   : typedef, sizeof
C99 keywords: 5
_Bool, _Complex,_Imaginary, restrict, inline

C Scopes: file scope, block scope, function parameter scope, function scope
Non-structured: FORTRAN, BASIC, COBOL
Structured    : Ada, Pascal, C   : goto prohibited or not supported
ANSI: American National Standards Instrutute
ISO: International Standards Organization
aba
B Ken Thomspson -> C Dennis Ritchie

C Not strongly typed: no run time checking for arguments matching parameter types, implicit type conversion



Languages:
assembly
basic:
pascal:
lisp
delhi/openpascal:
cobol: cobc -x  hello.cob
fortran: gfortran f1.f90 
c: gcc/clang
c++: g++/clang++
objective-c:
visual basic
c#:
java: javac/java
go: /usr/local/go/bin/go run . 
swift: /usr/local/swift/bin/swiftc myswift1.swift -o m1
scala: scalac/scala Hello.scala
rust: rustc rs1.c 
ruby
perl
php
python
r:
matlab:
javascript
typescript
sql
haskell
common lisp
ocaml
F#
erlang
clojure




markdown:
data-interchange: json, xml





bhagavad gita: 

tukaram:  https://www.youtube.com/playlist?list=PLPiSaErUa7PcGPe9xQ7pOWEyM6mlfKdbi 
dasbodh: https://www.youtube.com/playlist?list=PLc1r4Cpf66cCRmkHK7YsE7ZZK2Q3xjE0C

gurucharitra: https://www.youtube.com/playlist?list=PL_6xj9qo5MfasqnCUaWDpqbadG60I4Xrw 
ramdaskatha: https://www.youtube.com/playlist?list=PL_6xj9qo5Mfb-Wk6zaB9ITrkjsNJnumcY
navanathsar:  https://www.youtube.com/playlist?list=PL_6xj9qo5MfaF1Yk8PVnOLKEIwGco8B11  
dhyaneshwari: https://www.youtube.com/playlist?list=PL_6xj9qo5MfZ6_sAidq6Svg5-MyjjfjXV  
manache shlok:  https://www.youtube.com/playlist?list=PLRlSTUDyrQYi2-WN7hWatTwlst6BW3Dgp
                https://www.youtube.com/playlist?list=PLAUy5gvjzw_941zCER5wQ1UWczqqqCsoF


youtube audio playlist downloader: yt-dlp --extract-audio --playlist-start 1 --rm-cache-dir --audio-format mp3 -o 
"das-%(playlist_index)s.%(ext)s" <youtube-playlist-link>

sbindent: https://web.microsoftstream.com/video/f99a8bd4-1530-4146-a6f1-afbe76db59ba
dangling if 

disable bii
sbmake -distcc DEBUG=1 CTB=stateflow_core BH_ALLOW_ISOLATED_BUILDS=
#bii sandbox
https://inside.mathworks.com/wiki/Component_BII_Sandboxes
mw -using Bstateflow printenv | grep COMPONENTS_TO_BUILD
mkdir biisbdir;cd biisbdir;
echo "MW_CLUSTER=Bstateflow" > mw_anchor;echo "P4CLIENT=ppatil.mybii1" > .perforce; echo "P4PORT=p4anycast.mathworks.com:1666" >> .perforce; echo "ENV Bstateflow" > battree
mw -using Bstateflow gmake -f //mathworks/hub/share/apps/iat/tools/sc/R2020a/4605547/glnxa64/thin_snap.mk COMPONENTS_TO_BUILD="stateflow_resources" BUY_ARCHLIST="glnxa64" P4_CLIENT="ppatil.mybii1" create_sandbox
cd matlab;
sbmake CTB=stateflow_resources;


runtests with parameters:
runtests("t_sl_trackerGNNRetrodiction[ScenarioParameters=EKF]/checkRapidAcceleratorAgainstNormal")
>> runtests("testFileName[classsetupparam1=value,classetupparam2=value]/[methodsetupparam1=value,methodsetupparam2=value]testpointname")
>> runtests("tBusMessageWithStringTypeField_strlength_MAL[classsetupparameter1=value,classetupparameter2=value]/[methodsetupparameter1=value,methodsetupparameter2=value]runTest(testparameter1=value,testparameter2=value)")
Setting up matlabtest.fixtures.QEAttributesFixture

edg parser components:
CTB="shared_cxxfe_parser_mi shared_cxxfe_parser_mi shared_cxxfe_ast shared_cxxfe_instrum shared_cxxfe_instrum shared_cxxfe_instrum shared_cxxfe_instrum shared_cxxfe_ast_annotations shared_cxxfe_instrum_mi shared_cxxfe_instrum_mi shared_cxxfe_parser shared_cxxfe_il2ast shared_cxxfe_il2ast shared_cxxfe_il2ast shared_cxxfe_ast2cgir shared_cxxfe_ast2cgir shared_cxxfe_ast2cgir shared_cxxfe_il2cgir shared_cxxfe_il2cgir shared_cxxfe_il2cgir shared_cxxfe_cgir"



MLFcn   :  stops every, hoverStoped(StoppedI1ShowI1OnI1-I1OnI2-I1OnCh,StoppedI2ShowI2OnI1-I2OnI2-I2OnCh), openEditorInstanceButPathAlwaysI1, BP I1I2Ch SyncYes
MLFBlock:  stops every, hoverStoped(StoppedI1ShowI1OnI1-I1OnI2-I1OnCh,StoppedI2ShowI2OnI1-I2OnI2-I2OnCh), openEditorInstanceButPathAlwaysI1, hoverPaused(I1No,I2No,CNo), BP I1I2Ch SyncYes,
TTFcn   :  stops every, hoverStopped(StoppedI1ShowI1OnCh, StoppedI2ShowI2OnCh), openEditorOpensChart, BP I1I2Ch SyncNo,
TTBlock :  stops every, hoverStoped(StoppedI1ShowI1OnI1-I1OnI2-I1OnCh,StoppedI2ShowI2OnI1-I2OnI2-I2OnCh), openEditorOpensChart, hoverPaused(I1No,I2No,CI1) , BP I1I2Ch SyncNo, 


simulink  configuration parameters->data import/export: tout:always array, logsout(signal logging),dsmout: always dataset
                                    xout, yout, xFinal: can be array/struct/dataset
                                                        array: same type, built-in
                                                        struct: built-in
                                                        dataset: any
                                                        
SDI:
1. logsout and dsmout always go to SDI: logsout(signal logging) goes to signal/Statelfow, dsmout goes to state
2. xout, yout: go to SDI if dataset. if struct/array, it goes to SDI if "RecordLoggedWorkspacedataInSDI"==true
3. types: 
   1. Outport(yout), 
   2. States(xout), 
   3. Stateflow(state with LogSelfActivity or ActiveStateData/NormalData with LogData), 
   4. Signal(logsout except those for Stateflow)
   5. DSM(dsmout)

 subchartM3I = StateflowDI.SFDomain.id2DiagramElement(objectId);
openState = StateflowDI.SubchartOpenRequest(subchartM3I, 'REUSE_TAB');
studioApp = SLM3I.SLDomain.getLastActiveStudioAppFor(get_param(obj.topModelName,'handle'));
activeEditor = studioApp.getActiveEditor;
w = StateflowDI.HierarchyServiceUtils.getHIDWithParent(objectId, activeEditor.getHierarchyId);
studioApp.processOpenRequest(openState,w);
function studioUtils(i)
    studioTag='Studio16'; 
    studio = DAS.Studio.getStudio(studioTag);
%     studioTag=studio.getAllStudios{i}.getStudioTag()
%     studio = DAS.Studio.getStudio(studioTag);
    activeEditor=studio.App.getActiveEditor;
    hId = activeEditor.getHierarchyId;
    currentTab = studio.getTabComponents{studio.getCurrentTab};
    studio.getTabTitle(studio.getCurrentTab);
    studio.getStudioTitle;
    disp(GLUE2.HierarchyService.getPaths(hId));

end

stack decoder online tool : http://www-sbtools-ah.mathworks.com/hub/share/sbtools/apps/stack_trace/index.cgi/stacktrace  
abca           



CTB="eml_inference sl_graphical_classes sl_engine_classes sl_main fixedpoint_core sl_compile shared_cgxe foundation/matrix cgir_vm_rt cgir_vm_core shared_simulink_lang_blocks sl_utility sl_compile sl_services sl_graphical_classes sl_loadsave shared_cgxe"



simulink functions in SF:
MAL: requires input S/T/C specified. hence during propagation STC of callsite are verified with SLport STC.
    Propagation:  SLFuncIn->SlFuncOut->CallSiteOut   SLFunctionIn==CallSiteIn SLFunctionOut==CallSiteOut
CAL: can let input S/T/C inherit but callsite does not propagate S/T/C to input parameter. so S/T/C set in SL at propagation. And during codegene callsite and SLport STC are verfied
     Propagation: SLFuncIn->SlFuncOut         CG: SLFunctionIn==CallSiteIn SLFunctionOut==CallSiteOut


For Simulink states in SF:
MAL/CAL: chart inputs and outputs can be used as ports. ports can be have S/T/C inherited or explicit but need to match S/T/C to corresponding chart input/output
MAL/CAL propagation for inputs: SLIn->mainIn->SLStateIn->SLStateOut->mainOut->SLOut->backPropagationA

Back propagaiton trick: 
Add SLState with outChart1->inChart1. 
For ML chart you also need to write "ex:outChart1=inChart1" on one of the states.

Atomic Subchart Mapping: 
input:slIn->mainIn->subchartIn->back
output:mainOut->subchartOut->mainOut->slOut->back
MAL: mapped main chart output and local data must have STC specified
CAL: mapped main chart output and local data must have STC specified. Only exception is if main output is mapped to subchart output then main output can be left inherited. In this case, back propagation might set types

MAL: O be written, L (if used in chart) be written
CAL: O/L are auto-written to 0s

MAL: L if IV exists, no error
MAL: L if no IV and no write in chart, we get error compile-time FULL_ASSIGNMENT_REQUIRED_ERROR
MAL: L if no IV but written in chart but used before write, then runtime error READ_BEFORE_WRITE_ERROR


MAL: IV is not vectorized as per Size
CAL: IV is i   vectorized as per Size



MAL: Size is     inferred from IV
CAL: Size is NOT inferred from IV

stateflow data:
Property Inspector
Name, Port, Size, Type, InitialValue, FirstIndex 
(LoggingSection) LogSignalData(UseSignalName, LimitDataPointToLast, Decimation), TestPoint,  
(AdvancedSection) VariableSize, ResolveToSignalObject, InitialValueFromWorkspace, LockFixedPointTools, 
           TUnable, 
           Unit, Complexity, Range


M Chart: FI 
C Chart: TU

Input Scope: IV, LS, RTSO, IVFW, TU
Local Scope: P, VS, TU, U
Parameter Scope: P, IV, LS, VS, RTSO, IVFW, U, R
DSM Scope: all but S
Constant Scope:  P, LS, VS, RTSO, IVFW, TU, U, C, R

Built-in numeric except boolean:
Boolean: C
FixedPoint: same as "Built-in numeric except boolean"
Enumeration: U, C, R
Bus: IV, IVFW, U, C, R
String: S, FI, VS, LFPT, U, C, R

P: I/O
U,R: I/L/O built-in
C: I/O/P non-boolean-built-in
VS: M charts and M based functions in C chart. non-string. for buses and for param it is ignored.
TU: P in M
IV,IVFW: L/O non-bus
LS: L/O
RTSO: L/O 


mouse cursor : sudo update-alternatives --config x-cursor-theme


sbmake -distcc DEBUG=1 CTB="shared_cgxe foundation/matrix cgir_vm_rt cgir_vm_core shared_simulink_lang_blocks sl_utility sl_compile sl_services sl_graphical_classes sl_loadsave sl_main"

simulink compiler:toolbox/coder/simulinkcoder_core/+coder/+internal/ModelBuilder.m  at line number 723 all the raccel files are generated and begins to build
custom code building:/local-ssd/ppatil/coverage4/matlab/toolbox/shared/cgxe/cgxe/private/createCustomCodeDLL.m : 72
stateflow code generation: private/code_chart_source_file.m and /local-ssd/ppatil/coverage4/matlab/toolbox/stateflow/stateflow/private/targetman.m : 429
jit:serializeJITEngine 
https://inside.mathworks.com/wiki/Generating_C%2B%2B_Source-To-Test_Mapping


mingw vs cygwin: cygwin is compatibility layer to port linux application source code to build on windows by replacing linux syscalls to windows OS calls. mingw is gnu port for windows. it may not have full compatibility with linux gnu.
c/c++: main function 2 signature int main() and int main(int argc, char* argv[], char* environmentVariables[]), third argument is implementation depenedent.

matlab online :  matlab.internal.webgui
get_param(0, 'AcceleratorUseTrueIdentifier')
get_param(gcbh,'OutputFunctionCall')
set_param(0,'globalAccelVerboseBuild','on')
simulink: algebric loop, variable sized signals, zero crossing, minor step updates,

qemu-system-x86_64 -kernel /boot/vmlinuz-4.19.0-14-amd64 -no-kvm -nographic -m 2049M -initrd /boot/initrd.img-4.19.0-14-amd64 -hda /local-ssd/ppatil/gitRepo1/buildroot/output/images/rootfs.ext4  -append "console=ttyS0 root=/dev/sda rw"


/local-ssd/ppatil/installs/llvm1build/bin/llc -filetype=obj cpp1.ll -o cpp1.o  -O3 --debug-pass=Executions
/local-ssd/ppatil/installs/llvm1build/bin/clang++   cpp1.cpp  -g -O3 -o cpp1_1.exe -mllvm --debug-pass=Executions


clang -emit-llvm -o cpp1.ll cpp1.cpp
clang -emit-llvm -S cpp1.bc cpp1.cpp
llvm-as -o cpp1.bc  cpp1.ll
lli cpp1.ll(bc)
llc -filetype=obj -o cpp1.o cpp1.bc(ll)
llc -filetype=asm(default) -o cpp1.s cpp1.bc(ll)

ld.lld --hash-style=both --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cpp1.exe /lib/x86_64-linux-gnu/crt1.o /lib/x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/8 -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/local-ssd/ppatil/installs/llvm1build/bin/../lib -L/lib -L/usr/lib cpp1.bc-llc.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/8/crtend.o /lib/x86_64-linux-gnu/crtn.o  --lto-O3


LD_PRELOAD:
http://www.goldsborough.me/c/low-level/kernel/2016/08/29/16-48-53-the_-ld_preload-_trick/#:~:text=Outro-,Introduction,shared%20library%20before%20other%20libraries.

/local-ssd/ppatil/installs/llvm1build/bin/clang++  -E/S/c  cpp1.cpp  -o cpp1 -Xclang -ast-view/-ast-dump/-emit-llvm
hardinfo : hardware info
lscpu

cat /sys/devices/system/cpu/cpu0/cache/index0/size 
cat /sys/devices/system/cpu/cpu0/cache/index0/coherency_line_size
index0: Level1Data 
index1: Level1Instruction 
index2: Level2 
index3: Level3
getconf LEVEL3_CACHE_LINESIZE
lscpu
getconf -a

sram: https://www.youtube.com/watch?v=mwNqzc1o5zM&ab_channel=UdacityUdacity
sram: transi
atx motherboard:

pci/pcie/agp/isa slots: exansion slots
ssl(143) vs ssh(22): secure socket layer, transport layer security, secure shell
public key infrastructure(PKI), digital certificates,
clang  -Xclang -ast-view c1.c
clang -Xclang -ast-dump  c1.c
cross compilation:https://www6.software.ibm.com/developerworks/education/l-cross/l-cross-ltr.pdf 
chip manufactures: intel vs amd
computer manufactures: apple, dell, hp, ibm, asus, lenova, samsung
software: microsoft, google, 
amd: advanced micro chips
compile with custom libc
 export env1=/opt/mylibc1;export lib1=$env1/lib;export include1=$env1/include;gcc -nostartfiles -I $include1 -L $lib1  $lib1/crt1.o $lib1/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o $lib1/crtn.o -Wl,-rpath=$lib1,-I$lib1/myld.so -lstdc++ -g  -o out1 c1.c(pp)

 export env1=/opt/musl1;export lib1=$env1/lib;export include1=$env1/include;gcc -nostartfiles -I $include1 -L $lib1  $lib1/crt1.o $lib1/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o $lib1/crtn.o -Wl,-rpath=$lib1,-I$lib1/myld.so -lstdc++ -g  -o out1 c1.c(nocpp)

python compiler: nitka, brython
stackless python
IIFE: immediately invokded function expression
linux set primary window or display in multi display systems: xrandr --output VNC-1 --primary --right-of VNC-0
cat /etc/os-release
cat /proc/version
cat /etc/debian-version
dpkg -S `which ld`
cat /proc/cpuinfo
gcc -Xlinker -rpath=/local-ssd/ppatil/installs/glibc1/ -Xlinker -I/local-ssd/ppatil/installs/glibc1/elf/ ../pppGitHub/c1.c  -o c1


advanates of little endian: 
1. casts are noop since address of 1(char),2(short/half),4(int/float/word),8(longint/double/doubleword/size/addr) byte int would be same
2. for 8 bit systems or for big integers/big integers: addition and subtraction can be pipelined or parallelized since lsb needs to
perform addition/subtraction before msb

load_elf_binary: linux calls to load elf binaries

ld is static linker, ld.so is loader and dynamic linker: 
https://unix.stackexchange.com/questions/438068/what-is-the-difference-between-the-runtime-linker-ld-so-and-the-prelink-progra


_dl_start_user: to debug ld.so 
https://sourceware.org/glibc/wiki/Debugging/Loader_Debugging#Debugging_With_an_Alternate_Loader
rpath vs -L : gcc : 
cat /etc/cpuinfo: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/arch/x86/include/asm/cpufeatures.h

https://www.microcontrollertips.com/difference-between-von-neumann-and-harvard-architectures/

alignment:https://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/ 
std::has_unique_object_representation
alignas
std::alignment_of
__attribute__((packed))


standardlayout object
p4 sync -N ...
info vtbl variable
sb -nosplash -nodesktop -r "sfnew;bdclose all"

exception handling: LSDA, CFI, personality function, unwind.h, setjmp, longjmp,
goto
-fPIC vs load time relocation
static library vs shared library. 
shared library can be statically linked (-fPIC) vs dynamic linked (load time relocation)
dynamically loaded
disadvantate of dynamicalled linked shared library:https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/
https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/
1. non-sharable text section, ram usage increase since each exe that loads
library needs separate copy 2. text section needs writable, security 3. load time increases

can we relink shared library online?
.got: global offset table
.bss: block started by symbol
plt: procedure location table
https://reverseengineering.stackexchange.com/questions/1992/what-is-plt-got


info proc mapping
info sharedlibrary
https://reverseengineering.stackexchange.com/questions/6657/why-does-ldd-and-gdb-info-sharedlibrary-show-a-different-library-base-addr


cpsr: control pgogram status register
pc: program counter
sp: stack pointer
bp: base pointer
gpio: general purpose io
uart: universal asynchronous receiver trasmitter
isr: interrupt service routine
mmu: memory management unit i2c, spi: serial peripheral interface i2c: inter integrated circuit
echo $XDG_CURRENT_DESKTOP: debian current desktop  mate,kde,xfce,gnome,
man hier : show linux file folder root hierarchy
FHS: Filesystem Hierarchy Standard
web server interfaces: cgi: common gateway interface :mod_php, java servlets, python WSGI, ruby rack
sbin: superuser bin files
/opt vs /usr/local

https://www.debian.org/doc/manuals/debian-faq/pkgtools.en.html: apt install;apt
install;apt show;apt list --upgradable; apt list packagename; apt list; apt show
packagename; dpkg --search xxx;dpkg --listfiles packagename

find -L / -samefile path/to/foo.txt

get macros:g++ -dM -E -x c++ /dev/null 
libc dietlibc uclibc eglibc musl


custom libc with gcc
export env1=/opt/musl1;export lib1=$env1/lib;export include1=$env1/include;gcc -g -o c1 -nostdlib c1.c -I $include1 -L $lib1  -Xlinker $lib1/crt1.o -Xlinker $lib1/crti.o -lc  -Xlinker -rpath=$lib1 -Xlinker -I $lib1/ld-musl-x86_64.so.1 -Xlinker $lib1/crtn.o 
custom libc with g++
export env1=/opt/mylibc1;export lib1=$env1/lib;export include1=$env1/include;g++  -nostdlib  -I $include1 -L $lib1  -Xlinker $lib1/crt1.o -Xlinker $lib1/crti.o   /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o -lstdc++ -lc  /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o -Xlinker -rpath=$lib1 -Xlinker -I $lib1/myld.so -Xlinker $lib1/crtn.o -nostdlib -o cpp1 cpp1.cpp


crt1.o crti.o crtn.o:https://wiki.osdev.org/Creating_a_C_Library 

fpie fpic :https://stackoverflow.com/questions/2463150/what-is-the-fpie-option-for-position-independent-executables-in-gcc-and-ld 

return oriented programming attacks:https://en.wikipedia.org/wiki/Return-oriented_programming 

compression: xz, lzma, gzip, bzip2 https://unix.stackexchange.com/questions/108100/why-are-tar-archive-formats-switching-to-xz-compression-to-replace-bzip2-and-wha

tar -xf or tar -xjf (bzip2)
linux package: bc: arbitrary precision calculator, xz-utils: compression,











matlab/src/sl_graphical_classes/export/include/sl_graphical_classes/RegisterModelParameters.hpp
allslfeature=slf_feature('report');
slflist= slfeature('query','stateflow');
mw runlikebat -testlist test/toolbox/stateflow/sf_in_matlab/bug_fixes/tg1879530_BPonCommentedTransition.m -interactive -logs /tmp/asvs
slfeature('ListSetAndSave',1);get_param(blockPathOrModel,'ObjectParameters');%to see all(active,hidden,featured-off,obsolote) parameters
get_param(blockPathOrModel,'DialogParameters');
get_param(blockPathOrModel,'IntrinsicDialogParameters');
get_param(blockPathOrModel,'AlgorithmParameters');
get_param(blockPathOrModel,'SecondaryAlgorithmParameters');
get_param(bdroot,'InstrumentedSignals');
get_param(bdroot,'SaveFormat');//,'StructureWithTime','Array','DataSet','Structure'

>> sf('get',c.id,'state.activeStateOutput.useStringType')



portHandles=get_param(inputOrOutputPor,'PortHandles');
signalH = portHandles.Outport<(n)>
signalH = portHandles.Inport<(n)>
get_param(signalH,'DataLogging')
get_param(0, 'CurrentSystem');
save_system('u1','SaveDirtyReferencedModels','on')
SLPrmDescTypes.hpp contains paramcategory and paramtypes
hdldispmdlparams('augustlearn1','all')
hdlset_param hdlget_param
parameters:
https://www.technblogy.com/2020/12/30/get-the-parameters-of-simulink-block/
get(get_param(<modelname>,'handle'))

get_param(blockH, 'parent') vs getfullname(blockH)
get_param(blockH, 'ReferenceBlock')

getSimulinkBlockHandle(blockPath) vs get_param(blockPath, 'handle')

generate baseline:
evil_generate_baseline('tg2877891)% for existing test model
runtests('tg2877891','GenerateBaselines',true);%for a new test model

TTT: mainmodel->lib1(notopened)->lib2(opened,breakpoint)
chartInstance = sf('GetSFBlockData', SFblockH);  
TTT: rtwOptimizationInfo g1290447 how is it used in rtw and rapidaccel
TTT:prs_overide_data_type can be short-circuited based on fixptOverride
cdr_data_set_props_with_resolve_type: can be better written  like below
 if (S==nullptr)                  {resolve_type;errorOnFailure;return;}
 resoveBuiltIns{cdr_data_type_from_name_no_default, returnOnSuccess;}
 if (typeStr startsWith 'fixdt(') {cdr_evaluate_expression(slResolve); returnOnSuccess;}
 resolveExpression{cdr_data_set_props_from_sl_type(ssRegisterTypeFromExprNoError);}
 errorOrFailure;
 %note: there is not much difference between slResolve and ssRegisterTypeFromExprNoError

fixdt: unspecified scaling(fixdt(1,16) or best precision(based on min/max): SL supports except for bus fields, SF does not support 

we could replace:MAKE_USTRINGSTREAM(sizeBufStream) with auto sizeBufStream = fl::io::make_ustringstream();
validatedvector could use copyconstructor/init method taking std::vector<T>
what happens when P1 (param) data size in SF is set using P1 itself (works)
obsolete features: SF_NEW_SIZE_METHOD BUS_ARRAYS

https://inside.mathworks.com/wiki/Category:Native_Memory_Diagnostics  memmgr feature('memmgr')

GDB ptype
GDB whatis


sf('get',dataId,'data.parsedInfo.type.base') is stale even after compile, 
to refresh above, c=sf('IdToHandle,dataId);c.parsedInfo.type.base;
accessing mcos/udd data copies data->getParsedInfo() to data->parsedInfo

q1_findCoverage: do we need do parse0 to find out if we are using temporal operators
q1_findCoverage:  // Process inherited types (may use registered bus types)

prs_set_flags_from_data_properties: complexity seems different than size/type

sfunction input: (0) data (port) (1) atomic subchart data(l->o) (2) sl function data (3) events (port)
sfunction output: (0) demux (1) data(port) (2) Trigger event(port) (3) atomic subchart Trigger event (4) atomic subchart data(l->i,o->i) (5) slfunction data
demux output: (0) function call event(port) (2) atomic subchart fcn event (3) SL function Fcn Call

CAL parameter data tunable: grayed out, but can be enabled/disabled via command line: if enabled: sim: regenerates code when value changes but CG: works correctly
CAL l/o data with initfromworkspace: sim: works i.e. does not regenerates code when param value changes in workspace

set_inherited_data_properties_into_chart_io_data does not belong to propagate_info_to_atomic_subchart_io

set breakpoints in mdl* methods in stateflow_mdl_methods.stubs and  enable: debugbuild and nonjit
for jit, some of mdl* methods in sf_sfun.cpp are called at runtime.

for inherited inputs, mdlPropagationPass(dimensions) is called twice.

Simulink.importExternalCTypes

continuous charts generate seperate outputs functions even though it never is used.

continuous charts do not serialize jit engine. hence closing and opening model with continuous chart regenerates code

registerSimulinkFunctionsCalledByChart has some unnecessary code in for loop

model params: TargetStyle, SimulationMode, RapidAcceleratorSimStatus, ModelReferenceTargetType, SimulationStatus, 

curiousbly recurring template pattern
type erasure: boost::any_range

v=feature('diagnosticSpec','sf::cdr.*=all');
v=feature('diagnosticDest','file=mylogfile.txt');
http://inside-files.mathworks.com/dev/ltc/doxygen/Bfl/html/user_view/foundation/log/src/log/
Foundation logger/mwlogger uses Boost.log
https://www.boost.org/doc/libs/1_59_0/libs/log/doc/html/index.html


http://inside.mathworks.com/wiki/OUT_OF_MODEL.mk

https://stackoverflow.com/questions/210835/what-is-referential-transparency
vim: :e->reload, :e!->reload+discardLocalChanges

c++ exception safety guarantee

record_SF_known_struct_types_recursively : not required
 StdCdrEmlApi::setCdrModuleInfo: has if branch which should be in the caller

fDataCGTypeMap is not allocated on dummyCdrModuleInfo during propagation which means, during propatation cgtype are not reused.

cdr_cg_struct_or_enum_type_from_data : how does hdl/clientserver work for two isntances of library chart with different input struct type. since simstruct is not available, we just rely on data->parsedInfo which is not instance specific

getSSIDFromObjectId chart_is_eml can be used instead in first if

chart.eml.f2fConfig when does it get set in cdr_eml_infer_chart

MAL chart output variable size data(size=n) initial values have to match size of data(n). for CAL, it can be of of size 1-n

MAL variable-size: supported. dynamic memory can be specified for ml-function-locals but not required
CAL variable-size: only accessed in MLFcn/TTMLFcn/SLFcn. also dynamic memory is required for code-gen

MAL unbounded: supported. featured off. not sure about codegen supported(?)
CAL unbounded: not supported.

MAL symbolic size: not supported
CAL symbolic size: supported, but not-supported if data is var-size

cdr_eml_infer_chart: do we need cdrModuleInfo->createSymbols() here;

cdr_nodedef::getInputType : not clear why known type is marked as double

std::reference_wrapper motivation: https://www.nextptr.com/tutorial/ta1441164581/stdref-and-stdreference_wrapper-common-use-cases
std::vector<std::reference_wrapper<int>>
not allowed:std::vector<const int>,std::vector<int&> as T in std::vector<T> requires assignable
std::get retruns reference_wrapper. reference_wrapper can returns T& with get()
auto i = 1;auto r = std::ref(i); r.get()=12;

std::conditional_t

inherited class method with same name but different prototype hides(not override) the base method.

expr: [1,2]: eml after parse_function: #matrix(#vcat($1,$2) what is type of #matrix here

during propagation size inference, if any input type is not known, we set all inputs(except bus) to be real. input type of bus is always known before size pass. it happens during after mdlInitializeSizes
above process happens for complexity also. during size prop-inference, if we don't know any input complexity, we set all input to be real. bus/enum/string don't have compexity.

in cdr_update_types_against_inference_results, after propagation inference, we only throw errors if output t/s/c is inferred, unambiguous, have user specified value and mismatch with user-speciefied value. 
so if output type is fully specified, it won't throw error even if one of the statements is wrong (e.g. outputDouble2Real=inputDouble3Real) as output is not inferred in this case.

DCE: errorOnUnresolvedSymbolsInChart->createEmptyStubsForIntrinsics->
DCE: PropagationManager::errorOnUnresolvedSymbols->constructCoders



CTB
shared_cgxe
foundation/matrix
cgir_vm_rt
cgir_vm_core
shared_simulink_lang_blocks
sl_utility
sl_compile
sl_services
sl_graphical_classes
sl_loadsave
https://web.microsoftstream.com/video/ce9533af-63a6-423b-a4e2-9a050e12ef11

commands
cgxe('Feature','evil') cgxe('getJITEngines');cgxemgr.cpp has all the cgxe internal api list

to be learned
jit
vvir
llvm
lint
atomic subcharts
continuous charts
gdb
eml
sfir
cgir
cgxe
mlfb
parser/lexer
ast
sbcc
mex/mxarray
model references/
c promotion rules
unicode, ascii, ustring, cgstring, std::string, char*
old
https://inside.mathworks.com/wiki/Category:Software_Performance_Tools source_to_text http://inside.mathworks.com/wiki/Generating_C++_Source-To-Test_Mapping#Determine_which_tests_cover_a_function.2Fcondition

https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models/

http://inside.mathworks.com/wiki/String_Development_Guide gdb:

GDB printf "%s",CG::EffectTools::toString(this).c_str()
GDB set print elements 0

GDB p &(this->fEffects)
GDB p *(*long*)$5
GDB watch *(long*) $5
GDB p binfo GDB cond breakpointnumber i == 99 GDB info breakpoints GDB info watchpoints


p4v -> edit -> preferences -> Applet -> Check "Allow perforce applets to run in Helix P4V"  Click Apply and Okay. Close p4v and restart p4v. Now click  View->Review Board. This should add a new tab in p4v for ReviewBoard(RB)

Simulink.ExtMode.CtrlPanel.createExtModeCtrlPanelForModel('model2') simulink compiler appdesigner: https://reviewboard.mathworks.com/r/523541/

webapps: install license manager (lmgrd), download license of web app from https://inside-labs.mathworks.com/dev/it_tracker/install/passcodes.html and add following lines at the top SERVER ah-ppatil-l ID=0 27000 DAEMON MLM /mathworks/devel/sandbox/ppatil/switchProperties1/matlab/etc/glnxa64/MLM

Connecting to windows vm sbrdesktop AD.MATHWORKS.COM/ppatil

java exit: //mathworks/devel/sandbox/ppatil/_sbbackup/sbs_ppatil.jexitSfx1_backup/jexitsfx1 qerunbptest g2292966;"

https://confluence.mathworks.com/pages/viewpage.action?spaceKey=CGIRDOC&title=Node+Semantics&REF=D59535FE0AAD8E72D3A45F8E956288F501C26BC821A8142CB3B900000004#NodeSemantics-MatrixRef

appdesigner sfx integration bindings: sbbackup -opened -l sfmlApp1Working
vmware shared folder ubuntu guest
 sudo vmhgfs-fuse -o nonempty -o allow_other .host:/data ./testmnt
a
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_VERBOSE_MAKEFILE=ON ../llvm -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;lldb;compiler-rt;lld;polly'

$ sbmake -distcc DEBUG=1 CTB="sl_main simulinkcoder_capi stateflow_core"

Description	Command
misc commands	get current desktop environmet $echo $XDG_CURRENT_DESKTOP
sudo mount /dev/sdb1 /local-ssd
 sbmake -distcc DEBUG=1 CTB=matlab_desktop NOBUILDTESTS=1 NORUNTESTS=1
 mw sbprequal -F submit.txt -runallunder test/toolbox/stateflow/sf_in_matlab/cdr/negative/ -nochart  -levels all -logdir work/q1
sbmininclude
sbgensubmit -o submit2.txt -opened
mw sbreviewboard  -F submit2.txt  -create-all-images
japanese i18n sandbox
$ export LANG=ja_JP.utf8
$locale
 edit(fullfile(userpath, 'startup.m')) 
component dependency	
 mw ch findPath -f MATLAB -c stateflow sltemplate 
find last changelist for each line of file	
p4 annotate -I //mw/ClusterName/filePath#revision
p4 annotate -I //mw/Bstateflow/matlab/toolbox/stateflow/src/stateflow/cdr/LowerDuration.cpp#2
prefdir
sls_findparts('myfile.sfx')
p4 merge //mw/Bstateflow/...@=4055904 //mw/Bllvm/...
docroot /mathworks/devel/jobarchive/Bdoc18b/latest_pass/matlab/help
deploytool 
mw sbs snapshot create mysnapshotname
mw sbs clone create -from ppatil.sbsname -s mysnapshotname -n "newsbname"
mw -using Bmlcoder.j972079 reproduceSession -identifier http://trweb.mathworks.com/tr/result?id=8576154566
 Stateflow.Interface.JSController.debugMode(1)
cd $s/sandboxName/matlab;
mw perl pbr/bin/mkcdimages -source $(pwd) -dest $(pwd) -iso  -RC
cd $s/sandboxName;
mw sbinstallmatlab -from $(pwd) -to installDirFullPath -products Stateflow (Or "-named-lic dacore",for all products)
mw -using ClusterName sbinstallmatlab -from ClusterName -to InstallDirFullPath -products Stateflow
 open_system(gcb, 'evilsf')
p4 branch_unlock //mw/Bstateflow -allow ppatil
p4 branch_lock //mw/Bstateflow -reason “for fixing build failures”
sfc coder_options debugBuilds 1;
sfc coder_options forceDebugOff 1; 
slfeature('rtwcgir',7)
sf feature evil;
slfeature('rtwcgir',6)
help slcg
evil_jit_settings -disable  
sf('Tesla', 1);  (deprecated)
sfc('coder_options','forceNonJitBuild',1) (we tell this api to customer)
sf('feature', 'Pretty print CGIR logs',0);
sfc coder_options debugBuilds 0;
sf feature developer on
p4 client -o
mw -using Bllvm sbs -c Bllvm -A sfxcoderA1 -hook altroot -n sfxcoderRoot
mw sbs -U
mw -using Bllvm sbs -c Bllvm -bac-client-force -j 1045749
mw -using Bllvm sbs -c Bllvm -A t30 -j 1043404
mw  sbs clone alias sfxCoder2_a1
mw sbs -u -alias t30
license commands	
mw -using R2022a sbinstallmatlab -from R2022a -to sflic2/ -products "MATLAB,Simulink,MATLAB Report Generator,Requirements Toolbox,Simulink Report Generator,Simulink Test,System Composer"
license('inuse')
license('inuse','productname')
ver
 feature('lmfeaturelist')
 feature ('lmsearchpath')
mw matlab -c licensefile
coder commands	
coder.const(@disp, class(dout));
p4 reset	
p4 sync -N matlab/...
mwuetest.getWindowTester(gcb).toolStripTester.showWidgetInfoAsToolTip(false)
generate baseline for a single testpoint	
evil_generate_baseline tDebuggingAdvanced -testspec:lvlTwo_DebuggerCheckSymbolsUIValue
Links
Description	Command	Tags
build area help	build-area
shared folder sudo apt install open-vm-tools open-vm-tools-desktop sudo mount -t fuse.vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other sudo mkdir -p /mnt/hgfs

depviewer	
test selection in bat	
i18n	
locks on clusters	
changereach	
component search in clusters	
performance tests	
gui testing	
upt	
code coverage in BaT	
mockup state action language prompts	
model reference	
sbtools auto-complete	
p4 triggers	
ulcm	
mdlInitializePropagationPass

http://stateflow-00-deb9-64/mathworks/hub/share/sbtools/apps/nighthawk/ CDR_ChartCompiledInfo CDR_MachineCompiledInfo SF::CDR_IDC_Info

sfx MATLAB Coder issues 1. disp does not throw proper error

Navigation menu
Ppatil
0
2
TalkPreferencesWatchlistContributionsLog outPageDiscussionHide Left-NavReadEditEdit sourceView historyPrint as PDFUnwatch
More
Search
Search Wiki on Inside
Main Page
Categories
Category Cloud
Recent changes
Most Linked Pages
New Pages
Random Page
Help
Getting Started
Wiki Markup
Category:Help
Tools
What links here
Related changes
Upload File
Special pages
Printable version
Permanent link
Page information
Cite this page
This page was last modified 09:50, 15 March 2021 by Wiki on Inside user Ppatil.
Privacy policyAbout Wiki on InsideDisclaimersPowered by MediaWiki

label#1 bitset with enum
using namespace std;
class E1BS {
    public:
    enum bitEnum {
    E1_1,
    E1_2,
    E1_3,
    E1_4
    };
    E1BS(unsigned int i1):b1{i1}{}
    bitset<4> b1;
    E1BS& operator|(E1BS e){ b1 = b1 |e.b1;return *this;}
    bool operator[](bitEnum e){return b1[e];}
    void set(bitEnum e){b1.set(e);}
    void reset(bitEnum e){b1.reset(e);}
    bool test() {return false;}
    bool test(unsigned int e1) {return e1 == e1 & b1.to_ulong();}
    template <typename T, typename... Types> bool test(T var1, Types... var2) {
        return b1[var1] | test(var2...);
    }
};




Code_101
#include <boost/type_index.hpp>
#include <iostream>
#include<functional>
#include<type_traits>
using namespace std;
template <class T>
void foo(T&&) {
    std::cout << "\n Short name: " << boost::typeindex::type_id<T>().raw_name();
    std::cout << "\n Readable name: " << boost::typeindex::type_id<T>().pretty_name() << std::endl;
}
struct s1{
    int i1;
    int i2;
};
struct s2{
    int i1;
    private:
    int i2;
};
struct s3{
    s3(){}
    int i1;
    int i2;
};
struct s4{
    ~s4(){}
    int i1;
    int i2;
};
struct s5{
    virtual void f1(){}
    int i1;
    int i2;
};
struct s6{
    private:
    int i1;
    int i2;
};
enum class E1{E11};
struct s7{
    E1 i1;
    int j1[3][7];
    int i2;
};

template<typename T>
void f1(T t1,const char* t2) {
    cout << "                   "  << typeid(T).name() << ": " << t2 << endl;
    cout << "is_standard_layout: " << is_standard_layout<T>::value << endl; 
    cout << "is_aggregate:       " << is_aggregate<T>::value << endl; 
    cout << "is_trivial:         " << is_trivial<T>::value << endl; 
    cout << "is_literal_type:    " << is_literal_type<T>::value << endl; 
    cout << "is_pod:             " << is_pod<T>::value << endl; 
}
int main() {
    s1 s1v={1,2};
    s2 s2v;
    s3 s3v;
    s4 s4v={1,2};
    s5 s5v;
    s6 s6v;
    s7 s7v;
    f1(s1v,"nothing");
    f1(s2v,"private-public");
    f1(s3v,"constructor");
    f1(s4v,"destructor");
    f1(s5v,"virtual function");
    f1(s6v,"all private");
    f1(s7v,"enum member");
    
}





Code_102
evil_purgedir('all');y2=sim(modelName,'SimulationMode','normal');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','accel');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','rapid');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','software');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','processor');
evil_purgedir('all');slbuild(modelName,'ModelReferenceSimTarget');%modelref:accelator %similar to rapid-accelerator for main model
evil_purgedir('all');slbuild(modelName,'ModelReferenceCoderTarget');%modelref:sil %%similar to rtwbuild or StandaloneCoderTarget or sil or rtwgen for main model
SL: normal(inline), acceleator(jit/mex)*, rapid^
SF: normal(jit/mex),accelerator(jit/mex)+,rapid^
*: set_param(0, 'GlobalUseClassicAccelMode', 'off');
+: sfc('coder_options','forceNonJitBuild',0)
^:set_param(0, 'GlobalUseClassicAccelMode', 'off');


evil_purgedir('all');slbuild(modelName,'StandaloneCoderTarget');%similar to 
in: fullfile(matlabroot,'toolbox/stateflow/coder/private/compute_target_info.m') at line 248
disp('-------------pass---begin---------');
disp(['Target: ', targetName]);
disp(['SimulationMode:', get_param(mainMachineName, 'SimulationMode')]);
disp(['RapidAcceleratorSimStatus:', get_param(mainMachineName, 'RapidAcceleratorSimStatus')]);
disp(['SystemTargetFile:', get_param(mainMachineName, 'SystemTargetFile')]);
targetProps = rtw_target_props(relevantMachineName);
if ~isempty(targetProps)
    % disp(targetProps);
    disp(['targetProps.dynamicStringBufferSize :', char(string(targetProps.dynamicStringBufferSize))]);
    disp(['targetProps.codingExtMode: ',char(string(double(targetProps.codingExtMode)))]);
    disp(['targetProps.systemTargetFile: ',targetProps.systemTargetFile]);
else
    disp('None: targetProps')
end

disp('-------------pass---end---------');


func! s:MakeGDBCommandLineVisibleAndInTerminalMode(msg)
    let curwinid = win_getid(winnr())
    call win_gotoid(s:gdbwin)
    let gdbwinmode= mode()
    if gdbwinmode != 't'
        normal! GA
    endif
    call win_gotoid(curwinid)
endfunc

func! s:OnGdbMainOutput(dict, chan, msg)
  if s:foundGdbPrompt
      if a:msg =~ '(gdb)'
          " GDB command is finished executing.
          call s:MakeGDBCommandLineVisibleAndInTerminalMode(a:msg)
      endif
      return
  endif



sb -r "sfnew;bdclose all" &
>> cd ~/Downloads/old1/stu18

gvim toolbox/simulink/hmi/sl_hmi/util/util.cpp toolbox/vision/src/scopes/VideoViewer.cpp toolbox/stateflow/src/stateflow/cdr/cdr_semantics_state.cpp toolbox/stateflow/src/sf_sfun/sf_sfun.cpp +306 &

breakpoint on util.cpp 290
brakpoint on VideoViewer.cpp 384

openExample('vision/TrackingMarkerUsingSimulinkImagesExample')
TrackingMarkerUsingSimulinkImagesExample

util.cpp 287




With GDB
(1)  (gdb) hybrid_stack
(2)  (gdb) pmxval mxArrayArg
     (gdb) pmxval mxArrayArg "field1(index).field2{cellarrayIndex}"
(3)  (gdb) pmstackval stacklevel comandtoEvalute


printf "%s", SF:printf "%s", SF::EvaluateCmdAtMATLABStackLevel(2,"status")
printf "%s", SF::GetMLValueStr(mxArrayArg,"")
printf "%s", SF::GetMLValueStr(mxArrayArg,".field1(index).field2{cellarrayindex}")


yes | sbsmartbuild -opened -ignore-failed-modules -lean -no-ch-validate  -no-sbindent-files-in-lockdown



polyspace bugfinder and coderprover
https://www.mathworks.com/help/bugfinder/gs/use-bug-finder-and-code-prover.html
https://www.mathworks.com/help/bugfinder/defect-reference.html
https://www.mathworks.com/help/codeprover/run-time-check-reference.html
function myrunpolyspace(modelBuildDir)
    %polyspacesetup('install');
    %polyspacesetup('uninstall');
    %polyspacesetup('showpolyspacefolders')
    proj = polyspace.Project;
    proj.Configuration.Sources = {fullfile(pwd, modelBuildDir,'mym1.c')};
    proj.Configuration.TargetCompiler.Compiler = 'gnu4.9';
    proj.Configuration.EnvironmentSettings.IncludeFolders = {fullfile(pwd, modelBuildDir)};
    proj.Configuration.ResultsDir = fullfile(pwd,'results');
    proj.run('codeProver');
    disp(proj.Results.getSummary('runtime'));    
    proj.run('bugFinder');
    disp(proj.Results.getSummary('defects'));
end


rapid simulation (rsim.tlc)
modelName='mymodel1';
wrtp=rsimgetrtp(modelName);
save(['b' modelName], 'wrtp');
slbuild(modelName);
>> !<fullpathModelName> -p <fullPathOfbModelName.mat> -o <fullpathOfOutput.mat> -v


slfeature('Uint32Enum',1)

//shows what myobserve1 is observing
>> get_param('myobserve1', 'ObserverContext')

w1=Simulink.SimulationInput(modelName);
o2=sim(w1)

cd matlab/toolbox/stateflow/coder/private/bin
perl coder2m.pl ../../../coder/ force



---reading begin----remembering begin----
ascii escape sequnces \a \b \r \f \n \t \v
32 non alpha ascii symbols. 
---reading end----remembering end----
---language construct begin---
python: string, list=[], tuple=(), set={},dictionary={},
        list index, list initialization,
        comma, semicolon
        positional arguments, default arguments, 
        match/switch
matlab: class member access requires class object (obj.methodname)
C++   : class member access: does not explicitly require class object (methodname() or this.methodname());
 
---language construct end---
c++: key function: first non-inline virtual function
matlab: mw -using R2021b<U1|U2|...|UN|:ship>; mw -using R2021b will open latest update
license: ./bin/matlab -r "sfnew;bdclose all" -c /mathworks/devel/jobarchive/Bmain/latest_pass/matlab/licenses/license.dat 
matlab: cell(row,column) to preallocate cell array
matlab: indentcode()
matlab: timestamp datestr(datetime('now'),'yymmddHHMMSS') 
matlab:version='R2021a';modelName='test_model';load_system(modelName);Simulink.exportToVersion(modelName,[modelName version],version) 
c++: no stack when 1. incorrect compilation 2. infinite loop
simulink: slfeature('ScopedDSM')
simulink: data store diagnostics RWW  1. R:read before write  2. RW:write after read 3. RWW: write after write
simulink: data store: 1. global, needs Simulink.Signal at base workspace and fully-typed, no diagnostics, scope extends for all model including model blocks 
                      2. local, can be auto typed, diagnositcs, scoped extends thourhg models barring Model blocks
                      3. data references/scoped, must be fully typeds, diagnostics,reference is searched till we find global DSM or local DSM in upper levels including model blocks/main model
c++: bullseye coverage used by bcov team  https://mathworks.sharepoint.com/sites/qe/projects/codecov/default.aspx  
c++: only in declaration: default arguments, override, virtual
review board RB: rbt patch --print https://reviewboard.mathworks.com/r/834890  &> p2.patch 
               patch -p3 < p1.patch 
mp3: 1.https://youtu.be/hubr4m745s0 
simulink model always stops here even blank simulink model
WidgetRepositoryApiImpl::anyWidgetsExistForModel
inmem
license('inuse')
SLM3I.SLCommonDomain.isStateflowLoaded()
Stateflow.App.Cdr.Utils.isStateflowLoaded()
MATLAB: "clear global variable" can cause regression in IMT e.g.g2990366 
linux bash :w1=$(ps -C  python3 -o pid=);top -p $w1 
simulink: RapidAcceleratorUptodate vs usefastrestart
matlab: parsim vs batchsim
gvim:  highlight duplicate lines :sort and :g/^\(.*\)$\n\1$/p 
matlab: matfile read and write to variables in matfile without loading whole mat file as done by save/load
matlab: save('file1.mat','var1','var2','-v7.3') 
c++: default argument in declaration only. if no declaration then in definition
p4: p4 annotate -I //mw/Bstateflow/matlab/toolbox/stateflow/src/stateflow/cdr/prs_main.cpp#10 | grep -i parser_argument_expression_action 
sbtools:  sbindent -sort-includes 
pip: libclang pyelftools
sbtools: sbruntests -kill -session-id 1662167 
make,sbmake,gmake,sbcc:  put this "print-%  : ; @echo $* = $($*)" in makefile and use mw gmake print-envname to print value of any make variable
make,sbmake,gmake,sbcc: 
                        printallvariablenames  : ; echo $(.VARIABLES)
                        print-%  : ; @echo $* = $($*) 
                        mw gmake printallvariablenames;mw gmake print-MOD_INCLUDE_PATH  
make,sbmake,gmake,sbcc: LIBDEPS+=customdll
make,sbmake,gmake,sbcc: substitutre make variable with subst as CFLAGS := $(subst -W , , $(CFLAGS))
test:https://mathworks.sharepoint.com/sites/devu/testingresourcecenter/testingstandards/TestStandardsMATLABUnit/Index.aspx 
libclang python: lp541
sbtools:http://ah-ppatil-l.dhcp.mathworks.com/local-ssd/ppatil/   or   http://vdi-dd1ah-010.dhcp.mathworks.com/local-ssd/saurabhg/  or https://mathworks.sharepoint.com/sites/WikiArchive/PDF/Desktop%20Web%20Server.pdf  
matlab: echo vs disp: echo is used to turned on/off logging during execution
linux: hostname -f gives you dhcp address of host
linux: $(date +%M) is different than $(date +%s). s return elapsed seconds (1-inf) but M return only minute value (1-60)
sbtools: existance of mw_anchor tells sbsyncmaster it is a sandbox, -C does not work from such location
matlab: parfor is not nested. nested parfor = for. see lp542
matlab: sprintf formating info = sprintf('Worker: %2.0f\tTask: %2.0f:%2.0f', t.ID,topIdx, bottomIdx);
matlab: parfor print workder id;t = getCurrentTask(); t.ID
simulink: find_system flat
simulink: slsvTestingHook('LoadSaveVerbosity',3)
gdb: thread apply all back 10   -> gdb>thread apply all gdbcmd
gdb: sharedlibrary loads all symbols from all library
simulink load save: https://web.yammer.com/main/org/mathworks.com/threads/eyJfdHlwZSI6IlRocmVhZCIsImlkIjoiMjI5MTQ0ODYzODQ4MDM4NCJ9   or https://mathworks-my.sharepoint.com/personal/mwood_mathworks_com/_layouts/15/stream.aspx?id=%2Fpersonal%2Fmwood%5Fmathworks%5Fcom%2FDocuments%2Fresave%5Fharness%5Fdebugging%2Emp4&nav=eyJwbGF5YmFja09wdGlvbnMiOnsic3RhcnRUaW1lSW5TZWNvbmRzIjo3NTcuNzc0MTQ5fX0%3D&referrer=Yammer&referrerScenario=PopOut%2Emis%2E9cdf0edb%2D6a57%2D48be%2Dac75%2Da451e0a85e71  
matlab: generate char sequence  genIfCondXXXs = repmat('X',1,3); ->'XXX'
matlab: find element in an array find(X==val)->indices   X(X>=val)->elements  X==val->logicalvector
matlab: open matlab preferences: >>preferences
linux: lscpu
matlab: parallel computing toolbox: gcp('nocreate');
bash: watch command with pipe argument.notice "s and 's.  $watch -n2 "bash -c 'ls $s/m20-Bstateflow.j2305831/matlab/mwcov/logs/ | wc -l'" 
mwtools: leased windows machine using devpoolmanager, login: AD.MATHWORKS.COM\ppatil
c++: default arguments can be specified on definition if no declaration. With declaration, same default value must be specified on all declarations.
mwtools: ls /mathworks/devel/bat/Bstateflow has information about cluster jobs
linux: copy bash command output to clipboard (xclip/xsel) : echo foo | xclip -selection clipboard  (-o to output to command window)
p4v: selecting multiple files in changelist and open with shows gvim only when relevant (e.g. cpp) file is under the cursor while pressing right click
matlab: dbstop('if','error');dbstop('if','caugth','error');dbstop('if','all','error');
linux bash: dumping binary data on bash terminal changes terminals settings. use $reset 
Acronyms: HSP(hardware support package)
linux: to fix EADDRINUSE error:sudo lsof -i :3000<portnumber> which shows processes using that port number. then you can kill them using sudo kill -9 pid.
       this fixes addrinuse address already in use 5000 unhandled  
matlab: get the sandbox location of user: fullfile(filesep, 'mathworks','devel','sandbox',char(java.lang.System.getProperty('user.name')));
nodejs: node --max-old-space-size=1024 index.js
bug: invalid state name prevents other edit time errors(unresolved data)
failures: better way to get compile commands to clang.cindex e.g. using sbcompilecommands, srinath told about it. rootcauses:  countermeasures:
failures: clang.cindex.CursorKind.CXX_CATCH_STMT 
vim: ycm:  https://medium.com/parallel-thinking/actually-great-vim-javascript-completion-eaefa1cb443d  https://github.com/machakann/vim-Verdin 
python/bash:  os.system('cmd >> logfile 2>&1' ) for redirecting stderr to stdout
git:  git reset --soft HEAD~3  combine commits
python: sort based on field/subelement of array element: myarray.sort(key=lambda x: x[0], reverse=True)
python: print(msg,end='\r',sep='',flust=True): overwrite same line, 
python: python3 -m site --user-base => gives location where packages are installed.
python: sys.path.append(AbovePath+"site-packages")
vim: open file and go to line number :e +lineNumber fileName
js: var varName = function(){} vs function functionName(){} 
bash: top -p pid
bash: top -bc pName
bash: top -bc | grep commandText
bash: ps -p pId -o lstart
bash: command chaining 1. c1&&c2:c1 is run, if passes, c2 is run  2. c1||c2: c1 is run and if fails c2 is run 3. c1;c2: c1 is run, when finished, irrespective if pass/fail, c2 is run 4. c1&c2: c1 is run and immediately c2 is run 
bash: command stdout indirection: c1>file:outputwrite c1&>file:output&errorwrite c1>>file:outputappend c1&>>file:output&errorappend(maynot work, use next instead) c1>c2 2&>1 file:output&errorappend
bash: command stdin indirection: <(file) vs <<(here-doc) vs <<<(herestring) vs "<()"(process substituion)
bash: piping provides stdout from one command to stdin of another command1 | command2
bash: xarg to convert piped stdin to arguments; command1 | xargs -I {} command2 {}
bash: top : 1. E to mega/giga/kilo 2. shift-f + up/down + s + q to sort with different column
js: array has slice and splice;  string has only slice since string is pod not reference as array is. splice modifies the object
vim: :execute "normal! 3GP"  => go to line 3 and paste
vim: macro record and play: qa<cmd>q @a or :.,$norm @a
sbtools: file server from sbtools http://www-sbtools-ah.mathworks.com/mathworks/devel/sandbox/ppatil/misc/ 
         file server from inside labs: https://inside-labs.mathworks.com/sandbox/ppatil/  
         info about fs: https://mathworks.sharepoint.com/sites/ssg/inside/SitePages/Inside%20Files.aspx 
todo: sfir pointer comparision in getObject  http://sbd510333glnxa64.mathworks.com/mathworks/devel/sbs/34/ppatil.ch1_q4/work/sbruntests/20230910_185447/sbtest/sbscanlog_results.html 
todo: sfnew to create ert+fixed-time solver
todo: regular expressions: https://rubular.com/r/1LnJswio3F 
todo: vtune, inlining of unconditional function calls, overhead of M-C trips
todo: mwcoverage: variant lambda, macro foreachifcontinue, if(macro(12)), ci/cd report 
todo: mwcoverage idea: using find group of functions which can be encapsulated with a interface using callstack information. given set of functions, give functions that call any of them. find functions not called from outside and which are not marked as static
todo: alm vs plm vs ple pure::variants codebeamer, jama, lifecycle management software
todo: mw coverage: 1. hpp 2. macro surrounding code (as much as possible) 3. changelist 4. sbjobtracker
todo: tool to c++include minimum and sorted libclang or libtooling.
todo: c++20? modules, auto convert, 
todo: compile time monitor. 1. time for compiling each file 2. downstream files per include
todo: demo examples: stlcore mtl_evaluator half_utils, hdlcore dom_hdl/HDLArrayDistancePragma.cpp::processPragmaCall
todo: source2test: changelist->source2test, rbviewer, cgirprettyprintnavigator, sfcommandsfinders
todo: fileserver on /mathworks/inside/labs/dev/stateflow-tools
todo: libclang,libtooling,cppcheck  https://stackoverflow.com/questions/60627345/python-libclang-how-to-distinguish-const-vs-constexpr-types 
todo: sbjobtracker,ntiana
todo: coverage: data flow,
todo: nvim
todo: synchronizations: software transactional memory
todo: people: Bill Joy (vi) Bram Moolenar (vim) Larry Hastings(Python) Guido Van Rossume (Python)
todo: function at the start of file does not get instrumented in mwcov coverage
todo: gdb not printing std::containers 
todo: webui coverage when same file from two different modules is open, cFile is handled but cModule is not
todo: cgir log + bug + geck =>machine learning to find bug
todo: sbruntests status __runtests_finished__  is not inserted when tests are killed
todo: languages (bfs: indian), foreingn: spanish, japanese/chinese, arabic
todo: python debugger in vim
todo: javascript/es6 debugger in vim
todo: mwcoverage: enum/macro in if or for condition
todo: stm mappings: Bslt test/toolbox/stm toolbox toolbox/stm/stm/src/stm 
todo: mw testing info e.g. teardown, setup, requirements, session:https://mathworks.sharepoint.com/sites/devu/testingresourcecenter/testingstandards/TestStandardsMATLABUnit/Index.aspx 
todo: simulinktest mapping: Bslt --runallunder test/toolbox/simulinktest --modulepaths  toolbox/simulinktest/core/simharness/src/simharness_core toolbox/simulinktest/core/observer/src/observer_core toolbox/simulinktest/core/injector/src/injector_core toolbox/simulinktest/core/fuzzer/src/fuzzer_core toolbox/simulinktest/core/specminer/src/specminer_core toolbox/simulinktest/core/testadvisor/src/testadvisor_core toolbox/simulinktest/core/slt_blkmaputil/src/slt_blkmaputil_core toolbox/simulinktest/core/assessments/src/mtl_evaluator toolbox/simulinktest/core/assessments/src/mtl_expressions
todo: hdl mappings: test:hdlcoder src: src/cgir_hdl hdlcoder/hdlimport,  (?)->src/codermapping_hdl(_client) (?)->hdlcoder/hdl_datamodel
todo: hdl mappings: if constexpor in src/cgir_hdl/pir_mcos/Package.cpp
todo: sysml, xml,uml requirement manager, system composer
todo: savadhan vim/mw-completions sbcpptags
todo: nvim lua benefits better scripting
todo: coverage 1. iflogs for implicitdeclar 2. verify line logs for macro{} 3. objective number 4. os.system warning/error to file, use script 5. print() to same file as that of os.system 6. mwcov.cpp mwcovmex.cpp 7. combine all test results 8. webUI 9. objid in seq 10. obj offset instead of objid (pros/cons)
todo: python indent rules
todo: parallel programming python, matlab, c++, javascript
todo: libclang missing if 1. if insided lambda
todo: savadhan folders download
todo: matlab: error when adding a variable to a static workspace(anonymous or nested or function containing nested functinos)
todo: matlab file can be dragged to p4v and to gvim. see what else does or doesnot(but should) work with file dragging
todo: hackathon ideas
todo: sbcompilecommands
todo: move class method definitions from .cpp to .hpp and vice versa and manage scope:: automatically
todo: c++ xml/json libs nlohmann 
todo: errors at the end of create network sandbox in background
todo: linux run command and open its ui in particular workspace
todo: linux subsystem for windows
todo: what is HostQuiesced means in sbhostlease -list
todo: format of /mathworks/ subfolders, especially subfolders ofr /mathworks/devel 
todo: format of matlab/derived folder for each component
todo: how exported headers work with matlab/derived and with sbmake/sbcc/sbsmartbuild etc.
todo: mw test/doc/resource/examples/help components as against software components
todo: does bat job build/test node run on a single machine or used -distcc like
todo: maca vs maci
todo: linux cp command  does not work with .. and _ in filename e.g. cp ../cal_q16/matlab/toolbox/stateflow/sf_cal/_clang-format  matlab/toolbox/stateflow/sf_cal/_clang-format
todo: sbsmartbuild logs has a lot of information. find out more e.g. build1 with NOLINKTESTS=1 
todo: sbruntests result web page has a lot more information (e.g. change priority). find out more.
todo: qualify1 to run on from sandbox location directly with arguments like myqual or possibly with arguments
todo: vtunes, polyspace, 
todo: mwcoverage:break,continue with non-block-start line mappings
todo: mwcoverage: thread-safe instrumentation
todo: mwcoverage: same relative c++ path in multiple modules
tood: mwcoverage: copy jobCoverage.mat to /mathworks/devel/sandbox/$USER/mwcov/ to easily access from windows and also when sandbox is deleted/discarded
todo: model finder PFT 6/19/23
todo: S-function external and custom code debugger PFT 6/19/23
todo: pool = parpool('Threads') only uses 6 and not all 12 threads
todo: sbmake or anyother way to easily find out when prebuild is required
todo: tool to find out easy fixes to compile failures and fix them automatically
todo: leanarray in jobCoverage.mat
todo: sfcoverage avoid links when nodesktop is specified
todo: polyspace https://confluence.mathworks.com/display/POLYSP/Polyspace+Lab%3A+MathWorks+users 
todo: get information when when sf is loaded and when sf license is used. which blocks(open,create,edit,simulate etc.) loads sf and which of those checkout license. run fbt like tests to get this information
todo: why cellarray elements shown as {[1]} instead of {1} 
todo: typeditor spreadsheet bus creation and exporting.how it works. docked type editor spreadsheet
todo: model data editor, interface editor, typeeditor (docked), property inspector, model explorer, model browser
todo: matlab packages, namespace, projects
todo: nested parfor vs one level parfor performance
todo: print(')
todo sfcoverage mwcov.bash show stage times using stageStartTimeStamp=$(date +%m) echo "Time(m): $(( stageFinishTimeStamp - stageStartTimeStamp + 1))
todo sfcoverage: if end instrumentation on last line of function with function returning non-void throws  [-Werror=return-type] 
todo: sfcoverage: date +%m to date +%M
todo sfcoverage return in if: optimize, we may not need "}cov::" for if stmts with ifcond instrumented
todo: sfcoverage lambda in if or if in macro for elseif but not for previous ifs/elseif
todo: sfcoverage: linetocovobjective: macro lines or lines starting with # or c style lines
todo: sfcoverage: linetocovobjective statements in else branch 
todo: sfcoverage: linetocovobjective statements after catch
todo: docker matlab mpm jupyter
todo: sfcoverage duplicate code finder
todo: quantify network file open time or slowdown
todo: order of participants in teams meetings right panel 
todo: sfcoverage if(auto w1=f1()) { ;  if instrumentation is not added, instead compound stmt instrumentation is added
todo: ssd sandbox information: p4 changes -u username | grep -i changenumber; you will get something like  saurabhg@saurabhg.vdi-dd1ah-010.local-ssd.saurabhg.Bstateflow.sfir then you use  wget http://vdi-dd1ah-010/local-ssd/saurabhg/Bstateflow.sfir/.last_sunc   
todo: chd 4 does not work if sandbox name contains '.' or if it in network sbs location(sbs/34 vs sandbox/ppatil should use the one from which it is called)
todo: why? disp(2) vs disp("abc"). former one is center-aligned?
todo: cdractionsubsyschart.cpp 85
todo: linux what is ~. is it environment variable because "$echo ~" works without $ like other environment variables
todo: sfcoverage: investivage if misses 1. StateMetaSyntaxParser.cpp:86 2. visibility.cpp 3.cdr/ExclusiveStateCoder.cpp:494  4. flow/AllFlowGraphsCoder.cpp:226 
g "if (" --include=*cpp | grep -iv logIf  | grep -iv unittest | grep -iv pkgtest | grep -iv auto | grep -iv "((("
g "if (" --include=*cpp | grep -iv logIf  | grep -iv unittest | grep -iv pkgtest | grep -iv auto | grep -iv "(((" | grep -iv testing | grep -iv Lint | grep -iv gpobj

todo: snap job performance improvements: dll redirect/copy from parent cluster job + sbsmartbuild of all the changes since last snap
todo: qegatekeeper autmation + dev build failure early detection: clone when job is accepted + apply one non-snap change + compile (g++/clang/windows) + snapshot  
      in case of failure, send an email and wait for fix. ability to continue after fix has been applied.
      either continue till snap change or use snap-job-improvement approach for snap change as well (i.e. parent cluster dll copy + targeted sbsmartbuild)
todo: sbmake/sbcc/sbsmartbuild compile with -Werror disabled
todo: c++ how to use string in operator[] argument e.g. arrayVar1["abc"] like used by matlab StructArray
todo: cell commands loads simulink
todo: sf coverage: error out on multiple coverage objectives on the same line except for if
todo: sfcoverage macro in if:cdr/prs_pre_error_checks.cpp +910  lambda in if: LowerLatchFunctions
todo: compiler statistics, stateflow generated code(sfun/rtw) statistics
todo: sfcoverage: multiple objectives on same line 1. case 2: if(true)
todo: switch statements and variable declarations; can we declare in one case and use it in other case
todo: switch default can be anywhere in switch stmt
todo: gvim network file opening is very slow
todo: gvim search files shows duplicate files after searching same string second time
todo: sftools: api to parse sf c++ file using libclang python api
todo: -Wno-error only works with specific error as -Wno-error=unused-variable
todo: testfiles vs testpoints in sbruntests report and sfcore and in TestRunner.m
todo: sfcoverage parser.yac/y_tab
todo: compare speed of matlab with and without nojvm
todo: sf coverage 1.range based for loops instrumentation for clang.cindex
todo: sf coverage: give links for test, open, run, copyruncommand
todo: sf coverage instrumentFcnUsingDwarfInfo does not work if fcn is on first line
todo: qualify1.bash does not send emails for sbmake
todo: windows tools: sfsbmake verification on windows/mac from linux to avoid build failures in Bstateflow
todo: ah-stateflow ssd setup and local sandboxes
todo: how judiciary gets power via simulation of minds
todo: gvim open file slowdown for network sandbox
todo: gvim auto include adds '.'
todo: crontab -e example: see down 
todo: SF4ML.openInstalledMATLAB('R2019b')
todo: gecko automate: OriginatedIn
todo: exportToVersion one command for all geck attachments
todo: http://ah-cgir-00-l.mathworks.com/mathworks/inside/labs/dev/matlab_coder_tools/mlcddux/charts/  https://confluence.mathworks.com/display/MLCODER/MATLAB+Coder+DDUX+Site+Reference+Guide  
todo: does network sandbxo with makefile modified and compiled with CTB creates symbols for all cpp files in that module?
todo: what is value of  /mathworks/devel/jobarchive/Bstateflow/latest_pass/job-info   when LKG is accepted but archive in-progress?
todo: how to compile sf_variants/sf_sfun/sf_runtime using sbmake CTB= from matlabroot?
todo: sf coverage : 0. same files in two modules 1. "ctor with default initializeation with {" is not included 2. inline 3. abstract 4. lambda 5. std::functions 6. .c 7. virtual 8. function bodies == {} not included 9. empty functions and destructors not instrumented 10.  chart_has_init_outputs req table test vs testpoint
todo: sf coverage: 0: tests that run differently with runtests and with sbruntests e.g. chart_has_init_outputs req table tests 1. destructors are instrumented sometimes not other times.
todo: sf covreage addition: MCDC, profiling, refactoring cues, RB cues, web dashboard for dll infolike(size,compile time,symbols,branches,complexity,types etc.),minTestSubsetOfAcgirToCoverAll
todo: sf coverage addition: compile time statistics form sf dlls e.g. basic compile time, for each header what files get compiled, prebuild times, etc.
todo: sf coverage: reduce size of mappings
todo: sf coverage //mwfixes 
todo: sf coverage timings  sftest.source2test('fsm/chart.cpp', 1891, 'NumberOfTests', 10); for fixpt tests
todo: does static variable is shared across libraries and templates
todo: does .hpp definition of class method means inlining even when method is outside of class but in .hpp
todo: onedrive video experience
todo: rtb patch + linux patch: how to make linux patch work with p4 edit/add. how rbt patch works with binary files
todo: how to create a snapshot or sbcopy at: sbreviewboard or sbruntests
todo: test classetupparameter, methodsetupparameter,testparameters: how methodsetupparameter works
todo: coverage/heat map: test attributes, model attributes,trace,heat map of if/else branches, unreached code, uncovered code
todo: JITC and sf_runtime, published headers
todo: metasyntax ast for C and M: how it is formed
todo: hasChange(outdata) and outport_reuse enabled? darren https://reviewboard.mathworks.com/r/837333/diff/1/   
todo: syntax error. what happens of the text in same section but before syntax error.
todo: 
todo: Aditya's approxiate computing applications
todo: Suraj's data cleanup applications
todo:
todo: why does vdp load Stateflow?
todo: important fixes for bus with variable-size elements and persistent data with such buses: https://komodo.mathworks.com/main/gecko/view?Record=2742645
todo: create bug for DES chart inner transition to substate
todo: sil vs rsim vs raccel
todo: des in raccel or sil or rsim
todo: sf4ml_testtools in different clusters
todo: buscreators 
todo: python
todo: difference between glnx64 and glnxa64 in matlab/bin
todo: stateflow create auto-app with active-state data and recreate animation in app
todo: Stateflow.internal.findCommand
todo: pretty-printer navigation, keyboard-shortcuts, go-to-definition, fn(file-next),fp(file-previous),ff(file-first),fl(file-last),n(next),p(previous),b(back),d(definition)
todo: custom code separate process
todo: custom code c++
todo: ffmpe2 for saving
todo: imported+non-impoted nested bus-enum 
todo: disabled/enabled "preserve elelment dimensions" for nested buses
todo: subsystem reference chart, what is the modelname/machinename in generate_ir_for_chart
todo: custom code separate process and sil
todo: why MLFB out=10 shows up as '10.000' in simout while MAL out=10 shows up as '10'
todo: evil_purgedir('all') to clean  slcov_output, _ssf.mex _msf.mex, _sbs.mex
todo: c function block, code-generation and row-major issues
todo: disabling "preserve element dimenstions" where it is required
todo: how to use Simulink.ValueType
todo: cc struct can have extra members than correspoding bus. but it must have all the members from bus. 
todo: cstructname for mlfb/mal input/outputs or mal locals
todo: linked atomic box: what happens when function called from two main charts with different spec12
todo: MLFB from modelreference, open referred model, set a breakpoint on referred model, open main model(do not navigate to MLFB), simulate
       g2617873  g2604677  g2685302 g2577273 g2844799  g2844428 g2844371 
todo: matlab gdb stack, set variable value fix in feature.cpp
todo: TTFcn under TTchart  is searchable;rt.find('-isa','Stateflow.TruthTable')
todo: connection of slfunction and simulinkbasedstate
todo: (DONE: happened due to Bstateflow not compiled)DataOf -> DeOf (gdb stack missing)
todo: localdata used in MLFcn in SF throws mllint error
todo: copying boxes(atomic box,linked atomic box) does not change the name
todo: atomicsubchart state and atomicboxes icon in symbols window is same
todo: linked atomicsubchart state and linked atomicboxes icon in symbols window is same
todo: globally exported function from linked atomic subchart shows up as undefined in main chart symbols window
todo: globally exporting function is not available in non-linked atomic subcharts
todo: sharing of Parameters,DSM,CC,exportedSFFcns across library,modelreferenc and subsystem reference instances and using export model
todo: model data editor does not show stateflow in/out or locals
todo: MLFcn symbol window ununsed chartlevel:add G1 go to MLFcn level and go back and remove G1 and go forward
todo: Dipanjan feature " matrix size 1 as fixed checkbox" (1) c++
todo: MAL unassigned data is shown as 0 in Symbols window 
todo: initial value changing from scalar to non-scalar for MAL inherited size data 
todo: subsystem reference semantics when inside library
todo: verify atmoic subchart mapping (data logging and exported functions) with different scope mapping
todo: why we disallow function call output events in atomic subcharts
todo: linker based listing of auto-move stateflow-sf_cdr classes/functions
todo: gvim improvements
todo: ram's bug(created by me about subsystem reference MLFB): windows:mlfb internal linux:crash  is because of NDEBUG ?
todo: possible loss of data for size_t=mxuint32 on windows but not on linux why?  http://bat3cave.mathworks.com/Cabbage/cluster/Bstateflow/job/j2108270#tab=Summary
todo: bus vectors: supported: vectorcat,selector, unsupported: mux, demux, index
todo: function signals supported blocks: mux,demux,selector, unsupported:index,vectorcat, manual-switch,multiport-switch
todo: switches: manual,multi-port: message,functions not supported
todo: variant source/sink support all above
todo: bug: index vector block parameter is wrong.
todo: list bus-enabled, function-call enabled, message-enabled, enum-enabled, imagetype-enabled, string-enabled blocks.
todo: SF does not allow output types via back propagation. like sum block. this is useful with "Data Type Propagation" block
todo:(1)cgir navigation (2) stateflow command helper 
     (3) stateflow command guideline enforcement mlx(m commands) and unittest(cpp commands) (4) RB review feedback compilation
     (5) auto sf_cdr passthrough (6) auto sf_cdr coders/sf_ir move (7) debug sandboxes (8) batch command with stateflow
todo: modelreference hierarchy: sample time, DSM, parameter, custom code, exported functions
todo: output triggered event sent at t=0 is not listened. can we detect it?
todo: practise useful commands: cut, grep, time, find, pkill, 
todo: how to look inside simulink blocks like evilsf, e.g. repeating stair block. if I add trigger at top leve, error shown point it internals
todo: difference between [E1] and E1 on transition?
todo: modelrefsimtarget only shows disp output at t=0
todo: ExecAtInit in atomic subchart is hidden 
todo: enabled subsystem: effect of (1)states when enabling and (2)output when disabled on Stateflow chart inside
todo: QEgatekeeper workflow simplification 
todo: MW book clubs. what others are reading?
todo: mainchart(E1,E2,E3)->atomicsubchart(E1,E3): when mainchart woken up by E2, atomicsubchart executes call_event
todo: find out restriction on mapping 1-n n-1 1-n(different scope)
todo: create bug: dsm:dsm(1) mapping gives wrong error
todo: sb/bat tool to catch deadcode in a job and create geck automatically. if a line of code is covered in job1 but not in job2 then create a geck. 
      But if new line is added in job2 which is not covered, then compile such changes and link to users or create a task
todo: gvim to open new gvim from existing gvim with all file corresponding to new sandbox opened. 
      e.g. if oldsandbox/file1.cpp is open in old gvim then newsandbox/file1.cpp open in new gvim.
todo: hdl, plc, jit, grt, ert, rapidsim, rtwsimtarget, gpu, mealy, moore, continuous, discreet, export-function, synchronous, dataflow, algrebiac loop
todo:sbreviewboard with clone+sbbackup+sbsmartbuild
todo: c++/rust, java/scala, javascript/typescipt, matlab/python, json/xml, markdown
todo: ai, robotics,
todo: stateflow defaults
todo: stateflow hover show data types or other information when not simulating.
todo: implicit(en,du,ex,hasChanged)
todo:  IllegalMaskParamsForAtomicSubchart  might be restrictive. we could still allow lib charts with mask but with no parameter data to be used as atomic subchart
todo: qegatekeeper healper for running tests in previous jobs and previous MATLAB versions and in submission sandboxes
todo: windows compile through gvim/gdb
todo: lcmenv for ulcm: 
(1) DONE: breakpoint before gdb start 
(2) DONE: breakpoint before attach 
(3) DONE: breakpoint status after detaching 
(3) DONE: breakpoint status after quitting
(4) DONE: gdb window after quitting
(5) disp var1
(6) dbstack/mstack issue: deb10, requires compile
(7) sbmake issue        : 20a
(8) RUNONSERVER and runOnServer
(9) .gdbinit: use sbtools .gdbinit see where it works especially sb-load-auto-stack
(8) deb9 :18b,19ab,20a
     deb10:20b,21ab,22a
----------not gdb/gvim issues------

todo: atomic subchart v2: (1)unbounded dsm (2) chart level functions (3) rtw (4) input events (5) mapping expressions
                          (6)incremental codegen (7) clean mappedPortInfo (8) linked subcharts
                          (9) variants (10) continuous daa (11) other charts(mealy,moore, continuous)
                          (12) idcinfo(why fromportarray crashes 
                          (13) populateMappingOnIDC:call in CG, early return in Prop if idinfo->inPortMapping non-empty
                          (14) jit/hdl/plc/ert/grt/rapidaccel/sldv (15) mE1->aE2,mE2->aE1 (16) aE1->disabled
                          (17) slci/coverage/lint/exporttoprevious/grandfather (18) check if trigger are allowed before adding during chart new or during grandfathering
                          (18)Stateflow:sflint:SelfModifiableMaskInfo  masking in stateflow
                          (19) no atomic subcharts: hdl(no , des(only local event), continuous(no event)  no SF: synchronous
                               plc: converts atomic subcharts to normal subchart during code generation
                          (20) unatomize
                          (21) superstep semantics
                          (22) inplace data
                          (23) link disable/restore/break
                          (24) atomic subchart to subchart and vice versa
                          (25) sfun: mdl_initialize_subchart from mainchart, haschanged_sf_get_data_reuse, exported function
todo: sbsmartbuild with reverted files does not work? p4 edit fil1.txt;sbsmartbuild -opened;p4 revert file1.txt;sbsmartbuild -opened   
todo: coverage, open model that it multiple lines
todo: allow snapshot or sbbackup+newsandbox+restore+build as part of sbreviewboard for better reviews
todo: allow easier reproductions for BPs
todo: sfnewlibchart for creating a new library model with a stateflow chart, sfnewsschart,sfnewmodrefchart
todo: list all sf(...) commands as called by tests
todo: sf pass level to functions mapping: pass level:1. propagation 1a.dim 1b.type 1c.complex 1d unit 2.mdlpostpropagation 2a.construct_context 2b.construct_module 3.mdlsetworkwidth 4.mdlruntimeresources 5. mdloutput 6. edit-time 7. open 7a.load 7b. postload 8 save 8a. presave 8b. postsave
todo: detailed SF coverage, phases,
todo: intelligence via rote learning using AI for language learning
todo: fit rtwcode code to cleanly designed sfchart/mlfb/genericSLblock
todo: command searching (code,gecko,confluence,inside) and indexing


matlab commands
1: clear global myglobal1
2: setappdata(uddH,"key", value);getappdata(uddH,"key")
3. sbrestore -from-shelf

std::string s1=123; //compiles assign character to s1;
web ui matlab: mw env ML_WEBUI=0 matlab & 

Links:
quadcopter demo collections: https://confluence.mathworks.com/display/BFAERO/Install+Instructions 
positive tests: https://confluence.mathworks.com/display/STAT/MATLABUnit+Test+Writing+for+Stateflow#MATLABUnitTestWritingforStateflow-stateflowtest.TestCase.PositiveTest 
https://confluence.mathworks.com/display/CODEINFR/2.+Duplication+of+RTWCG+binding+code+in+Stateflow+driver+and+MATLAB+System+Block+code+construction
ssGetSampleTime and ssGetOffsetTime: D1,O1: for discrete, 0,0:continuous, -1,-1:edge-triggered,function-call-triggered, 0,1:FiM
ssGetTimeResolution: zero:   (1) continuous (2) FiM without-input-event
                     nonzero (1) discrete, edge-triggered, function-call-triggered, FiM-with-input-event
                     Note: FiM only possible with variable-step solver

FiM conditions: Fixed in Minor step: (1) SF chart and, 
                                     (2) inherited sample time and,
                                     (3) input connected to port with 0 sample time and,
                                     (4) varible-step solver

ModelReference:
    sample time: must be integer multiple of main model sample time
    solver: default: solver of main model.  local: can be used local solver of reference model as well

ExecuteAtInit:
    a. without input edge or input function-call event: chart is executed twice at t=0;
    b. ExecAtInit=false: first event(FCEvent@t=0 or ETEvent@t=nonzerovalue), chart is not active.
       Hence, chart takes step but event is not used except event is used on chart default transition path.

Function call SF event:
1. function call generator: can be connected to function-call-sf-input-port of any size. size is backpropagated
2. mux with function calls: must have unique input function call signals
3. demux: size are auto split into output ports of demux
4. input event: can be listened at t=0;

Edge-triggered SF event:
1. multiple events: 
   a. inputs     : chart is called multiple times once of each event
   b. output send: sends all, one at a step in in multiple steps
2. types: 
   a. inputSL/outputSL: boolean 
   b. inputSF/outputSF: int8
3. output event:
   a. can only be Either
   b. event sent at t=0 is lost or downstream chart/block cannot act on it. This is because, SL starts calling events listener from t=1;
4. input event:
   a. cannot listen at t=0 as SL starts calling event listener from t=1;
6. mdlEnable,mdlStart: NOOP for edge-triggered events


ssGetTimeResolution (and not ssGetSampleTime) is used by absolute time operators counters
for function-call triggered and edge-triggered SF charts because optimization is not possible.


Parallel toolbox and server: 
parfor, perfeval

Batch Processing(without parallel server)
1. createTask(j,@myf1,1,{12});submit(j);wait(j);fetchOutputs(j)
2. j=batch("myf1",1,{12});wait(j);fetchOutputs(j)


source blocks: ramp-repeating, step-repeatingstair, sine-chirping-whitenoise-random-pulse-counter
deb08: 18a
deb09: 18b,19a,19b,20a(error)
deb10: 20b,21a,21b,22a
deb11: 22b, 23a,23b
on target
sudo gdbserver localhost:10001 myprogram  //sudo is required

ulcm gvim/gdb with wrapper ssh: (1) s:way terminal (2) s:vertical=1

on host
gdb
file myprogam
targer remote targetIP:10001

after(2,sec) vs [after(2,sec)]
E1() vs send(E1)
after, t, et
chg,en,ex
in
hasChanged
rising/falling
this


stateflow SF keywords or operators:
after: after(3,sec)==[after(3,sec)] but after(3,E)!=[after(3,E)]   after(3,E)==E[after(2,E)]  i.e. [after(3,E)] is taken when ECounter>3 even when currentSfEvent!=E
sldv
slci
sdi
eml
cgir
plccoder restrictions or limitations

hdlcoder restrictions or limitations

c++coder restrictions or limitations

gpucoder restrictions or limitations

jit restrictions or limitations


continuous chart restrictions or limitations: 
(1) no events
(2) require at least one state

moore chart restrictions or limitations:
(1) no atomic subchart or atomic box 
(2) no en,du,ex sections
(3) no SL functions simulink functions, atomic subcharchat, atomic boxes, 
(4) output can only depend of current state (but not updated current state) e.g. out1=local1;local1++ is okay but local1++;out1=local1 is not.
(5) no implicit recursive local events i.e. en,ex,chg
(6) no explicit recursive local event i.e. user defined local events

atomic subchart restrictions or limitations: 
(1) Big NO: moore, continuous, output event, messages, varsize, masked library chart 
(2) local events(subchart top level):  no outgoing transition, 
(3) different scope mapping: no data logging (might be wrong), no exported function from atomic subchart
(4) local data C subchart: no non-zero based indexing
(5) input events: must have input to input and unique mapping
(6) local/output data of main chart mapped to atmoic subchart data: must fully specified
(7) chart level function prototype fully specialized because it can be called from main chart without exporting it

Stateflow remove trailing 1 from  dimensions > 2
edit time size [n,m,1,1,1]==comliled size [n,m]
edit time size [n,1,1,1,1]==comliled size [n,1]
edit time size [n,1]==comliled size [n,1]
edit time size [n]==comliled size [n]
edit time size [1,1,n]==comliled size [1,1,n]



bus/enum types import/export setting algorithm:
EMLExclusive(always imported,no bus required,all childtypes imported as well)<SLEMLCommon(bus required, busimportedsetting<imported<gentypedef)<SL(bus required, busimportedsetting<customcodeheader<gentypedef*)
*error if type contains in customcodeheader




headerfile for exported is only applicable for code-generation.
for simulation, exported generates (1) struct for buses (2) macro based named-const for enums


import bus type: bus-bus nesting: nested1:topexportbottomimport: works  nested2:topimportbottomexport does not work: MAL/CAL: host compiler error MLFB: CStructNameInconsistentUseOfExtern
import bus type: bus-enum type: nested1:busexportenumimport:works busimportenumexport:works due to implicit enum/integer casting

Any coder.cstructname import type needs all its children types to be imported using cstructname

generate typedef: 
    (1) only for MLFB/SF block simulation, 
    (2) error if type exists in cc imported includes with "ImportCustomCode==true" 
    (3) no effect on exclusinve coder.cstructname imported types. 
        exclusive means they are not used by(or inside of) mlfb/mal input/output/localdata types. 
        such types always imported 
          e.g. A(parenttype)->B(childtype) A,B:both used with coder.cstructname A:MLFB temporaty B:MLFB input;  
               A,B:both buses and both have imported header. generate-typedef enabled: 
               above example gives  CStructNameInconsistentUseOfExtern because B is exported but A(exclusive) is imported
    (4) else bus/enum always exports even if marked as import


Bus headers are like unimported custom code includes

Bus/enum types: general rules, see below for cstructname special case
(1) if matches with cc includes and type is not used with cstrcutname imported, then imported else
(2) imported for "imported+headerfile" or "auto+withheaderfile"
    exported for "exported+with/without headerfile" or "auto+withoutheaderfile"

MLFB/MLFcnInSF: (1) exclusive(see above for details) cstructname with headerfile types are always imported along its children (2) now remaining types struct types (input/output/localdata) are handled as per rules above
          e.g. A(parenttype)->B(childtype) A,B:both used with coder.cstructname A:MLFB temporaty B:MLFB input;  
               A,B:both buses,both exported. generate-typedef disabled: 
               above example gives  CStructNameInconsistentUseOfExtern because B is exported but A(exclusive) is imported
network:
protocol: 
  serial:
         SCI(UART) : async
         SPI       : sync
  xcp: xcp on ethernet(tcp/udp), xcp on serial(SCI-UART,SCP), xcp on can, xcp on flexray, xcp on usb

xil: common code between sil or pil
xdpyinfo | grep 'dimensions:'
ffmpeg -video_size 3840x1215 -framerate 30 -f x11grab -i :0.0 -c:v libx264rgb -crf 0 -preset ultrafast sample.mkv

plc gecks: g2651295, g2450425  esc: 2829032 , 2811763,  2807437

DES: (1) no during action (2) no simulink based states (3) no sample time (4) no input/output events (5) temporal trigger not allowed with transition condition
     (6) transition condition requires Message/Event trigger (7) not allowed in triggered or function call subsystem 
     (8) no code generation

Simulink editor developer help page: https://confluence.mathworks.com/pages/viewpage.action?pageId=775337453
nonjit-fallback: (1) imported bus (2) test-point (3) ir_vars (varsize and/or unbounded array C++) (4) ir_functions (unbounded array C++)
parameters:
EnablePacing
PacingRate
DefaultCustomCodeFunctionArrayLayout
UseRowMajorAlgorithm
InstrumentedSignals
MaskHideContents
MaskObject
BlockDVGIcon


PLC programmable control logic plccoder
IEC 61131-3 
plcgeneratecode(gcb)
IDE: codysys, rockwell
format: ladder diagram, function block diagram, structured text, instruction list, sequential function chart  
extenstion: .st, .exp
syntex of structure text: types (8:int,uint 16:sint,usint 32:dint,udint bool, 32:real 64:lreal

CG::Obj->CG::Node,CG::Edge,CG::Scope,CG::Symbol
CG::Node->CG::Stmt,CG::Expr
CG::Symbol->CG::Var,CG::Type,CG::Const
CG::Const->CG::Fcn,CG::DoublConst,..


evil_generate_baseline('t_buswithndelem1','-justSave')


mw -using R2019a matlab -r "sfnew;bdclose all" &> /tmp/r19a.log &
mw -using R2019b matlab -r "sfnew;bdclose all" &> /tmp/r19b.log &
mw -using R2020a matlab -r "sfnew;bdclose all" &> /tmp/r20a.log &
mw -using R2020b matlab -r "sfnew;bdclose all" &> /tmp/r20b.log &
mw -using R2021a matlab -r "sfnew;bdclose all" &> /tmp/r21a.log &
mw -using R2021b matlab -r "sfnew;bdclose all" &> /tmp/r21b.log &
mw -using R2022a matlab -r "sfnew;bdclose all" &> /tmp/r22a.log &
mw -using R2022b matlab -r "sfnew;bdclose all" &> /tmp/r22b.log &


c style cast or reinterpret cast to convert pointer of one type to another. void* can be assigned to any pointer and vice-versa

why non-jit fallback for bus headers, enum headers, test points

linked (atomic) boxes vs linked (atomic) subchart: when copied library chart contains states, it is copied as linked (atomic) subchart other as linked (atomic) box
linkd (atomic) box is useful for sharing 

Object principles: 
1. SOLID: single responsibility, open-closed, liskov substitution, interface segregation, dependency inversion.
2. CRC: class, responsibility, collaborator

vim: set gfn=Monospace\ 13
vim: set gfn?
vim: set gfn*

subsystemRef: as if it copies chart/MLFB into main model. not sure what is difference between ModelRef/Library and subsystemRef

>> modelName='myModel2';studioApp = SLM3I.SLDomain.getLastActiveStudioAppFor(get_param(modelName,'handle'));st1=studioApp.getStudio.getStudioTag;


model reference, subsystem reference, library comparison: https://www.mathworks.com/help/simulink/ug/model-architecture-guidelines.html

matlab -webui -debugjs
JSDDesktop

state: statetypeenum(.type) stateusertypeenum(state_get_usertype)
sf('get',stateid,'.treeNode) or sf('ActualParentOf',stateChartTransitionFunctionDataBoxJunctionId)
Box can never be return by ACtualParentOf
sf('get',stateid,'.type)

slblock(non-link) to chart:     sf('get',sf('GetSFBlockData',slBlock),'.chart') 
chart to slblock: w1=up(sf('IdToHandle',chartId));w1.Handle

get_state_for_atomic_subchart
getSubchartState
isUsedAsComponent
SLUtils.isStateflowBlock


chartid to sfunctionblock: sf('get',sf('get',chartId,'.instance'),'instance.sfunctionBlock')
chartid to simulinkblock : sf('get',sf('get',chartId,'.instance'),'instance.simulinkBlock') 
slfcn/slbasedstateif to slfcnblk:  sf('get',slfcnIdOrslstateId,'.simulink.blockhandle')
sf('FunctionsIn/SubstatesIn/DataIn/EventsIn/JunctionsIn/TransitionsIn',id)
sf('ActualParentOf',id)

DSM: Data Store Memory
local: DSM block or using Simulink.Signal in model workspace: only accessible in model not in model reference
global: using Simulink.Signal in base workspace, need full-specialiled size/type/complexity: accessible anywhere. corresponding DSM write/read block shows global icon
Simulink.Signal InitialValue is string
DSM block supports string but initial value must be 0
Simulink Signals do not support string when used as DSM or when used as specification for signal line.

DSM and Simulink Signal supports: bus, enum

DSM:       no varsize
Parameter: no varsize, no string
Signals:               no string

C chart: ":=" fixed point assignment

Modref: cannot use anything from main model workspace or sldd used by main model (and not used by modref)

Only possible in base workspace/sldd: Bus, ValueType, Alias type, configuration, variant, variantcontrol, variantvariable

[mydir,~,~=fileparts(mfilename('fullpath')) : get dir of matlab file from inside

matlab matrix expansion: kron(expand individual element/row/column n times), repmat(expand whole matrix n times)

parametrized library links
parametrized model reference instances. bottom model's model workspace parameter/MVariable mark as argument. use model block instance parameters
self-modifiable mask on library block's masks code tab

model(not library/ss)->toolstrip->modeling->create system mask: this is used when used as model reference
model reference local solver: input signal handling

[realSuperTransitionid,~,~]=sf('get',superTransitionFirstLinkId,'.subLink')
superTransitionFirstLinkId=sf('get',realSuperTransitionid,'.firstSubWire')
sf('get',normalTransitionId,'.type')==0 (SF::NORMAL)
sf('get',realSuperTransitionid,'.type')==2 (SF::SUPER)
sf('get',superTransitionFirstLinkId,'.type')==1 (SF::SUB)
sf('get',anyOf4FunctionId,'.type')==3
sf('get',boxOrAtomicBoxOrNoteOrImage','.type')==2
sf('get',andstategroupedOrSubchartOrAtomicSubchartstateorSLStateState,'.type')==1
sf('get',orStateGroupedOrSubchartOrAtomicSubchartstateorSLStateState,'.type')==1

sf('get',id,'.isa') == STATE/TRANSITION/DATA/EVENT/CHART/MACHINE/INSTANCE/PORT/JUNCTION/TARGET/LINKCHART/SCRIPT

isa:STATE,type(stateenumtype):AND/OR/FUNC/BOX/MARKER,stateusernumtype:NOTEBOX/BOX/ATOMICBOX/EMFun/GFcn/SLFcn/TTFcn/AtomicState
TRANSITION/DATA/EVENT/CHART/MACHINE/INSTANCE/PORT/JUNCTION/TARGET/LINKCHART/SCRIPT





function getAllDB(mainModelName)
    %v=sf('find',sf('FunctionsIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','mlfcn1')
%v=sf('find',sf('SubstatesIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','stateA')
%v=sf('get',sf('find',sf('SubstatesIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','A'),'state.simulink.blockHandle')
%sf('get',sf('GetSFBlockData',get_param(get_param(gcbh,'ReferenceBlock'),'handle')),'instance.chart')
%getappdata(get_param(sf('get',sf('GetSFBlockData',get_param(get_param(gcbh,'ReferenceBlock'),'handle')),'instance.sfunctionBlock'),'Object'),'SF_InstanceSpecChecksum')
%get_param([gcb,'/ SFunction '],'handle')
     clc;
    if ~exist('mainModelName','var')
        mainModelName = bdroot;
    end
    if false
        givenBlock = get_param(givenPath, 'handle');
        referenceBlock = get_param(chartPath,'ReferenceBlock');
        if ~isempty(referenceBlock)
            chartBlock = referenceBlock;
        else
            chartBlock = givenBlock;
        end
        chartInstanceId = sf('GetSFBlockData', chartBlock);
        chartId = sf('get',chartInstanceId, 'instance.chart');
        chartInstanceId = sf('get',chartId, 'chart.instance');
        
    end
    AllModelReferencesInModel = find_system(mainModelName,'BlockType','ModelReference');
    AllModelsReferencedInMainModelNames=cellfun(@(x) get_param(x,'ModelName'),AllModelReferencesInModel,'UniformOutput',false);
    AllModelNames = [mainModelName,AllModelsReferencedInMainModelNames'];
    AllSFBlocksInMainModelIncludingReferences = {};
    for i = 1:length(AllModelNames)
        modelName = AllModelNames{i};
        AllSimulinkBlocksInModel = find_system(modelName);
        IsBlockASFBlockInModel = cellfun(@(x) isSFBlock(x), AllSimulinkBlocksInModel);
        AllSFBlocksInThisModel = AllSimulinkBlocksInModel(IsBlockASFBlockInModel);
        AllSFBlocksInMainModelIncludingReferences = [AllSFBlocksInMainModelIncludingReferences AllSFBlocksInThisModel'];
    end
    AllSFBlocksInMainModelIncludingReferences = unique(AllSFBlocksInMainModelIncludingReferences);

    data = sf('get','all','data.id');
    dataU=arrayfun(@(x) sf('IdToHandle',x), data, 'UniformOutput', false);
    dataP={};
    for i = 1:length(dataU)
        if ~isempty(dataU{i})
            dataP{end+1} = [num2str(dataU{i}.id) ' : ' dataU{i}.path filesep dataU{i}.name];
        end
    end

    states = sf('get','all','state.id');
    statesU=arrayfun(@(x) sf('IdToHandle',x), states, 'UniformOutput', false);
    statesP={};
    for i = 1:length(statesU)
        if ~isempty(statesU{i})
            statesP{end+1} = [num2str(statesU{i}.id) ' : ' statesU{i}.path filesep statesU{i}.name]; %#ok<*AGROW>
        end
    end


    machines = sf('get','all','machine.id');
    machinesU=arrayfun(@(x) sf('IdToHandle',x), machines, 'UniformOutput', false);
    machinesP={};
    linkCharts={};
    for i = 1:length(machinesU)
        if ~isempty(machinesU{i})
            machinesP{end+1} = [num2str(machinesU{i}.id) ' : ' machinesU{i}.path];
            linkCharts{end+1} =  sf('get',machinesU{i}.Id,'machine.sfLinks');
        end
    end


    targets = sf('get','all','target.id');
    targetsU=arrayfun(@(x) sf('IdToHandle',x), targets, 'UniformOutput', false);
    targetsP={};
    for i = 1:length(targetsU)
        if ~isempty(targetsU{i})
            targetsP{end+1} = [num2str(targetsU{i}.id) ' : ' targetsU{i}.path filesep targetsU{i}.name];
        end
    end

    charts = sf('get','all','chart.id');
    chartsU=arrayfun(@(x) sf('IdToHandle',x), charts, 'UniformOutput', false);
    chartsP={};
    for i = 1:length(chartsU)
        if ~isempty(chartsU{i})
            chartsP{end+1} = [num2str(chartsU{i}.id) ' : ' chartsU{i}.path];
        end
    end

    instances = sf('get','all','instance.id');
    instancesP={};
    for i = 1:length(instances)
        chart = sf('get',instances(i),'instance.chart');
        chartU = sf('IdToHandle',chart);
        instancesP{end+1} = [num2str(instances(i)) ' : ' num2str(chart) ' : ' chartU.Path];
    end
    linkChartIds={};
    linkChartsU={};
    linkChartsP={};
    for i = 1:length(linkCharts)
        l = linkCharts{i};
        for j = 1:length(l)
            linkChartIds{end+1}=sf('GetSFBlockData', l(j));
            linkChartsU{end+1}=sf('IdToHandle',linkChartIds{end});
            referenceBlock = get_param(l(j),'ReferenceBlock');
            chartSLBlockH = get_param(referenceBlock,'handle');
            chartInstanceId = sf('GetSFBlockData', chartSLBlockH);
            chartId = sf('get',chartInstanceId, 'instance.chart');
            chartU = sf('IdToHandle',chartId);
            linkChartsP{end+1}=[num2str(linkChartsU{end}.Id) ' : '  linkChartsU{end}.Path ' : ' num2str(chartId) ' : ' referenceBlock ' : ' chartU.Path];
        end
    end

    disp('-------------sl handles----------');
    largestPathLength = 0;
    for i = 1:length(AllSFBlocksInMainModelIncludingReferences)
        if largestPathLength < length(AllSFBlocksInMainModelIncludingReferences{i})
            largestPathLength = length(AllSFBlocksInMainModelIncludingReferences{i});
        end
    end
    disp([mainModelName repelem(' ',1,(largestPathLength) - length(mainModelName))...
            ': slroobdhandle: ' ...
            num2str(get_param(mainModelName,'handle')) ...
            ]);        
    for i = 1:length(AllSFBlocksInMainModelIncludingReferences)
        
        disp([AllSFBlocksInMainModelIncludingReferences{i} repelem(' ',1,(largestPathLength) - length(AllSFBlocksInMainModelIncludingReferences{i}))...
            ': sfblockhandle: ' ...
            num2str(get_param(AllSFBlocksInMainModelIncludingReferences{i},'handle')) ...
            ': sfuncblockhandle: ' ...
            num2str(get_param([AllSFBlocksInMainModelIncludingReferences{i} '/ SFunction '],'handle'))...
            ]);
    end

    disp('-------------machines------------');
    for i = 1:length(machinesP)
        disp(machinesP{i});
    end
    disp('-------------targets------------')
    for i = 1:length(targetsP)
        disp(targetsP{i});
    end
    disp('-------------charts-------------')
    for i = 1:length(chartsP)
        disp(chartsP{i});
    end
    disp('-------------instances----------')
    for i = 1:length(instancesP)
        disp(instancesP{i});
    end
    disp('-------------linkCharts---------')
    for i = 1:length(linkChartsP)
        disp(linkChartsP{i});
    end
    disp('-------------states--------------')
    for i = 1:length(statesP)
        disp(statesP{i});
    end
    disp('-------------data---------------')
    for i = 1:length(dataP)
        disp(dataP{i});
    end
    disp('-------------sf blocks----------')
    for i = 1:length(AllSFBlocksInMainModelIncludingReferences)
        disp(AllSFBlocksInMainModelIncludingReferences{i});
    end
    
    disp('-------------end---------------')
end
function v = isSFBlock(blockH)
    blockH = get_param(blockH,'handle');
    v =strcmpi(get_param(blockH, 'Type'), 'Block') && ...
        strcmpi(get_param(blockH, 'BlockType'), 'Subsystem') && ...
        ~strcmpi(get_param(blockH, 'SFBlockType'), 'NONE');
end



GECKO_OVERRIDE RB_OVERRIDE USERLOCK_OVERRIDE PT_OVERRIDE(prequal)

MRP DPR RDM epic story


output edge triggered event must be EitherEdge.
input edge triggered event can be falling, rising or eitheredge.
you can have multiple output events, some function-call, some edge triggered and mixed but not inputs
function-call-inputs/outputs cannot be viewd in Scope,XYGraph,SDI

Model data editor: parameter tab: block state parameter and argument parameter from model refererence model workspace
python3 http server python3 -m http.server 8000 

sbsmartbuild -mods all -k -ignore-failed-modules -no-ch-validate -lean  &> sbsmartbuild2.log -list-mode -no-build
coverage: decision, condition decision, MCDC(modified condition decision coverage)

Bstateflow full debug sandbox: mw -using Bstateflow sbs clone create -c Bstateflow -j 2088785 &> sbsmartbuild1.log; cd $s/Bstateflow.j2088785/; sbsmartbuild -mods all -k -ignore-failed-modules -no-ch-validate -lean  &> sbsmartbuild2.log
find matlab/bin/glnxa64 -iname "libmw*dbg" -exec grep  "\-O0"  -L {} \;
 time find oct10/matlab/bin/glnxa64 -iname "libmw*dbg" -exec grep  "\-g \-O2"  -l {} &> libmwso_with_O0.log \; 
$ time find . -iname "libmw.so*" -exec ln -sf /local-ssd/ppatil/oct10/matlab/bin/glnxa64/{} {} \;

make_bstateflow_full_debug_sandbox -keep-existing-debug-dll-intact/-k -create-new/-c [name] -dll-copy/-d


matlab_coder license is not required to generate mex files. it is required to generate c/c++ code
license('inuse') gives you name to enable or disable using 
license('checkout','matlab_coder','enable');license('test','matlab_coder','enable')
%#codegen pragma is used for lint only

C: near, far, huge pointers segment+offset

C chart: scalar expansion        e.g. d2x3=1;d2x3=e2x3+1;
M chart: scalar+matrix expansion e.g. above;d2x3=e1x3;d2x3=e1x3+f2x3, or everything described in below help page
matrix expansion in MATLAB:https://www.mathworks.com/help/matlab/matlab_prog/compatible-array-sizes-for-basic-operations.html 

coderTypeEditor

save('dataFile.mat', 'myVarName','mat') %mat is default
save('dataFile.dat', 'myVarName','ascii', '-tabs')

cfg=coder.config;cfg.GlobalDataSyncMethod  coder.extrinsic('sync:on','f1')

y1=cast(1,'int8')
y2=cast(2,'like',y1)

coder.ceval('-global','f1')
coder.ceval('-layout:rowMajor','f1')
coder.const and coder.Constant: specify code generation time constant to constant fold-code



C++ not allowed outside of class definition: override, default argument

mw sbruntests -kill -session-id 1513433

https://reviewboard.mathworks.com/r/779306/diff/1/
custom cc initilizer SimCustomInitializer/SimCustomTerminator
 if test `sbps -user distccd | wc -l` -gt 0; then echo yes; fi


for normal duplicate charts: sfun(1),rtw(2),mdlrtw(1)
for library linked charts  : sfun(1),rtw(1),mdlrtw(1):  exception:mdlrtw-slci:(2):e.g:g2777763(g2820549):when output function call is connected to variant subsystem
//for two exact same chart: sfun: 1 construct_module, rtw: 2 construct_module,  mdlrtw: 1 call, mdlrtw(slci): ? calls, mdlrts(when charts are variant subsystem): ? calls
for library charts(spec1(2instances), spec2(1instance): sfun: 2 construct_module, rtw: 2 construct_module,  mdlrtw: 2 call, mdlrtw(slci): ? calls, mdlrts(when charts are variant subsystem): ? calls


vim: :call cursor(linenumber, columnnumber)
include what you use: https://confluence.mathworks.com/display/CORECGIR/Include-What-You-Use+on+Modules+Downstream+of+CGIR

class methods using function pointer: "this" pointer is not available, almost like a not member
gcc -Wl,--wrap=functionName

foundation logging :http://inside-files.mathworks.com/dev/ltc/doxygen/Bfl/html/user_view/foundation/log/src/log/ 

cgir flags :src/cgir_cgel/parse/CglFlagListener.cpp 
prototype: imported+externalFcn+variadic
function: external, variadic not allowd. imported is allowed
src/cg_ir/export/include/cg_ir/base/Obj.hpp

 com.mathworks.services.Prefs.setBooleanPref('GeneralShowMLRootOnTitle',true)
rootDir = matlabroot;
jDesktop = com.mathworks.mde.desk.MLDesktop.getInstance;
jDesktop.getMainFrame.setTitle(rootDir);


sbrdesktop ah-stateflow -g 700x700
sbnativeproj toolbox/stateflow/sf_cdr
sbnativeproj -launch

ss:
1. ssEnableSystemWithTid, ssCallSystem(ssCallSystemWithTid)
sf functions:
  sfc_sf:
    1.sf_call_output_fcn_call
    2. output event related
      a.sf_call_output_fcn_e(d)nable
      b.sf_call_output_fcn_call
  sf_mex:
    1. sf_mex_call
  StateflowFacade
    1. supportsLegacyBehaviorForPersistentVarInContinuousTime  



QEgatekeeper workflow simplication
(1) snap-only Bstateflow job: 
  Process change: 
    a. disallow auto snap
    b. custom auto snap: 
       lock cluster, auto-snap, unlock cluster
    c. disallow dev-auto job creation
    d. custom-dev-auto job creation to create seperate job for snap. e.g.
       Assume,
         job0=current running job, and
         Pending changes: c1_nonsnap, c2_nonsnap, c3_snap, c4_snap, c5_snap, c6_nonsnap, c7_nonsnap
       then,
         custom-dev-auto would do following,
          (1) when job0 finishes, create job1:c1_nonsnap, c2_nonsnap2
          (2) when job1 finishes, create job2:c3_snap,c4_snap,c5_snap
          (3) when job2 finishes, create job3:c6_nonsnap,c7_nonsnap
  Performance Assessment: 
    a. Some slow-down in "LKG per days" metric
    b. Given that we now create a LKG in ~4 hours and most of the day Bstateflow is idle, 
       I see this slow-down almost non-noticable to Bstateflow users.
(2) snap-only Bstateflow_stage qualification job:
  Process chage: 
    a. update job-aggregration optimization to have separate job for snap-only Bstateflow job
  Perfomance Assessment: 
    a. Slow-down due to additional number of qualify-in-stage jobs
    b. Assume,
        N_current is number of qualify-in-stage jobs per month (currently)
        S is number of snaps per month,
      Then,
        N_new <= N_current + S + (upto)S
      Where
        "N_old+S" part is fixed 
        "(upto)S" is worst-case upper-limit 
          a. Caused by opting out of job-aggregration optimization when there is snap-only job
          b. worst-case example 
             Assume that Bstateflow has following LKGs available when stage qualify job finishes, 
             Bstateflow LKG available for qualify: LKG1, LKG2, LKG3(snap-only), LKG4, LKG5
             Then,
             Current: qualifyjob1: LKG1, LKG2, LKG3(snap-only), LKG4, LKG5
             New    : qualifyjob1: LKG1, LKG2, 
                      qualifyjob2:LKG3(snap-only),
                      qualifyjob3: LKG4, LKG5
             N_old=1, S=1, N_new=3==(1+1+1)
                                      
(3) QE gatekeeper
  Process change:
    a. qualify job for snap-only: attach to existing BP or create new BP
    b. qualify job for non-snap: run auto-script which tells you whether it is 
     (1)     able to point to a change: create a new BP and assign to an owner
     (2) not able to point to a change: either attach to an existing BP or create a new BP(owner=unassigned)
 Performance Assessment:
   a. QE time spend on gatekeeping reduced to minimal. 
   b. I cannot quantify it but I can safely assume that most mechanical work like below is eliminated
      e.g. reading test logs, searching failure syndromes, browsing changes in job and see if it is related

I think slowdown in (2) is minimal comparing to QEgatekeeper's time saved;


1. codingdebugformachine CdrLowerMessagesForSim.cpp  CdrDebuggerTransform.cpp 
2. guard data browse instrumentation by isInstrumentingDataBrose instead of isInstrumentingRutimeErrors
3. better names or refactor isSimOn, isCodingSimulation
4. isInstrumentingMarshallOut
5. DebuggerInstrumentationLevel
test failures for 1. message iscodingdebugformachine:
test/toolbox/stateflow/string_support/tBusMessageWithStringTypeField_strlength_MAL.m
test/toolbox/stateflow/string_support/tBusMessageWithStringTypeField_strlength_MAL2STT.m
test/toolbox/stateflow/string_support/tMsgStringsInBus_MultipleKeywords_MAL.m
test/toolbox/stateflow/string_support/tMsgStringsInBus_MultipleKeywords_MAL2STT.m
test/toolbox/stateflow/string_support/tStringInMsgPayload_MultipleKeywords_MAL.m
test/toolbox/stateflow/thiskeyword/not_supported/t_simulation_modes.m


gujrati: 3.48 7.37 10.20 14.13 

crontab example
USER=ppatil
ZFS_MASTER_SB="Bstateflow"
SILENT=1
LOCATION=AH
PATH=/home/savadhan/bin:/mathworks/hub/share/sbtools/bin/glnxa64:/sandbox/savadhan/sbtools:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/local/netbin:/hub/bat/share/bin:/usr/bin:/hub/share/bin:/hub/share/sbtools

30 14 * * * cd /sandbox/ppatil;/sandbox/savadhan/sbtools/evil-sync-latest-pass-sb

lp541
tu = index.parse(fileName,args,options=clang.cindex.TranslationUnit.PARSE_DETAILED_PROCESSING_RECORD);
#tu = index.parse(fileName,args,options=clang.cindex.TranslationUnit.PARSE_DETAILED_PROCESSING_RECORD);
#tu = index.parse(fileName,args='-xc++ --std=c++0x'.split());
#getIfStmtInfo(tu.cursor,tu.cursor,"")

cd $s/mwcov_q2;
sbroot=$(sbroot);
mlroot=$(sbroot)/matlab
cd $mlroot
mkdir derived/glnxa64/src/include/mwcov;
chmod 777 -R mwcov;
cd $mlroot/mwcov;
mkdir logs;
chmod 777 -R logs;
g++ -std=c++17 -O0 -g -fpic -c mwcov.cpp -o mwcov.o;
g++ -shared -o libmwcov.so mwcov.o;
cd $mlroot
mv mwcov/libmwcov.so bin/glnxa64;
cp mwcov/mwcov.hpp derived/glnxa64/src/include/mwcov;
cd $mlroot/mwcov;
mw matlab -nodesktop -nosplash -nojvm -r "rehash toolboxcache;mex mwcovmex.cpp -L"$sbroot"/bin/glnxa64 -lmwcov;movefile('mwcovmex.mexa64','../test/tools/sf4ml');rehash toolboxcache;exit"
cd $mlroot
cd $mlroot/mwcov;
mw matlab -nodesktop -nosplash -nojvm -r "tic;instrumentCoverageForCppModules({\"toolbox/stateflow/sf_cdr\",\"toolbox/stateflow/sf_xform\",\"toolbox/stateflow/sf_ast\",\"toolbox/stateflow/sf_cal\",\"toolbox/stateflow/sf_mal\",\"toolbox/stateflow/sf_customcode\",\"toolbox/stateflow/src/sf_variants\",\"toolbox/stateflow/src/sf_runtime\",\"toolbox/stateflow/src/sf_sfun\",\"toolbox/stateflow/src/stateflow\"},{\"/cdr_auto\",\"fsm/mi\",\"fsm/Lint\",\"fsm/auto\",\"/gpobj\",\"concrete\","y_tab"});toc;"





lp542
function profileParfor(nestedParFor)
    tasks = {100,3,3,3,3,3};
    taskTime = 1;
    tic;
    if nestedParFor
        parfor idx = 1:length(tasks)
            task_1(idx, tasks{idx}, taskTime);
        end
    else
        for idx = 1:length(tasks)
            task_1(idx, tasks{idx}, taskTime);
        end
    end
    toc;
end
function task_1(topId, tasks, taskTime)
    parfor idx = 1:tasks
        task_2(topId, idx, taskTime);
    end
end
function task_2(topIdx, bottomIdx, taskTime)
    t = getCurrentTask();
    if ~isempty(t)
        info = sprintf('Worker: %2.0f\tTask: %2.0f:%2.0f', t.ID,topIdx, bottomIdx);
        disp(info);
    end
    pause(taskTime);
end



function VundleInit()
    set rtp+=~/.vim/bundle/Vundle.vim
    call vundle#begin()
    "Plugin 'VundleVim/Vundle.vim'
    "Plugin 'gcmt/taboo.vim'
    "Plugin 'vim-scripts/Conque-GDB'
    Plugin 'ycm-core/YouCompleteMe'
    "Plugin 'easymotion/vim-easymotion'
    Plugin 'machakann/vim-Verdin'
    call vundle#end()
endfunction
:call VundleInit()
set completeopt-=preview
let g:ycm_auto_hover='' "CursorHold
let g:Verdin#autocomplete = 1

todo: crontab -e 
USER=ppatil
ZFS_MASTER_SB="Bstateflow"
SILENT=1
LOCATION=AH
PATH=/home/savadhan/bin:/mathworks/hub/share/sbtools/bin/glnxa64:/sandbox/savadhan/sbtools:/usr/local/bin:/usr/bin:/bin:/sbin:/usr/local/netbin:/hub/bat/share/bin:/usr/bin:/hub/share/bin:/hub/share/sbtools:/mathworks/devel/sandbox/ppatil/misc/gitRepo1/stateflow-tools/scripts/
#35 */1 * * * python3 /mathworks/devel/sandbox/ppatil/misc/gitRepo1/stateflow-tools/scripts/runOnLeasedMachine.py  --command "python3 /mathworks/devel/sandbox/ppatil/misc/gitRepo1/stateflow-tools/cov/instrumentCoverage.py  --modulepaths toolbox/stateflow/sf_ast toolbox/stateflow/sf_cal toolbox/stateflow/sf_mal toolbox/stateflow/sf_customcode toolbox/stateflow/sf_cdr toolbox/stateflow/sf_xform toolbox/stateflow/src/sf_runtime toolbox/stateflow/src/sf_variants toolbox/stateflow/src/stateflow --skipfiles cdr_auto testing unittest pkgtest fsm/Lint fsm/mi y_tab makerules gpob fsm/auto --sbcluster Bstateflow --testsuites sfcore --mappingname sfcorecov" --machineNumber 2 > /dev/null 2>&1
#18 */1 * * * python3 /mathworks/devel/sandbox/ppatil/misc/gitRepo1/stateflow-tools/scripts/runOnLeasedMachine.py --command "bash /mathworks/devel/sandbox/ppatil/misc/sfcoveragelogs/sfcovcron.bash" --machineNumber 4 > /dev/null 2>&1 


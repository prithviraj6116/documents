TODO:
System composure license: https://web.yammer.com/main/org/mathworks.com/threads/eyJfdHlwZSI6IlRocmVhZCIsImlkIjoiMTcyMTE3MDAzNjk1NzE4NCJ9
SLDV:
sldvoptions
sldvcomat
autoverifier
what is relevance of "states when enabling" in function-call-subsystem(triggered/periodic)

p4 clients -a -u ppatil -U
p4 client -df -Ds ppatil.ulcm122ad
killall mate-panel : to reboot mate desktop without logout. it kills mate desktop process and debian automatically starts new mate desktop process
killall == pkill -9 -f

non-jit modelName_sfun.c :
modelName_initializer
modelName_terminator
sf_modelName_method_dispatcher
sf_modelName_process_check_sum_call
sf_modelName_get_eml_resolved_functions_info
sf_modelName_third_party_uses_info
sf_modelName_jit_fallback_info
sf_modelName_get_post_codegen_info
sf_modelName_updateBuildInfo_args_info
sf_modelName_register_exported_symbols
static SfOptimizationInfoFlags sOptimizationInfoFlags;
load_modelName_optimization_info
unload_modelName_optimization_info

non-jit c3_modelName.c
c3_modelName_method_dispatcher
   mdlSetupWorkWidths_c3_modelName
   mdlSetupRuntimeResources_c3_modelName 
     init_dsm_address_info(chartInstance);
     init_simulink_io_address(chartInstance);
     mdl_setup_runtime_resources_c3_modelName
   mdlProcessParameters_c3_modelName
     initialize_params_c3_modelName
sf_opaque_initialize_c3_modelName
  initialize_params_c3_modelName
  initialize_c3_modelName
enable_c3_modelName
disable_c3_modelName
mdlRTW_c3_modelName
mdl_cleanup_runtime_resources_c3_modelName




BUGS /
16.  CdrActionSubsysChartManImpl::appendCodeInMdlSetupRuntimeResources, optimize when fActionsStates->empty()
1. sbmake after p4 reverting a file still compiles it
1. sldd enum export does not work
2. zerojitemissions is not respected by emlreport which is always created at slprj/_sfprj/EMLReport/
3. nonjit or jit simulation does not always generate single code for single specialization
4. sfgco on modelref charts does not work
5. enum of type u32/i64/u64 works in MATLAB not in SF/Simulink
6. imported enum where enums are same in c and m but values are not: value taken from cenum and hover over does not work.
7. isTemporaryMachineContext: is not required anymore
8. do we need GEN_FCN_GET_STATEFLOW_RTWCONTEXT? if so, why?
9. ctxInfo->isCodingSimCG: might not be used 
10. targetman.m#184 is redudant   infomatman('save','binary',machineId,mainMachineId,targetId,binaryDateNum);
11. dsm with diagnostics enabled written in for loop in EML chart
12. PI options in simulink function in SF chart are unnecessary(1. sample time type (both works same i.e. as triggered) 2.subsystem reference(errors out) 3. show subsystem reinitialize port 4. show port labels 5. 
13. copying Simulink-Function-In-SF to Simulink-Canvass, marks function-call-subsystem as non-atomic
14. usesGlobalEventVar is unused
15. codingNoInitializer might never be true
16. CAL->localdata->modelexplorer->descriptiontab->savetoworkspace. when enabled, such CAL chart cannot be in for-each.
    we might be able to remove this restriction.
17. vim status bar function name does not work with namespace A::B format 


15. CAL->localdata->modelexplorer->descriptiontab->savetoworkspace: is still visible and works. for MAL it is hidden
    when enabled, such CAL chart does not work in for-each subsystem

Mathworks Apps
Mathworks Products
1: Coders: MATLAB, Simlink, Embedded, HDL, GPU, PLC, Filter Design HDL, 
2: Compiler: MATLAB, Simulink, MATLAB SDK, 
3. VnV: Test, Design Verifier, Design Optimizer, Coverage, 
        HDL Verifier, Check, Code Inspector, Requirement Toolbox,
        Polyspace Code Prover, Polyspace Bug Finder, Polyspace Ada,
        IEC Certification, DO Qualification Kit, 
4. MATLAB: Drive, Grader, In the Cloud, Mobile, Parallel Server, 
           Report Generator, Web App Server
5. Simulink: Control Design,  RealTime, Desktop RealTime, Report Generator,
             Stateflow, System Composure, 
6. Toolbox/Blockset/Testbench: 
   6.1 5G, LTE, Wireless HDL, Antenna, Bluetooth, Communication,
       Industrial Communication, RADAR, LIDAR, RF Toolbox, 
       RF Blockset, RF PCB, Satellite Communication, Signal Processing,
       DSP System, DSP HDL, WLAN, Wavelet, Wireless Testbench, UAV,
       Signal Integrity, Mixed Signal, 
   6.2 Image acq, Image processing, Vision HDL, Computer Vision, 
       Audio,
   6.3 SimBiology, Sensor Fusion and Tracking, ROS, Robust Control, 
       RoadRunner, RoadRunner Scenario, Risk Management, Reinforcement 
       Learning, Predictive Maintenance, Powertrain, Parallel Computing,
       Phased Array System, Partial Differential Equations, Optimization,
       Navigation, Motor Control, Model Predictive Control, Model-Based 
       Calibration, Mapping, Instrument Control, Global Optimization, Fuzzy
       Logic, Financial, Financial Instruments, Econometric, Deep Learning, 
       Deep Learning HDL, DDS, Datafeed, Database, Data Acq, Curve Fitting,
       Control System, BioInformatics, AUTOSAR, Automated Driving, Aerospace
       Toobox, Aerospace Blockset, Installation and Licensing, SerDes, 
       SimEvents, SoC, Spreadsheet Link, Statistic and Machine Learning, 
       Symbolic Math, Text Analysis, ThingSpeaks, Vehicle Dynamics, Robotic 
       system, Robotic control, Fixed-point,
7. Simscape: Driveline, Electric, Fluids, Multibody, Multibody Link



REVIEW BOARD
link time optimizations, initialization, initializer list, uniform initialization, 
default/copy/move construction, copy/move assignment, explicit/defaulted/deleted 
constructor,bitset, boost dynamic bitset, vector bool , vector char, bitset enum
label#1,make_array:if want to add/delete elment;we dont need to count,make_*: no
need to enumerate types;e.g. make_tuple,make_pair;zeroemission; relational oper-
tors on differnet types(-1>1), src/stateflow allowed warnings, 
literal/aggregate/standardlayout/trivial/pod, array/vector/valarray,bitset/vectorbool


C++20/RB/modernize:source_location

C/C++
non-exported symbols: nm libname.so | grep ' t '
exported symbols:     nm libname.so | grep ' T '
tuple implemention: multiple inheritance via variadic template
sizeof...
print type name:
boost::core::demangle(typeid(b1).name())
boost::typeindex::type_id_runtime(b1).pretty_name()
print makefile information: mw gmake -p -f bdbgenerator.mk  | grep -i matlabjavap
c runtime library
initializer_list is a language feature that requires #include<initializer_list>
dynamic cast target type must be pointer or reference;
signal handleer: sigint,sigterm,sigsegv,sigabrt,sigill,sigfpe.
no signal handler: sigstop
abort/assert calls sigabrt
Ctrl-c calls sigstop
Ctrl-z calls sigint
constructor: converting(normal/non-explicit) vs explicit 
user-defind conversion functions: converting(normal) or explicit
narrowing conversion warnings only for direct-list-initialiation or copy-list-initialiation
typeid keyword requires #include<typeinfo> 
decltype<declval<T>(constructorargs).nonstaticfunction(functionargs)> to get a return type of non-static function's return value without class object
declval constructorargs and functionargs are not evaluated.
declval can only be used in unevaluated context;
unevaluted vs evaluated context:
tie, make_tuple and forward_as_tuple
types: fundamental(arithmetic,void, nullptr_t),derived(function,array,pointer,member_pointer(?),reference), user-defined(class,enum,union, typedef(?)),
       arithmetic(integral,floating),integral(bool,char,int),floating(float,double),member_pointer(member_object,member_function),reference(lvalue_reference,rvalue_reference)
       scalar(arithmetic,nullptr_t,pointer,member_pointer,enum),compound(derived,user-defined)
       object(scalar,array,union,class) non_object(void,function,reference)
standard layout vs aggregate vs trivial vs literal vs POD: Code_101   https://stackoverflow.com/questions/6496545/trivial-vs-standard-layout-vs-pod
SFINAE: std::void_t vs enable_if 
std::any vs std::variant: https://stackoverflow.com/questions/56303939/c-stdvariant-vs-stdany  
     any==void* variant==union
c enum forward declaration is incomplete, c++ enum forward declaration with associated type is complete declaration.

MWTOOLS

emacs: sbe, vertical split:c-x-3, gdb:c-x-m-d, breakpoint: c-x-a-b
valgrind:
   cd /mathworks/devel/sandbox/jaadm/Bmain_valgrind_debug/latest_valgrind_pass; mw -using Bmain sbs clone create -snapshot clone_me -n q1_valgrind
   sbsync-and-make -src-root Bmain -run-sbvalsetup -build-type debug -ignore-failed-modules
   sb -memmgr "debug,nonewhandler" -nodesktop -nosplash -nojvm
   MATLAB_MEM_MGR="debug,noleakcheck" "/local-ssd/ppatil/dsm1/matlab/bin/glnxa64/MATLAB" -nosplash -softwareopengl -nodesktop
   http://inside.mathworks.com/wiki/Category:Native_Memory_Diagnostics
   >>feature('memmgr')
   sbmake --eval=BASE_REQS=valgrind DEBUG=1
   IVF:invalid free, IVR: invalid read, IVW: invalid write, MMF: mismatched free, UNC: un-initialized condition, UNV: uninitialized value
find vs fd: fd ignores hidden files
Lint Commands:
edittime.setDisplayIssues('off')
sf('GetLintIssues', c.Id)
sf('Feature', 'SFLint', 0)

get optimiztion level from dll/so file
readelf --debug-dump=info libmwstateflow.so.dbg   | grep -i "\-O2"

sbruntests -cfg sfcore -cfg slstring -cfg reqtable
sbmake/sbcc DEBUG   Mode == DEBUG=1 ASSERTS=1 => -g -O0 
sbmake/sbcc MIXED   Mode == DEBUG=  ASSERTS=1 => -g -O2
sbmake/sbcc RELEASE Mode == DEBUG=  ASSERTS=0 => -g -O2 -DNDEBUG
in non-jit genereted code-directory, open .mku file and add -v to CC as "CC = /local-ssd/ppatil/fexp2/matlab/bin/mex -R2018a -v" 
sim(modelName,'SimulationMode','normal'/'accel'/'rapid'/'software');
rtwbuild(modelName);slbuild(modelName,noarg/'StandaloneCoderTarget'/'ModelReferenceSimTarget');Code_102
c = sfgco; sf('PrettyPrintAst',c.id)
md=Simulink.ModelAdvisor.getModelAdvisor('ppp1');w1=md.runCheck('mathworks.hism.hisf_0015');md.displayReport;

Linux/Windows:
du -sh *
df -h | grep ppatil
watch: to repeat commands every x seconds
desktop envorinment: sudo update-alternatives --set x-session-manager /usr/bin/mate-session
                     ls /usr/share/xsessions
IDEAS 
11. debug dll copy from some cronjob sandbox to sbsyncmaster/sbclone
10. loadSymbolsForBreakpoints() in gdb to be used by emcas, vscode
9. warn on putting breakpoint on dll build without -O0
1. gdb debug symbols: does it load every time I run MATLAB in same session. can it be made faster
2. gdbserver, gdb like fsb
3. hybrid stack: MATLAB, c++, JavaScipt,
4. matlab based GUI like fsb
5. issues with debian 11 gdb: continue while program is running
6. call stack graph traversing outside debugging
7. gdb generic pval to work with enum,enum class,macros,pointers
8. sbruntests -cfg sfcore_not_in_bstateflow.txt
8. vim gdb fixes: (1) stack frames "see more frames" link issue 
                  (2) Downstack (D) when in last frame file but on different line 
                  (3) gdb window refresh issue 
                  (4) remove tty and prompt
                  (5) run with local gdb (/usr/bin/gdb)
                  (6) jit crash
                  (7) fix logging
                  (8)   ../../src/gdb/value.c:3968: internal-error: Unexpected lazy value type
                  (9) merge sbv-tools to sbv-runtime
                  (10)common viminfo
                  (11)common gdbinit
                  (12) attach_sf layer

vs code:
/mathworks/inside/labs/dev/matlab_coder_tools/vscodeproj/vscodeproj/vsproj.py --proj stateflow_core,sf_analysis,sf_cdr,sf_dd,sf_il,sf_ir,sf_req,sf_req_analysis,sf_services,sf_shared,sf_xform,cgir_core,cgir_algorithm,eml_inference --clangd
sbm code vsprojWorkspace.code-workspace


MATLAB
ML enumeration properties v=mycolors.Red; v.prop1; where prop1 is the property of mycolors and Red is enumeration of mycolor
classdef mycolors  Or classdef mycolors < uint8 (now enum will implicitly convert to uint8)
enumeration
red,blue,yellow
end
end

Simulink/Stateflow

target tlc: https://www.mathworks.com/help/rtw/ug/compare-system-target-file-support.html
code replacement library custom crl using configuration->codegeneration->interface->add-custom CRL, 
create tables (one for each replacement) and save tables in registration file and then
>>RTW.TargetRegistry.getInstance('reset');

TargetStyle={Auto,StandaloneTarget,SimulationTarget}
SimulationMode={normal,accelerator,rapid-acceleator,software-in-loop, hardware-in-loop,external}
SimulationStatus={stopped, updating, initializing, running, paused}
RapidAcceleratorSimStatus={starting, terminating, active, inactive,dormant}

hModelCodegenMgr = coder.internal.ModelCodegenMgr.getInstance(modelH);
hModelCodegenMgr.CodeFormatForStateflow={Embedded-C, RealTime} CFS
non-jit sf: modelName_sfun.mex
                                                                                          ModelReferenceTargetType=normal/accel/sil/pil
sim     (modelName, 'SimulationMode', 'normal')                    :                    ModelReferenceTargetType=SIM*/SIM/RTW/RTW
                                                                     hModelCodegenMgr= []
                                                                     TargetStyle=SimulationTarget rtwenvironmentmode(isSim)=1
sim     (modelName, 'SimulationMode', 'accel')                     : jit or Accelerator_S-Function _acc.mex
                                                                                        ModelReferenceTargetType=SIM /SIM/RTW/RTW
                                                                     hModelCodegenMgr= []
                                                                     TargetStyle=SimulationTarget 
                                                                     rtwenvironmentmode(isSim)=1
sim     (modelName, 'SimulationMode', 'rapid')                     : ExtMode=1,          ModelReferenceTargetType=SIM /SIM/err/err 
                                                                     hModelCodegenMgr.CodeFormatForStateflow=RealTime 
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=1
sim     (modelName, 'SimulationMode', 'software-in-loop')          : _sbs.mex,            ModelReferenceTargetType=RTW /RTW/RTW/err 
                                                                     hModelCodegenMgr.CodeFormatForStateflow=Embedded-C 
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
sim     (modelName, 'SimulationMode', 'processor-in-loop')         :                      ModelReferenceTargetType=RTW /RTW/err/RTW 

slbuild (modelName,                   'StandaloneCoderTarget')     : as mainModel grt/ert, ModelReferenceTargetType=NONE 
                                                                     hModelCodegenMgr.CodeFormatForStateflow=RealTime
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
slbuild (modelName,                   'ModelReferenceSimTarget')   : as refModel  acceleator, _msf.mex, ModelReferenceTargetType=SIM
                                                                     hModelCodegenMgr.CodeFormatForStateflow=Embedded-C 
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
slbuild (modelName,                   'ModelReferenceCoderTarget') : as refModel, sil,        _ssf.mex, ModelReferenceTargetType=RTW
                                                                     hModelCodegenMgr.CodeFormatForStateflow=RealTime
                                                                     TargetStyle=StandaloneTarget 
                                                                     rtwenvironmentmode(isSim)=0
SIM*: ModelReferenceSimTarget=SIM but SimulationModeOfMainModel=Normal: is it same as set_param(refModel,'SimulationCommand','update')?
manually setting SimuationMode=external via command line.: ctrl-d(update) mode=external, ctrl-t(update) mode=normal
slrealtime with manually setting SimuationMode=external via command line.: ctrl-d(update) mode=external, ctrl-t(update) mode=normal
sldv:  RTWExternMdlXlate=1
autosar
plc: RTWExternMdlXlate=2
modelreference: https://www.mathworks.com/help/ecoder/ug/simulation-mode-override-behavior-in-model-reference-hierarchy.html

BLAS (Basic Linear Algebra Subprograms)
LAPACK (Linear Algebra Package)
FFT (Fast Fourier Transform Library)
tlc files: https://www.mathworks.com/help/rtw/ug/compare-system-target-file-support.html
1. DO-178C qualification tools, JMAAB,
1. datascope(not-specified,auto,imported,exported)/headerfile(not-specified/specified): type(Simulink.IntEnumType, uint8, uint16, uint32,not-specified)
   
   ns/ns,a/ns,i/ns,e/ns:                                                                siet:defines enum    u81632: defines u81632 macros  ns: invalid m enum
   ns/s,a/s,i/s        :                                                                siet:imports         u81632: imports header         ns: invalid m enum
   e/s                 :                                                                siet:defines enum    u81632: defines u81632 macros  ns: invalid m enum
Simulink.data.getEnumTypeInfo
postcodegen:  https://reviewboard.mathworks.com/r/733581/diff/1/ 
simulink model status bar: modeling->environment
Simulink-Function-In-SF only allows inherited sample time (-1) or constant time(Inf)
SLState-In-SF sample time must match that of parent chart.
>>help slcg %for pretty printing rtw or simulink coder


stack viewer:
1. matlab global, persistent vars not showing up
2. modify value in sv and have it updated in gdb
3. send whole stack to sv when called sv(). filter it in sv

C:
unistd.h: posix apis.
mx mex:
mxGetData ->void*
mxGetPr ->double*
mxGetInt8s,mxGetUint16s->only available in interleaved
a:
linux: fg, bg
sbvim
vim cmd:  :help sbvim
:set ignorecase 
:set noignorecase  (unset)
:set ignorecase& (set to default)
:echo &ignorecase

how to get vim help
vim:  ": help command",":map key" 
:help
//settings
:help ts?
:help sw?  
:set sw 3
:set sw? 
//variables
:let var1=123
:echo var1
:let g:var2=1
:let s:var2=4
:help variables
:filter buf* let g:   //only shows variables with buf*
:h :filter
:h : files
:h :registers

:set laststaus or :echo &laststatus
:highlight statusline
:highlight
:highlight cursor guifg=red guibg=yellow
:help notationA
tab
shiftwidth: whitespaces equal to one indentation
tabstop: whitespace equal to one tab

:set laststatus=2
:highlight statusline gui=bold,italic guifg=red guibg=yellow

vim equivalent of non-printing keys
<NL>:<C-j>:newline
<CR>:<C-m>:carriage return
<BS>:<C-h>:backspace
<ESC>:<C-[>:escape
<TAB>:<C-i>:tab
<FF>:<C-l>:formfeed

scroll up/down:
1 line:CTRL-e,CTRL-y
1/2 screen: CTRL-d,CTRL-u
1 screen: CTRL-f,CTRL-b

:h press ctr-v twice for :h ^v
:h press ctrl-v and ctrl-b for :h ^b
:h reg  and press ctrl-d  for auto completion

gvim -D  to debug
/%Vfoo   searches foo in visual/select mode
folding: zf zo zc
tab: tabe tabc gt
window: C-w-s C-w-v C-w-w C-w-c
scroll:C-e,y,f,b,d,u zt,zb,zz
mapleader \ <Leader>
gvim -u DEFAULTS/NONE/NORC
gvim --noplugin
:filter searchtext browse oldfiles
:list
:jumps
:filter
:marks
:oldfiles
:files
:command
:let
:echo expand("%p")
:h load-plugins
:map b6 :bp<bar>sp<bar>bn<bar>bd<CR>
 bp|sp|bn|bd : close current buffer(do not close window); and open next buffer in same window
 packadd sources twice, packadd! sources once
command mode: ctrl-v to enter <C->,  
              ctrl-d to auto-complete
              q:  command list
              q/  search list


//mathworks/hub/share/sbtools/external-apps/exuberant-ctags/exuberant-ctags-5.9/exuberant-ctags/ctags -R *


>>c=settings //give matlab and simulink preferences/settings 
git config --global credential.helper store
execution domains (export function, discrete, continuous/hybrid)
Stateflow limitations on continuous, SL functions, SL states,

all config set options: matlab/toolbox/shared/configset/src/configset_base/checksum/type/

set_param(0, 'GlobalUseClassicAccelMode', 'on');
%     set_param(0, 'AcceleratorUseTrueIdentifier','on');
%     set_param(0, 'GlobalUseClassicAccelMode', 'on');
%     slfeature('FMUBlockRaccelReval',1);
%     slfeature('UseSimulationServiceForRaccel',0);
%     slfeature('MLSysBlockRaccelReval',1);
 
sfc('coder_options')

  %v=sf('find',sf('FunctionsIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','mlfcn1')
    %v=sf('find',sf('SubstatesIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','stateA')
    %v=sf('get',sf('find',sf('SubstatesIn',sf('get',sf('GetSFBlockData',gcbh),'instance.chart')),'state.name','A'),'state.simulink.blockHandle')
    %sf('get',sf('GetSFBlockData',get_param(get_param(gcbh,'ReferenceBlock'),'handle')),'instance.chart')
    %getappdata(get_param(sf('get',sf('GetSFBlockData',get_param(get_param(gcbh,'ReferenceBlock'),'handle')),'instance.sfunctionBlock'),
    'Object'),'SF_InstanceSpecChecksum')
sbsmartbuild -opened; mw runlikebat does not work


c style comments: //
-Wimplicit-int
int main()


C89  keywords: 32
built-in types(6)         : void, char, int, float, double, enum
aggreate types(2)         : struct, union   
type modifiers(4)         : signed, unsigned, short, long
storage specifier(4)      : auto, register, static, extern
cv qualifier(2)           : const, volatile 
conditional statements(5) : if, else, switch, case, default
loops(3)                  : for, do, while
jump statements(4)        : break, continue, goto, return
misc(2)                   : typedef, sizeof
C99 keywords: 5
_Bool, _Complex,_Imaginary, restrict, inline

C Scopes: file scope, block scope, function parameter scope, function scope
Non-structured: FORTRAN, BASIC, COBOL
Structured    : Ada, Pascal, C   : goto prohibited or not supported
ANSI: American National Standards Instrutute
ISO: International Standards Organization
aba
B Ken Thomspson -> C Dennis Ritchie

C Not strongly typed: no run time checking for arguments matching parameter types, implicit type conversion







bhagavad gita: 

tukaram:  https://www.youtube.com/playlist?list=PLPiSaErUa7PcGPe9xQ7pOWEyM6mlfKdbi 
dasbodh: https://www.youtube.com/playlist?list=PLc1r4Cpf66cCRmkHK7YsE7ZZK2Q3xjE0C

gurucharitra: https://www.youtube.com/playlist?list=PL_6xj9qo5MfasqnCUaWDpqbadG60I4Xrw 
ramdaskatha: https://www.youtube.com/playlist?list=PL_6xj9qo5Mfb-Wk6zaB9ITrkjsNJnumcY
navanathsar:  https://www.youtube.com/playlist?list=PL_6xj9qo5MfaF1Yk8PVnOLKEIwGco8B11  
dhyaneshwari: https://www.youtube.com/playlist?list=PL_6xj9qo5MfZ6_sAidq6Svg5-MyjjfjXV  
manache shlok:  https://www.youtube.com/playlist?list=PLRlSTUDyrQYi2-WN7hWatTwlst6BW3Dgp
                https://www.youtube.com/playlist?list=PLAUy5gvjzw_941zCER5wQ1UWczqqqCsoF


youtube audio playlist downloader: yt-dlp --extract-audio --playlist-start 1 --rm-cache-dir --audio-format mp3 -o 
"das-%(playlist_index)s.%(ext)s" <youtube-playlist-link>

sbindent: https://web.microsoftstream.com/video/f99a8bd4-1530-4146-a6f1-afbe76db59ba
dangling if 

disable bii
sbmake -distcc DEBUG=1 CTB=stateflow_core BH_ALLOW_ISOLATED_BUILDS=
#bii sandbox
https://inside.mathworks.com/wiki/Component_BII_Sandboxes
mw -using Bstateflow printenv | grep COMPONENTS_TO_BUILD
mkdir biisbdir;cd biisbdir;
echo "MW_CLUSTER=Bstateflow" > mw_anchor;echo "P4CLIENT=ppatil.mybii1" > .perforce; echo "P4PORT=p4anycast.mathworks.com:1666" >> .perforce; echo "ENV Bstateflow" > battree
mw -using Bstateflow gmake -f //mathworks/hub/share/apps/iat/tools/sc/R2020a/4605547/glnxa64/thin_snap.mk COMPONENTS_TO_BUILD="stateflow_resources" BUY_ARCHLIST="glnxa64" P4_CLIENT="ppatil.mybii1" create_sandbox
cd matlab;
sbmake CTB=stateflow_resources;


runtests with parameters:
runtests("t_sl_trackerGNNRetrodiction[ScenarioParameters=EKF]/checkRapidAcceleratorAgainstNormal")
edg parser components:
CTB="shared_cxxfe_parser_mi shared_cxxfe_parser_mi shared_cxxfe_ast shared_cxxfe_instrum shared_cxxfe_instrum shared_cxxfe_instrum shared_cxxfe_instrum shared_cxxfe_ast_annotations shared_cxxfe_instrum_mi shared_cxxfe_instrum_mi shared_cxxfe_parser shared_cxxfe_il2ast shared_cxxfe_il2ast shared_cxxfe_il2ast shared_cxxfe_ast2cgir shared_cxxfe_ast2cgir shared_cxxfe_ast2cgir shared_cxxfe_il2cgir shared_cxxfe_il2cgir shared_cxxfe_il2cgir shared_cxxfe_cgir"



MLFcn   :  stops every, hoverStoped(StoppedI1ShowI1OnI1-I1OnI2-I1OnCh,StoppedI2ShowI2OnI1-I2OnI2-I2OnCh), openEditorInstanceButPathAlwaysI1, BP I1I2Ch SyncYes
MLFBlock:  stops every, hoverStoped(StoppedI1ShowI1OnI1-I1OnI2-I1OnCh,StoppedI2ShowI2OnI1-I2OnI2-I2OnCh), openEditorInstanceButPathAlwaysI1, hoverPaused(I1No,I2No,CNo), BP I1I2Ch SyncYes,
TTFcn   :  stops every, hoverStopped(StoppedI1ShowI1OnCh, StoppedI2ShowI2OnCh), openEditorOpensChart, BP I1I2Ch SyncNo,
TTBlock :  stops every, hoverStoped(StoppedI1ShowI1OnI1-I1OnI2-I1OnCh,StoppedI2ShowI2OnI1-I2OnI2-I2OnCh), openEditorOpensChart, hoverPaused(I1No,I2No,CI1) , BP I1I2Ch SyncNo, 


simulink  configuration parameters->data import/export: tout:always array, logsout(signal logging),dsmout: always dataset
                                    xout, yout, xFinal: can be array/struct/dataset
                                                        array: same type, built-in
                                                        struct: built-in
                                                        dataset: any
                                                        
SDI:
1. logsout and dsmout always go to SDI: logsout(signal logging) goes to signal/Statelfow, dsmout goes to state
2. xout, yout: go to SDI if dataset. if struct/array, it goes to SDI if "RecordLoggedWorkspacedataInSDI"==true
3. types: 
   1. Outport(yout), 
   2. States(xout), 
   3. Stateflow(state with LogSelfActivity or ActiveStateData/NormalData with LogData), 
   4. Signal(logsout except those for Stateflow)
   5. DSM(dsmout)

 subchartM3I = StateflowDI.SFDomain.id2DiagramElement(objectId);
openState = StateflowDI.SubchartOpenRequest(subchartM3I, 'REUSE_TAB');
studioApp = SLM3I.SLDomain.getLastActiveStudioAppFor(get_param(obj.topModelName,'handle'));
activeEditor = studioApp.getActiveEditor;
w = StateflowDI.HierarchyServiceUtils.getHIDWithParent(objectId, activeEditor.getHierarchyId);
studioApp.processOpenRequest(openState,w);
function studioUtils(i)
    studioTag='Studio16'; 
    studio = DAS.Studio.getStudio(studioTag);
%     studioTag=studio.getAllStudios{i}.getStudioTag()
%     studio = DAS.Studio.getStudio(studioTag);
    activeEditor=studio.App.getActiveEditor;
    hId = activeEditor.getHierarchyId;
    currentTab = studio.getTabComponents{studio.getCurrentTab};
    studio.getTabTitle(studio.getCurrentTab);
    studio.getStudioTitle;
    disp(GLUE2.HierarchyService.getPaths(hId));

end

stack decoder online tool : http://www-sbtools-ah.mathworks.com/hub/share/sbtools/apps/stack_trace/index.cgi/stacktrace  
abca           



CTB="eml_inference sl_graphical_classes sl_engine_classes sl_main fixedpoint_core sl_compile shared_cgxe foundation/matrix cgir_vm_rt cgir_vm_core shared_simulink_lang_blocks sl_utility sl_compile sl_services sl_graphical_classes sl_loadsave shared_cgxe"



simulink functions in SF:
MAL: requires input S/T/C specified. hence during propagation STC of callsite are verified with SLport STC.
    Propagation:  SLFuncIn->SlFuncOut->CallSiteOut   SLFunctionIn==CallSiteIn SLFunctionOut==CallSiteOut
CAL: can let input S/T/C inherit but callsite does not propagate S/T/C to input parameter. so S/T/C set in SL at propagation. And during codegene callsite and SLport STC are verfied
     Propagation: SLFuncIn->SlFuncOut         CG: SLFunctionIn==CallSiteIn SLFunctionOut==CallSiteOut


For Simulink states in SF:
MAL/CAL: chart inputs and outputs can be used as ports. ports can be have S/T/C inherited or explicit but need to match S/T/C to corresponding chart input/output
MAL/CAL propagation for inputs: SLIn->mainIn->SLStateIn->SLStateOut->mainOut->SLOut->backPropagationA

Back propagaiton trick: 
Add SLState with outChart1->inChart1. 
For ML chart you also need to write "ex:outChart1=inChart1" on one of the states.

Atomic Subchart Mapping: 
input:slIn->mainIn->subchartIn->back
output:mainOut->subchartOut->mainOut->slOut->back
MAL: mapped main chart output and local data must have STC specified
CAL: mapped main chart output and local data must have STC specified. Only exception is if main output is mapped to subchart output then main output can be left inherited. In this case, back propagation might set types

MAL: O be written, L (if used in chart) be written
CAL: O/L are auto-written to 0s

MAL: L if IV exists, no error
MAL: L if no IV and no write in chart, we get error compile-time FULL_ASSIGNMENT_REQUIRED_ERROR
MAL: L if no IV but written in chart but used before write, then runtime error READ_BEFORE_WRITE_ERROR


MAL: IV is not vectorized as per Size
CAL: IV is i   vectorized as per Size



MAL: Size is     inferred from IV
CAL: Size is NOT inferred from IV

stateflow data:
Property Inspector
Name, Port, Size, Type, InitialValue, FirstIndex 
(LoggingSection) LogSignalData(UseSignalName, LimitDataPointToLast, Decimation), TestPoint,  
(AdvancedSection) VariableSize, ResolveToSignalObject, InitialValueFromWorkspace, LockFixedPointTools, 
           TUnable, 
           Unit, Complexity, Range


M Chart: FI 
C Chart: TU

Input Scope: IV, LS, RTSO, IVFW, TU
Local Scope: P, VS, TU, U
Parameter Scope: P, IV, LS, VS, RTSO, IVFW, U, R
DSM Scope: all but S
Constant Scope:  P, LS, VS, RTSO, IVFW, TU, U, C, R

Built-in numeric except boolean:
Boolean: C
FixedPoint: same as "Built-in numeric except boolean"
Enumeration: U, C, R
Bus: IV, IVFW, U, C, R
String: S, FI, VS, LFPT, U, C, R

P: I/O
U,R: I/L/O built-in
C: I/O/P non-boolean-built-in
VS: M charts and M based functions in C chart. non-string. for buses and for param it is ignored.
TU: P in M
IV,IVFW: L/O non-bus
LS: L/O
RTSO: L/O 


mouse cursor : sudo update-alternatives --config x-cursor-theme


sbmake -distcc DEBUG=1 CTB="shared_cgxe foundation/matrix cgir_vm_rt cgir_vm_core shared_simulink_lang_blocks sl_utility sl_compile sl_services sl_graphical_classes sl_loadsave sl_main"

simulink compiler:toolbox/coder/simulinkcoder_core/+coder/+internal/ModelBuilder.m  at line number 723 all the raccel files are generated and begins to build
custom code building:/local-ssd/ppatil/coverage4/matlab/toolbox/shared/cgxe/cgxe/private/createCustomCodeDLL.m : 72
stateflow code generation: private/code_chart_source_file.m and /local-ssd/ppatil/coverage4/matlab/toolbox/stateflow/stateflow/private/targetman.m : 429
jit:serializeJITEngine 
https://inside.mathworks.com/wiki/Generating_C%2B%2B_Source-To-Test_Mapping


mingw vs cygwin: cygwin is compatibility layer to port linux application source code to build on windows by replacing linux syscalls to windows OS calls. mingw is gnu port for windows. it may not have full compatibility with linux gnu.
c/c++: main function 2 signature int main() and int main(int argc, char* argv[], char* environmentVariables[]), third argument is implementation depenedent.

matlab online :  matlab.internal.webgui
get_param(0, 'AcceleratorUseTrueIdentifier')
get_param(gcbh,'OutputFunctionCall')
set_param(0,'globalAccelVerboseBuild','on')
simulink: algebric loop, variable sized signals, zero crossing, minor step updates,

qemu-system-x86_64 -kernel /boot/vmlinuz-4.19.0-14-amd64 -no-kvm -nographic -m 2049M -initrd /boot/initrd.img-4.19.0-14-amd64 -hda /local-ssd/ppatil/gitRepo1/buildroot/output/images/rootfs.ext4  -append "console=ttyS0 root=/dev/sda rw"


/local-ssd/ppatil/installs/llvm1build/bin/llc -filetype=obj cpp1.ll -o cpp1.o  -O3 --debug-pass=Executions
/local-ssd/ppatil/installs/llvm1build/bin/clang++   cpp1.cpp  -g -O3 -o cpp1_1.exe -mllvm --debug-pass=Executions


clang -emit-llvm -o cpp1.ll cpp1.cpp
clang -emit-llvm -S cpp1.bc cpp1.cpp
llvm-as -o cpp1.bc  cpp1.ll
lli cpp1.ll(bc)
llc -filetype=obj -o cpp1.o cpp1.bc(ll)
llc -filetype=asm(default) -o cpp1.s cpp1.bc(ll)

ld.lld --hash-style=both --eh-frame-hdr -m elf_x86_64 -dynamic-linker /lib64/ld-linux-x86-64.so.2 -o cpp1.exe /lib/x86_64-linux-gnu/crt1.o /lib/x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbegin.o -L/usr/lib/gcc/x86_64-linux-gnu/8 -L/usr/lib/gcc/x86_64-linux-gnu/8/../../../../lib64 -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -L/local-ssd/ppatil/installs/llvm1build/bin/../lib -L/lib -L/usr/lib cpp1.bc-llc.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/8/crtend.o /lib/x86_64-linux-gnu/crtn.o  --lto-O3


LD_PRELOAD:
http://www.goldsborough.me/c/low-level/kernel/2016/08/29/16-48-53-the_-ld_preload-_trick/#:~:text=Outro-,Introduction,shared%20library%20before%20other%20libraries.

/local-ssd/ppatil/installs/llvm1build/bin/clang++  -E/S/c  cpp1.cpp  -o cpp1 -Xclang -ast-view/-ast-dump/-emit-llvm
hardinfo : hardware info
lscpu

cat /sys/devices/system/cpu/cpu0/cache/index0/size 
cat /sys/devices/system/cpu/cpu0/cache/index0/coherency_line_size
index0: Level1Data 
index1: Level1Instruction 
index2: Level2 
index3: Level3
getconf LEVEL3_CACHE_LINESIZE
lscpu
getconf -a

sram: https://www.youtube.com/watch?v=mwNqzc1o5zM&ab_channel=UdacityUdacity
sram: transi
atx motherboard:

pci/pcie/agp/isa slots: exansion slots
ssl(143) vs ssh(22): secure socket layer, transport layer security, secure shell
public key infrastructure(PKI), digital certificates,
clang  -Xclang -ast-view c1.c
clang -Xclang -ast-dump  c1.c
cross compilation:https://www6.software.ibm.com/developerworks/education/l-cross/l-cross-ltr.pdf 
chip manufactures: intel vs amd
computer manufactures: apple, dell, hp, ibm, asus, lenova, samsung
software: microsoft, google, 
amd: advanced micro chips
compile with custom libc
 export env1=/opt/mylibc1;export lib1=$env1/lib;export include1=$env1/include;gcc -nostartfiles -I $include1 -L $lib1  $lib1/crt1.o $lib1/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o $lib1/crtn.o -Wl,-rpath=$lib1,-I$lib1/myld.so -lstdc++ -g  -o out1 c1.c(pp)

 export env1=/opt/musl1;export lib1=$env1/lib;export include1=$env1/include;gcc -nostartfiles -I $include1 -L $lib1  $lib1/crt1.o $lib1/crti.o /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o $lib1/crtn.o -Wl,-rpath=$lib1,-I$lib1/myld.so -lstdc++ -g  -o out1 c1.c(nocpp)

python compiler: nitka, brython
stackless python
IIFE: immediately invokded function expression
linux set primary window or display in multi display systems: xrandr --output VNC-1 --primary --right-of VNC-0
cat /etc/os-release
cat /proc/version
cat /etc/debian-version
dpkg -S `which ld`
cat /proc/cpuinfo
gcc -Xlinker -rpath=/local-ssd/ppatil/installs/glibc1/ -Xlinker -I/local-ssd/ppatil/installs/glibc1/elf/ ../pppGitHub/c1.c  -o c1


advanates of little endian: 
1. casts are noop since address of 1(char),2(short/half),4(int/float/word),8(longint/double/doubleword/size/addr) byte int would be same
2. for 8 bit systems or for big integers/big integers: addition and subtraction can be pipelined or parallelized since lsb needs to
perform addition/subtraction before msb

load_elf_binary: linux calls to load elf binaries

ld is static linker, ld.so is loader and dynamic linker: 
https://unix.stackexchange.com/questions/438068/what-is-the-difference-between-the-runtime-linker-ld-so-and-the-prelink-progra


_dl_start_user: to debug ld.so 
https://sourceware.org/glibc/wiki/Debugging/Loader_Debugging#Debugging_With_an_Alternate_Loader
rpath vs -L : gcc : 
cat /etc/cpuinfo: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git/tree/arch/x86/include/asm/cpufeatures.h

https://www.microcontrollertips.com/difference-between-von-neumann-and-harvard-architectures/

alignment:https://www.geeksforgeeks.org/structure-member-alignment-padding-and-data-packing/ 
std::has_unique_object_representation
alignas
std::alignment_of
__attribute__((packed))


standardlayout object
p4 sync -N ...
info vtbl variable
sb -nosplash -nodesktop -r "sfnew;bdclose all"

exception handling: LSDA, CFI, personality function, unwind.h, setjmp, longjmp,
goto
-fPIC vs load time relocation
static library vs shared library. 
shared library can be statically linked (-fPIC) vs dynamic linked (load time relocation)
dynamically loaded
disadvantate of dynamicalled linked shared library:https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/
https://eli.thegreenplace.net/2011/11/03/position-independent-code-pic-in-shared-libraries/
1. non-sharable text section, ram usage increase since each exe that loads
library needs separate copy 2. text section needs writable, security 3. load time increases

can we relink shared library online?
.got: global offset table
.bss: block started by symbol
plt: procedure location table
https://reverseengineering.stackexchange.com/questions/1992/what-is-plt-got


info proc mapping
info sharedlibrary
https://reverseengineering.stackexchange.com/questions/6657/why-does-ldd-and-gdb-info-sharedlibrary-show-a-different-library-base-addr


cpsr: control pgogram status register
pc: program counter
sp: stack pointer
bp: base pointer
gpio: general purpose io
uart: universal asynchronous receiver trasmitter
isr: interrupt service routine
mmu: memory management unit i2c, spi: serial peripheral interface i2c: inter integrated circuit
echo $XDG_CURRENT_DESKTOP: debian current desktop  mate,kde,xfce,gnome,
man hier : show linux file folder root hierarchy
FHS: Filesystem Hierarchy Standard
web server interfaces: cgi: common gateway interface :mod_php, java servlets, python WSGI, ruby rack
sbin: superuser bin files
/opt vs /usr/local

https://www.debian.org/doc/manuals/debian-faq/pkgtools.en.html: apt install;apt
install;apt show;apt list --upgradable; apt list packagename; apt list; apt show
packagename; dpkg --search xxx;dpkg --listfiles packagename

find -L / -samefile path/to/foo.txt

get macros:g++ -dM -E -x c++ /dev/null 
libc dietlibc uclibc eglibc musl


custom libc with gcc
export env1=/opt/musl1;export lib1=$env1/lib;export include1=$env1/include;gcc -g -o c1 -nostdlib c1.c -I $include1 -L $lib1  -Xlinker $lib1/crt1.o -Xlinker $lib1/crti.o -lc  -Xlinker -rpath=$lib1 -Xlinker -I $lib1/ld-musl-x86_64.so.1 -Xlinker $lib1/crtn.o 
custom libc with g++
export env1=/opt/mylibc1;export lib1=$env1/lib;export include1=$env1/include;g++  -nostdlib  -I $include1 -L $lib1  -Xlinker $lib1/crt1.o -Xlinker $lib1/crti.o   /usr/lib/gcc/x86_64-linux-gnu/8/crtbeginS.o -lstdc++ -lc  /usr/lib/gcc/x86_64-linux-gnu/8/crtendS.o -Xlinker -rpath=$lib1 -Xlinker -I $lib1/myld.so -Xlinker $lib1/crtn.o -nostdlib -o cpp1 cpp1.cpp


crt1.o crti.o crtn.o:https://wiki.osdev.org/Creating_a_C_Library 

fpie fpic :https://stackoverflow.com/questions/2463150/what-is-the-fpie-option-for-position-independent-executables-in-gcc-and-ld 

return oriented programming attacks:https://en.wikipedia.org/wiki/Return-oriented_programming 

compression: xz, lzma, gzip, bzip2 https://unix.stackexchange.com/questions/108100/why-are-tar-archive-formats-switching-to-xz-compression-to-replace-bzip2-and-wha

tar -xf or tar -xjf (bzip2)
linux package: bc: arbitrary precision calculator, xz-utils: compression,











matlab/src/sl_graphical_classes/export/include/sl_graphical_classes/RegisterModelParameters.hpp
allslfeature=slf_feature('report');
slflist= slfeature('query','stateflow');
mw runlikebat -testlist test/toolbox/stateflow/sf_in_matlab/bug_fixes/tg1879530_BPonCommentedTransition.m -interactive -logs /tmp/asvs
slfeature('ListSetAndSave',1);get_param(blockPathOrModel,'ObjectParameters');%to see all(active,hidden,featured-off,obsolote) parameters
get_param(blockPathOrModel,'DialogParameters');
get_param(blockPathOrModel,'IntrinsicDialogParameters');
get_param(blockPathOrModel,'AlgorithmParameters');
get_param(blockPathOrModel,'SecondaryAlgorithmParameters');
get_param(0, 'CurrentSystem');
SLPrmDescTypes.hpp contains paramcategory and paramtypes
hdldispmdlparams('augustlearn1','all')
hdlset_param hdlget_param
parameters:
https://www.technblogy.com/2020/12/30/get-the-parameters-of-simulink-block/
get(get_param(<modelname>,'handle'))

get_param(blockH, 'parent') vs getfullname(blockH)
get_param(blockH, 'ReferenceBlock')

getSimulinkBlockHandle(blockPath) vs get_param(blockPath, 'handle')
TTT: mainmodel->lib1(notopened)->lib2(opened,breakpoint)
chartInstance = sf('GetSFBlockData', SFblockH);  
TTT: rtwOptimizationInfo g1290447 how is it used in rtw and rapidaccel
TTT:prs_overide_data_type can be short-circuited based on fixptOverride
cdr_data_set_props_with_resolve_type: can be better written  like below
 if (S==nullptr)                  {resolve_type;errorOnFailure;return;}
 resoveBuiltIns{cdr_data_type_from_name_no_default, returnOnSuccess;}
 if (typeStr startsWith 'fixdt(') {cdr_evaluate_expression(slResolve); returnOnSuccess;}
 resolveExpression{cdr_data_set_props_from_sl_type(ssRegisterTypeFromExprNoError);}
 errorOrFailure;
 %note: there is not much difference between slResolve and ssRegisterTypeFromExprNoError

fixdt: unspecified scaling(fixdt(1,16) or best precision(based on min/max): SL supports except for bus fields, SF does not support 

we could replace:MAKE_USTRINGSTREAM(sizeBufStream) with auto sizeBufStream = fl::io::make_ustringstream();
validatedvector could use copyconstructor/init method taking std::vector<T>
what happens when P1 (param) data size in SF is set using P1 itself (works)
obsolete features: SF_NEW_SIZE_METHOD BUS_ARRAYS

https://inside.mathworks.com/wiki/Category:Native_Memory_Diagnostics  memmgr feature('memmgr')

GDB ptype
GDB whatis


sf('get',dataId,'data.parsedInfo.type.base') is stale even after compile, 
to refresh above, c=sf('IdToHandle,dataId);c.parsedInfo.type.base;
accessing mcos/udd data copies data->getParsedInfo() to data->parsedInfo

q1_findCoverage: do we need do parse0 to find out if we are using temporal operators
q1_findCoverage:  // Process inherited types (may use registered bus types)

prs_set_flags_from_data_properties: complexity seems different than size/type

sfunction input: (0) data (port) (1) atomic subchart data(l->o) (2) sl function data (3) events (port)
sfunction output: (0) demux (1) data(port) (2) Trigger event(port) (3) atomic subchart Trigger event (4) atomic subchart data(l->i,o->i) (5) slfunction data
demux output: (0) function call event(port) (2) atomic subchart fcn event (3) SL function Fcn Call

CAL parameter data tunable: grayed out, but can be enabled/disabled via command line: if enabled: sim: regenerates code when value changes but CG: works correctly
CAL l/o data with initfromworkspace: sim: works i.e. does not regenerates code when param value changes in workspace

set_inherited_data_properties_into_chart_io_data does not belong to propagate_info_to_atomic_subchart_io

set breakpoints in mdl* methods in stateflow_mdl_methods.stubs and  enable: debugbuild and nonjit
for jit, some of mdl* methods in sf_sfun.cpp are called at runtime.

for inherited inputs, mdlPropagationPass(dimensions) is called twice.

Simulink.importExternalCTypes

continuous charts generate seperate outputs functions even though it never is used.

continuous charts do not serialize jit engine. hence closing and opening model with continuous chart regenerates code

registerSimulinkFunctionsCalledByChart has some unnecessary code in for loop

model params: TargetStyle, SimulationMode, RapidAcceleratorSimStatus, ModelReferenceTargetType, SimulationStatus, 

curiousbly recurring template pattern
type erasure: boost::any_range

v=feature('diagnosticSpec','sf::cdr.*=all');
v=feature('diagnosticDest','file=mylogfile.txt');
http://inside-files.mathworks.com/dev/ltc/doxygen/Bfl/html/user_view/foundation/log/src/log/
Foundation logger/mwlogger uses Boost.log
https://www.boost.org/doc/libs/1_59_0/libs/log/doc/html/index.html


http://inside.mathworks.com/wiki/OUT_OF_MODEL.mk

https://stackoverflow.com/questions/210835/what-is-referential-transparency
vim: :e->reload, :e!->reload+discardLocalChanges

c++ exception safety guarantee

record_SF_known_struct_types_recursively : not required
 StdCdrEmlApi::setCdrModuleInfo: has if branch which should be in the caller

fDataCGTypeMap is not allocated on dummyCdrModuleInfo during propagation which means, during propatation cgtype are not reused.

cdr_cg_struct_or_enum_type_from_data : how does hdl/clientserver work for two isntances of library chart with different input struct type. since simstruct is not available, we just rely on data->parsedInfo which is not instance specific

getSSIDFromObjectId chart_is_eml can be used instead in first if

chart.eml.f2fConfig when does it get set in cdr_eml_infer_chart

MAL chart output variable size data(size=n) initial values have to match size of data(n). for CAL, it can be of of size 1-n

MAL variable-size: supported. dynamic memory can be specified for ml-function-locals but not required
CAL variable-size: only accessed in MLFcn/TTMLFcn/SLFcn. also dynamic memory is required for code-gen

MAL unbounded: supported. featured off. not sure about codegen supported(?)
CAL unbounded: not supported.

MAL symbolic size: not supported
CAL symbolic size: supported, but not-supported if data is var-size

cdr_eml_infer_chart: do we need cdrModuleInfo->createSymbols() here;

cdr_nodedef::getInputType : not clear why known type is marked as double

std::reference_wrapper motivation: https://www.nextptr.com/tutorial/ta1441164581/stdref-and-stdreference_wrapper-common-use-cases
std::vector<std::reference_wrapper<int>>
not allowed:std::vector<const int>,std::vector<int&> as T in std::vector<T> requires assignable
std::get retruns reference_wrapper. reference_wrapper can returns T& with get()
auto i = 1;auto r = std::ref(i); r.get()=12;

std::conditional_t

inherited class method with same name but different prototype hides(not override) the base method.

expr: [1,2]: eml after parse_function: #matrix(#vcat($1,$2) what is type of #matrix here

during propagation size inference, if any input type is not known, we set all inputs(except bus) to be real. input type of bus is always known before size pass. it happens during after mdlInitializeSizes
above process happens for complexity also. during size prop-inference, if we don't know any input complexity, we set all input to be real. bus/enum/string don't have compexity.

in cdr_update_types_against_inference_results, after propagation inference, we only throw errors if output t/s/c is inferred, unambiguous, have user specified value and mismatch with user-speciefied value. 
so if output type is fully specified, it won't throw error even if one of the statements is wrong (e.g. outputDouble2Real=inputDouble3Real) as output is not inferred in this case.

DCE: errorOnUnresolvedSymbolsInChart->createEmptyStubsForIntrinsics->
DCE: PropagationManager::errorOnUnresolvedSymbols->constructCoders



CTB
shared_cgxe
foundation/matrix
cgir_vm_rt
cgir_vm_core
shared_simulink_lang_blocks
sl_utility
sl_compile
sl_services
sl_graphical_classes
sl_loadsave
https://web.microsoftstream.com/video/ce9533af-63a6-423b-a4e2-9a050e12ef11

commands
cgxe('Feature','evil') cgxe('getJITEngines');cgxemgr.cpp has all the cgxe internal api list

to be learned
jit
vvir
llvm
lint
atomic subcharts
continuous charts
gdb
eml
sfir
cgir
cgxe
mlfb
parser/lexer
ast
sbcc
mex/mxarray
model references/
c promotion rules
unicode, ascii, ustring, cgstring, std::string, char*
old
https://inside.mathworks.com/wiki/Category:Software_Performance_Tools source_to_text http://inside.mathworks.com/wiki/Generating_C++_Source-To-Test_Mapping#Determine_which_tests_cover_a_function.2Fcondition

https://eli.thegreenplace.net/2012/01/03/understanding-the-x64-code-models/

http://inside.mathworks.com/wiki/String_Development_Guide gdb:

GDB printf "%s",CG::EffectTools::toString(this).c_str()
GDB set print elements 0

GDB p &(this->fEffects)
GDB p *(*long*)$5
GDB watch *(long*) $5
GDB p binfo GDB cond breakpointnumber i == 99 GDB info breakpoints GDB info watchpoints


p4v -> edit -> preferences -> Applet -> Check "Allow perforce applets to run in Helix P4V"  Click Apply and Okay. Close p4v and restart p4v. Now click  View->Review Board. This should add a new tab in p4v for ReviewBoard(RB)

Simulink.ExtMode.CtrlPanel.createExtModeCtrlPanelForModel('model2') simulink compiler appdesigner: https://reviewboard.mathworks.com/r/523541/

webapps: install license manager (lmgrd), download license of web app from https://inside-labs.mathworks.com/dev/it_tracker/install/passcodes.html and add following lines at the top SERVER ah-ppatil-l ID=0 27000 DAEMON MLM /mathworks/devel/sandbox/ppatil/switchProperties1/matlab/etc/glnxa64/MLM

Connecting to windows vm sbrdesktop AD.MATHWORKS.COM/ppatil

java exit: //mathworks/devel/sandbox/ppatil/_sbbackup/sbs_ppatil.jexitSfx1_backup/jexitsfx1 qerunbptest g2292966;"

https://confluence.mathworks.com/pages/viewpage.action?spaceKey=CGIRDOC&title=Node+Semantics&REF=D59535FE0AAD8E72D3A45F8E956288F501C26BC821A8142CB3B900000004#NodeSemantics-MatrixRef

appdesigner sfx integration bindings: sbbackup -opened -l sfmlApp1Working
vmware shared folder ubuntu guest
 sudo vmhgfs-fuse -o nonempty -o allow_other .host:/data ./testmnt
a
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_VERBOSE_MAKEFILE=ON ../llvm -DLLVM_ENABLE_PROJECTS='clang;clang-tools-extra;lldb;compiler-rt;lld;polly'

$ sbmake -distcc DEBUG=1 CTB="sl_main simulinkcoder_capi stateflow_core"

Description	Command
misc commands	get current desktop environmet $echo $XDG_CURRENT_DESKTOP
sudo mount /dev/sdb1 /local-ssd
 sbmake -distcc DEBUG=1 CTB=matlab_desktop NOBUILDTESTS=1 NORUNTESTS=1
 mw sbprequal -F submit.txt -runallunder test/toolbox/stateflow/sf_in_matlab/cdr/negative/ -nochart  -levels all -logdir work/q1
sbmininclude
sbgensubmit -o submit2.txt -opened
mw sbreviewboard  -F submit2.txt  -create-all-images
japanese i18n sandbox
$ export LANG=ja_JP.utf8
$locale
 edit(fullfile(userpath, 'startup.m')) 
component dependency	
 mw ch findPath -f MATLAB -c stateflow sltemplate 
find last changelist for each line of file	
p4 annotate -I //mw/ClusterName/filePath#revision
p4 annotate -I //mw/Bstateflow/matlab/toolbox/stateflow/src/stateflow/cdr/LowerDuration.cpp#2
prefdir
sls_findparts('myfile.sfx')
p4 merge //mw/Bstateflow/...@=4055904 //mw/Bllvm/...
docroot /mathworks/devel/jobarchive/Bdoc18b/latest_pass/matlab/help
deploytool 
mw sbs snapshot create mysnapshotname
mw sbs clone create -from ppatil.sbsname -s mysnapshotname -n "newsbname"
mw -using Bmlcoder.j972079 reproduceSession -identifier http://trweb.mathworks.com/tr/result?id=8576154566
 Stateflow.Interface.JSController.debugMode(1)
cd $s/sandboxName/matlab;
mw perl pbr/bin/mkcdimages -source $(pwd) -dest $(pwd) -iso  -RC
cd $s/sandboxName;
mw sbinstallmatlab -from $(pwd) -to installDirFullPath -products Stateflow (Or "-named-lic dacore",for all products)
mw -using ClusterName sbinstallmatlab -from ClusterName -to InstallDirFullPath -products Stateflow
 open_system(gcb, 'evilsf')
p4 branch_unlock //mw/Bstateflow -allow ppatil
p4 branch_lock //mw/Bstateflow -reason “for fixing build failures”
sfc coder_options debugBuilds 1;
sfc coder_options forceDebugOff 1; 
sf feature evil;
slfeature('rtwcgir',6)
help slcg
evil_jit_settings -disable  
sf('Tesla', 1);  (deprecated)
sfc('coder_options','forceNonJitBuild',1) (we tell this api to customer)
sf('feature', 'Pretty print CGIR logs',0);
sfc coder_options debugBuilds 0;
sf feature developer on
p4 client -o
mw -using Bllvm sbs -c Bllvm -A sfxcoderA1 -hook altroot -n sfxcoderRoot
mw sbs -U
mw -using Bllvm sbs -c Bllvm -bac-client-force -j 1045749
mw -using Bllvm sbs -c Bllvm -A t30 -j 1043404
mw  sbs clone alias sfxCoder2_a1
mw sbs -u -alias t30
license commands	
mw -using R2022a sbinstallmatlab -from R2022a -to sflic2/ -products "MATLAB,Simulink,MATLAB Report Generator,Requirements Toolbox,Simulink Report Generator,Simulink Test,System Composer"
license('inuse')
license('inuse','productname')
ver
 feature('lmfeaturelist')
 feature ('lmsearchpath')
mw matlab -c licensefile
coder commands	
coder.const(@disp, class(dout));
p4 reset	
p4 sync -N matlab/...
mwuetest.getWindowTester(gcb).toolStripTester.showWidgetInfoAsToolTip(false)
generate baseline for a single testpoint	
evil_generate_baseline tDebuggingAdvanced -testspec:lvlTwo_DebuggerCheckSymbolsUIValue
Links
Description	Command	Tags
build area help	build-area
shared folder sudo apt install open-vm-tools open-vm-tools-desktop sudo mount -t fuse.vmhgfs-fuse .host:/ /mnt/hgfs -o allow_other sudo mkdir -p /mnt/hgfs

depviewer	
test selection in bat	
i18n	
locks on clusters	
changereach	
component search in clusters	
performance tests	
gui testing	
upt	
code coverage in BaT	
mockup state action language prompts	
model reference	
sbtools auto-complete	
p4 triggers	
ulcm	
mdlInitializePropagationPass

http://stateflow-00-deb9-64/mathworks/hub/share/sbtools/apps/nighthawk/ CDR_ChartCompiledInfo CDR_MachineCompiledInfo SF::CDR_IDC_Info

sfx MATLAB Coder issues 1. disp does not throw proper error

Navigation menu
Ppatil
0
2
TalkPreferencesWatchlistContributionsLog outPageDiscussionHide Left-NavReadEditEdit sourceView historyPrint as PDFUnwatch
More
Search
Search Wiki on Inside
Main Page
Categories
Category Cloud
Recent changes
Most Linked Pages
New Pages
Random Page
Help
Getting Started
Wiki Markup
Category:Help
Tools
What links here
Related changes
Upload File
Special pages
Printable version
Permanent link
Page information
Cite this page
This page was last modified 09:50, 15 March 2021 by Wiki on Inside user Ppatil.
Privacy policyAbout Wiki on InsideDisclaimersPowered by MediaWiki

label#1 bitset with enum
using namespace std;
class E1BS {
    public:
    enum bitEnum {
    E1_1,
    E1_2,
    E1_3,
    E1_4
    };
    E1BS(unsigned int i1):b1{i1}{}
    bitset<4> b1;
    E1BS& operator|(E1BS e){ b1 = b1 |e.b1;return *this;}
    bool operator[](bitEnum e){return b1[e];}
    void set(bitEnum e){b1.set(e);}
    void reset(bitEnum e){b1.reset(e);}
    bool test() {return false;}
    bool test(unsigned int e1) {return e1 == e1 & b1.to_ulong();}
    template <typename T, typename... Types> bool test(T var1, Types... var2) {
        return b1[var1] | test(var2...);
    }
};




Code_101
#include <boost/type_index.hpp>
#include <iostream>
#include<functional>
#include<type_traits>
using namespace std;
template <class T>
void foo(T&&) {
    std::cout << "\n Short name: " << boost::typeindex::type_id<T>().raw_name();
    std::cout << "\n Readable name: " << boost::typeindex::type_id<T>().pretty_name() << std::endl;
}
struct s1{
    int i1;
    int i2;
};
struct s2{
    int i1;
    private:
    int i2;
};
struct s3{
    s3(){}
    int i1;
    int i2;
};
struct s4{
    ~s4(){}
    int i1;
    int i2;
};
struct s5{
    virtual void f1(){}
    int i1;
    int i2;
};
struct s6{
    private:
    int i1;
    int i2;
};
enum class E1{E11};
struct s7{
    E1 i1;
    int j1[3][7];
    int i2;
};

template<typename T>
void f1(T t1,const char* t2) {
    cout << "                   "  << typeid(T).name() << ": " << t2 << endl;
    cout << "is_standard_layout: " << is_standard_layout<T>::value << endl; 
    cout << "is_aggregate:       " << is_aggregate<T>::value << endl; 
    cout << "is_trivial:         " << is_trivial<T>::value << endl; 
    cout << "is_literal_type:    " << is_literal_type<T>::value << endl; 
    cout << "is_pod:             " << is_pod<T>::value << endl; 
}
int main() {
    s1 s1v={1,2};
    s2 s2v;
    s3 s3v;
    s4 s4v={1,2};
    s5 s5v;
    s6 s6v;
    s7 s7v;
    f1(s1v,"nothing");
    f1(s2v,"private-public");
    f1(s3v,"constructor");
    f1(s4v,"destructor");
    f1(s5v,"virtual function");
    f1(s6v,"all private");
    f1(s7v,"enum member");
    
}





Code_102
evil_purgedir('all');y2=sim(modelName,'SimulationMode','normal');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','accel');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','rapid');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','software');
evil_purgedir('all');y2=sim(modelName,'SimulationMode','processor');
evil_purgedir('all');slbuild(modelName,'ModelReferenceSimTarget');%modelref:accelator %similar to rapid-accelerator for main model
evil_purgedir('all');slbuild(modelName,'ModelReferenceCoderTarget');%modelref:sil %%similar to rtwbuild or StandaloneCoderTarget or sil or rtwgen for main model
SL: normal(inline), acceleator(jit/mex)*, rapid^
SF: normal(jit/mex),accelerator(jit/mex)+,rapid^
*: set_param(0, 'GlobalUseClassicAccelMode', 'off');
+: sfc('coder_options','forceNonJitBuild',0)
^:set_param(0, 'GlobalUseClassicAccelMode', 'off');


evil_purgedir('all');slbuild(modelName,'StandaloneCoderTarget');%similar to 
in: fullfile(matlabroot,'toolbox/stateflow/coder/private/compute_target_info.m') at line 248
disp('-------------pass---begin---------');
disp(['Target: ', targetName]);
disp(['SimulationMode:', get_param(mainMachineName, 'SimulationMode')]);
disp(['RapidAcceleratorSimStatus:', get_param(mainMachineName, 'RapidAcceleratorSimStatus')]);
disp(['SystemTargetFile:', get_param(mainMachineName, 'SystemTargetFile')]);
targetProps = rtw_target_props(relevantMachineName);
if ~isempty(targetProps)
    % disp(targetProps);
    disp(['targetProps.dynamicStringBufferSize :', char(string(targetProps.dynamicStringBufferSize))]);
    disp(['targetProps.codingExtMode: ',char(string(double(targetProps.codingExtMode)))]);
    disp(['targetProps.systemTargetFile: ',targetProps.systemTargetFile]);
else
    disp('None: targetProps')
end

disp('-------------pass---end---------');


func! s:MakeGDBCommandLineVisibleAndInTerminalMode(msg)
    let curwinid = win_getid(winnr())
    call win_gotoid(s:gdbwin)
    let gdbwinmode= mode()
    if gdbwinmode != 't'
        normal! GA
    endif
    call win_gotoid(curwinid)
endfunc

func! s:OnGdbMainOutput(dict, chan, msg)
  if s:foundGdbPrompt
      if a:msg =~ '(gdb)'
          " GDB command is finished executing.
          call s:MakeGDBCommandLineVisibleAndInTerminalMode(a:msg)
      endif
      return
  endif



sb -r "sfnew;bdclose all" &
>> cd ~/Downloads/old1/stu18

gvim toolbox/simulink/hmi/sl_hmi/util/util.cpp toolbox/vision/src/scopes/VideoViewer.cpp toolbox/stateflow/src/stateflow/cdr/cdr_semantics_state.cpp toolbox/stateflow/src/sf_sfun/sf_sfun.cpp +306 &

breakpoint on util.cpp 290
brakpoint on VideoViewer.cpp 384

openExample('vision/TrackingMarkerUsingSimulinkImagesExample')
TrackingMarkerUsingSimulinkImagesExample

util.cpp 287




With GDB
(1)  (gdb) hybrid_stack
(2)  (gdb) pmxval mxArrayArg
     (gdb) pmxval mxArrayArg "field1(index).field2{cellarrayIndex}"
(3)  (gdb) pmstackval stacklevel comandtoEvalute


printf "%s", SF:printf "%s", SF::EvaluateCmdAtMATLABStackLevel(2,"status")
printf "%s", SF::GetMLValueStr(mxArrayArg,"")
printf "%s", SF::GetMLValueStr(mxArrayArg,".field1(index).field2{cellarrayindex}")


yes | sbsmartbuild -opened -ignore-failed-modules -lean -no-ch-validate  -no-sbindent-files-in-lockdown



polyspace bugfinder and coderprover
https://www.mathworks.com/help/bugfinder/gs/use-bug-finder-and-code-prover.html
https://www.mathworks.com/help/bugfinder/defect-reference.html
https://www.mathworks.com/help/codeprover/run-time-check-reference.html
function myrunpolyspace(modelBuildDir)
    %polyspacesetup('install');
    %polyspacesetup('uninstall');
    %polyspacesetup('showpolyspacefolders')
    proj = polyspace.Project;
    proj.Configuration.Sources = {fullfile(pwd, modelBuildDir,'mym1.c')};
    proj.Configuration.TargetCompiler.Compiler = 'gnu4.9';
    proj.Configuration.EnvironmentSettings.IncludeFolders = {fullfile(pwd, modelBuildDir)};
    proj.Configuration.ResultsDir = fullfile(pwd,'results');
    proj.run('codeProver');
    disp(proj.Results.getSummary('runtime'));    
    proj.run('bugFinder');
    disp(proj.Results.getSummary('defects'));
end
